// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type AddressInput struct {
	Street   string `json:"street"`
	Zip_code string `json:"zip_code"`
	Country  string `json:"country"`
	City     string `json:"city"`
}

// GetStreet returns AddressInput.Street, and is useful for accessing the field via an interface.
func (v *AddressInput) GetStreet() string { return v.Street }

// GetZip_code returns AddressInput.Zip_code, and is useful for accessing the field via an interface.
func (v *AddressInput) GetZip_code() string { return v.Zip_code }

// GetCountry returns AddressInput.Country, and is useful for accessing the field via an interface.
func (v *AddressInput) GetCountry() string { return v.Country }

// GetCity returns AddressInput.City, and is useful for accessing the field via an interface.
func (v *AddressInput) GetCity() string { return v.City }

type AppointmentStatus string

const (
	AppointmentStatusWaitingForReview    AppointmentStatus = "WAITING_FOR_REVIEW"
	AppointmentStatusAcceptedDueToReview AppointmentStatus = "ACCEPTED_DUE_TO_REVIEW"
	AppointmentStatusCanceledDueToReview AppointmentStatus = "CANCELED_DUE_TO_REVIEW"
	AppointmentStatusCanceled            AppointmentStatus = "CANCELED"
	AppointmentStatusOpened              AppointmentStatus = "OPENED"
)

type Category string

const (
	CategoryGeneral Category = "GENERAL"
	CategoryFinance Category = "FINANCE"
)

type ChatMessagesInput struct {
	Owner_id    string `json:"owner_id"`
	Message     string `json:"message"`
	Sended_time int    `json:"sended_time"`
}

// GetOwner_id returns ChatMessagesInput.Owner_id, and is useful for accessing the field via an interface.
func (v *ChatMessagesInput) GetOwner_id() string { return v.Owner_id }

// GetMessage returns ChatMessagesInput.Message, and is useful for accessing the field via an interface.
func (v *ChatMessagesInput) GetMessage() string { return v.Message }

// GetSended_time returns ChatMessagesInput.Sended_time, and is useful for accessing the field via an interface.
func (v *ChatMessagesInput) GetSended_time() int { return v.Sended_time }

type ChatParticipantsInput struct {
	Participant_id string `json:"participant_id"`
	Last_seen      int    `json:"last_seen"`
}

// GetParticipant_id returns ChatParticipantsInput.Participant_id, and is useful for accessing the field via an interface.
func (v *ChatParticipantsInput) GetParticipant_id() string { return v.Participant_id }

// GetLast_seen returns ChatParticipantsInput.Last_seen, and is useful for accessing the field via an interface.
func (v *ChatParticipantsInput) GetLast_seen() int { return v.Last_seen }

type ChirInducedSymptomInput struct {
	Symptom string  `json:"symptom"`
	Factor  float64 `json:"factor"`
}

// GetSymptom returns ChirInducedSymptomInput.Symptom, and is useful for accessing the field via an interface.
func (v *ChirInducedSymptomInput) GetSymptom() string { return v.Symptom }

// GetFactor returns ChirInducedSymptomInput.Factor, and is useful for accessing the field via an interface.
func (v *ChirInducedSymptomInput) GetFactor() float64 { return v.Factor }

// CreateAdminCreateAdmin includes the requested fields of the GraphQL type Admin.
type CreateAdminCreateAdmin struct {
	Id        string `json:"id"`
	Email     string `json:"email"`
	Password  string `json:"password"`
	Name      string `json:"name"`
	Last_name string `json:"last_name"`
}

// GetId returns CreateAdminCreateAdmin.Id, and is useful for accessing the field via an interface.
func (v *CreateAdminCreateAdmin) GetId() string { return v.Id }

// GetEmail returns CreateAdminCreateAdmin.Email, and is useful for accessing the field via an interface.
func (v *CreateAdminCreateAdmin) GetEmail() string { return v.Email }

// GetPassword returns CreateAdminCreateAdmin.Password, and is useful for accessing the field via an interface.
func (v *CreateAdminCreateAdmin) GetPassword() string { return v.Password }

// GetName returns CreateAdminCreateAdmin.Name, and is useful for accessing the field via an interface.
func (v *CreateAdminCreateAdmin) GetName() string { return v.Name }

// GetLast_name returns CreateAdminCreateAdmin.Last_name, and is useful for accessing the field via an interface.
func (v *CreateAdminCreateAdmin) GetLast_name() string { return v.Last_name }

// CreateAdminResponse is returned by CreateAdmin on success.
type CreateAdminResponse struct {
	CreateAdmin CreateAdminCreateAdmin `json:"createAdmin"`
}

// GetCreateAdmin returns CreateAdminResponse.CreateAdmin, and is useful for accessing the field via an interface.
func (v *CreateAdminResponse) GetCreateAdmin() CreateAdminCreateAdmin { return v.CreateAdmin }

// CreateAlertCreateAlert includes the requested fields of the GraphQL type Alert.
type CreateAlertCreateAlert struct {
	Id       string   `json:"id"`
	Name     string   `json:"name"`
	Sex      string   `json:"sex"`
	Height   int      `json:"height"`
	Weight   int      `json:"weight"`
	Symptoms []string `json:"symptoms"`
	Comment  string   `json:"comment"`
}

// GetId returns CreateAlertCreateAlert.Id, and is useful for accessing the field via an interface.
func (v *CreateAlertCreateAlert) GetId() string { return v.Id }

// GetName returns CreateAlertCreateAlert.Name, and is useful for accessing the field via an interface.
func (v *CreateAlertCreateAlert) GetName() string { return v.Name }

// GetSex returns CreateAlertCreateAlert.Sex, and is useful for accessing the field via an interface.
func (v *CreateAlertCreateAlert) GetSex() string { return v.Sex }

// GetHeight returns CreateAlertCreateAlert.Height, and is useful for accessing the field via an interface.
func (v *CreateAlertCreateAlert) GetHeight() int { return v.Height }

// GetWeight returns CreateAlertCreateAlert.Weight, and is useful for accessing the field via an interface.
func (v *CreateAlertCreateAlert) GetWeight() int { return v.Weight }

// GetSymptoms returns CreateAlertCreateAlert.Symptoms, and is useful for accessing the field via an interface.
func (v *CreateAlertCreateAlert) GetSymptoms() []string { return v.Symptoms }

// GetComment returns CreateAlertCreateAlert.Comment, and is useful for accessing the field via an interface.
func (v *CreateAlertCreateAlert) GetComment() string { return v.Comment }

// CreateAlertResponse is returned by CreateAlert on success.
type CreateAlertResponse struct {
	CreateAlert CreateAlertCreateAlert `json:"createAlert"`
}

// GetCreateAlert returns CreateAlertResponse.CreateAlert, and is useful for accessing the field via an interface.
func (v *CreateAlertResponse) GetCreateAlert() CreateAlertCreateAlert { return v.CreateAlert }

// CreateAnteChirCreateAnteChir includes the requested fields of the GraphQL type AnteChir.
type CreateAnteChirCreateAnteChir struct {
	Id               string                                                           `json:"id"`
	Name             string                                                           `json:"name"`
	Induced_symptoms []CreateAnteChirCreateAnteChirInduced_symptomsChirInducedSymptom `json:"induced_symptoms"`
}

// GetId returns CreateAnteChirCreateAnteChir.Id, and is useful for accessing the field via an interface.
func (v *CreateAnteChirCreateAnteChir) GetId() string { return v.Id }

// GetName returns CreateAnteChirCreateAnteChir.Name, and is useful for accessing the field via an interface.
func (v *CreateAnteChirCreateAnteChir) GetName() string { return v.Name }

// GetInduced_symptoms returns CreateAnteChirCreateAnteChir.Induced_symptoms, and is useful for accessing the field via an interface.
func (v *CreateAnteChirCreateAnteChir) GetInduced_symptoms() []CreateAnteChirCreateAnteChirInduced_symptomsChirInducedSymptom {
	return v.Induced_symptoms
}

// CreateAnteChirCreateAnteChirInduced_symptomsChirInducedSymptom includes the requested fields of the GraphQL type ChirInducedSymptom.
type CreateAnteChirCreateAnteChirInduced_symptomsChirInducedSymptom struct {
	Symptom string  `json:"symptom"`
	Factor  float64 `json:"factor"`
}

// GetSymptom returns CreateAnteChirCreateAnteChirInduced_symptomsChirInducedSymptom.Symptom, and is useful for accessing the field via an interface.
func (v *CreateAnteChirCreateAnteChirInduced_symptomsChirInducedSymptom) GetSymptom() string {
	return v.Symptom
}

// GetFactor returns CreateAnteChirCreateAnteChirInduced_symptomsChirInducedSymptom.Factor, and is useful for accessing the field via an interface.
func (v *CreateAnteChirCreateAnteChirInduced_symptomsChirInducedSymptom) GetFactor() float64 {
	return v.Factor
}

// CreateAnteChirResponse is returned by CreateAnteChir on success.
type CreateAnteChirResponse struct {
	CreateAnteChir CreateAnteChirCreateAnteChir `json:"createAnteChir"`
}

// GetCreateAnteChir returns CreateAnteChirResponse.CreateAnteChir, and is useful for accessing the field via an interface.
func (v *CreateAnteChirResponse) GetCreateAnteChir() CreateAnteChirCreateAnteChir {
	return v.CreateAnteChir
}

// CreateAnteDiseaseCreateAnteDisease includes the requested fields of the GraphQL type AnteDisease.
type CreateAnteDiseaseCreateAnteDisease struct {
	Id             string   `json:"id"`
	Name           string   `json:"name"`
	Chronicity     float64  `json:"chronicity"`
	Surgery_ids    []string `json:"surgery_ids"`
	Symptoms       []string `json:"symptoms"`
	Treatment_ids  []string `json:"treatment_ids"`
	Still_relevant bool     `json:"still_relevant"`
}

// GetId returns CreateAnteDiseaseCreateAnteDisease.Id, and is useful for accessing the field via an interface.
func (v *CreateAnteDiseaseCreateAnteDisease) GetId() string { return v.Id }

// GetName returns CreateAnteDiseaseCreateAnteDisease.Name, and is useful for accessing the field via an interface.
func (v *CreateAnteDiseaseCreateAnteDisease) GetName() string { return v.Name }

// GetChronicity returns CreateAnteDiseaseCreateAnteDisease.Chronicity, and is useful for accessing the field via an interface.
func (v *CreateAnteDiseaseCreateAnteDisease) GetChronicity() float64 { return v.Chronicity }

// GetSurgery_ids returns CreateAnteDiseaseCreateAnteDisease.Surgery_ids, and is useful for accessing the field via an interface.
func (v *CreateAnteDiseaseCreateAnteDisease) GetSurgery_ids() []string { return v.Surgery_ids }

// GetSymptoms returns CreateAnteDiseaseCreateAnteDisease.Symptoms, and is useful for accessing the field via an interface.
func (v *CreateAnteDiseaseCreateAnteDisease) GetSymptoms() []string { return v.Symptoms }

// GetTreatment_ids returns CreateAnteDiseaseCreateAnteDisease.Treatment_ids, and is useful for accessing the field via an interface.
func (v *CreateAnteDiseaseCreateAnteDisease) GetTreatment_ids() []string { return v.Treatment_ids }

// GetStill_relevant returns CreateAnteDiseaseCreateAnteDisease.Still_relevant, and is useful for accessing the field via an interface.
func (v *CreateAnteDiseaseCreateAnteDisease) GetStill_relevant() bool { return v.Still_relevant }

// CreateAnteDiseaseResponse is returned by CreateAnteDisease on success.
type CreateAnteDiseaseResponse struct {
	CreateAnteDisease CreateAnteDiseaseCreateAnteDisease `json:"createAnteDisease"`
}

// GetCreateAnteDisease returns CreateAnteDiseaseResponse.CreateAnteDisease, and is useful for accessing the field via an interface.
func (v *CreateAnteDiseaseResponse) GetCreateAnteDisease() CreateAnteDiseaseCreateAnteDisease {
	return v.CreateAnteDisease
}

// CreateAnteFamilyCreateAnteFamily includes the requested fields of the GraphQL type AnteFamily.
type CreateAnteFamilyCreateAnteFamily struct {
	Id      string   `json:"id"`
	Name    string   `json:"name"`
	Disease []string `json:"disease"`
}

// GetId returns CreateAnteFamilyCreateAnteFamily.Id, and is useful for accessing the field via an interface.
func (v *CreateAnteFamilyCreateAnteFamily) GetId() string { return v.Id }

// GetName returns CreateAnteFamilyCreateAnteFamily.Name, and is useful for accessing the field via an interface.
func (v *CreateAnteFamilyCreateAnteFamily) GetName() string { return v.Name }

// GetDisease returns CreateAnteFamilyCreateAnteFamily.Disease, and is useful for accessing the field via an interface.
func (v *CreateAnteFamilyCreateAnteFamily) GetDisease() []string { return v.Disease }

// CreateAnteFamilyResponse is returned by CreateAnteFamily on success.
type CreateAnteFamilyResponse struct {
	CreateAnteFamily CreateAnteFamilyCreateAnteFamily `json:"createAnteFamily"`
}

// GetCreateAnteFamily returns CreateAnteFamilyResponse.CreateAnteFamily, and is useful for accessing the field via an interface.
func (v *CreateAnteFamilyResponse) GetCreateAnteFamily() CreateAnteFamilyCreateAnteFamily {
	return v.CreateAnteFamily
}

// CreateBlackListCreateBlackList includes the requested fields of the GraphQL type BlackList.
type CreateBlackListCreateBlackList struct {
	Id    string   `json:"id"`
	Token []string `json:"token"`
}

// GetId returns CreateBlackListCreateBlackList.Id, and is useful for accessing the field via an interface.
func (v *CreateBlackListCreateBlackList) GetId() string { return v.Id }

// GetToken returns CreateBlackListCreateBlackList.Token, and is useful for accessing the field via an interface.
func (v *CreateBlackListCreateBlackList) GetToken() []string { return v.Token }

// CreateBlackListResponse is returned by CreateBlackList on success.
type CreateBlackListResponse struct {
	CreateBlackList CreateBlackListCreateBlackList `json:"createBlackList"`
}

// GetCreateBlackList returns CreateBlackListResponse.CreateBlackList, and is useful for accessing the field via an interface.
func (v *CreateBlackListResponse) GetCreateBlackList() CreateBlackListCreateBlackList {
	return v.CreateBlackList
}

// CreateChatCreateChat includes the requested fields of the GraphQL type Chat.
type CreateChatCreateChat struct {
	Id           string                             `json:"id"`
	Participants []CreateChatCreateChatParticipants `json:"participants"`
	Messages     []CreateChatCreateChatMessages     `json:"messages"`
}

// GetId returns CreateChatCreateChat.Id, and is useful for accessing the field via an interface.
func (v *CreateChatCreateChat) GetId() string { return v.Id }

// GetParticipants returns CreateChatCreateChat.Participants, and is useful for accessing the field via an interface.
func (v *CreateChatCreateChat) GetParticipants() []CreateChatCreateChatParticipants {
	return v.Participants
}

// GetMessages returns CreateChatCreateChat.Messages, and is useful for accessing the field via an interface.
func (v *CreateChatCreateChat) GetMessages() []CreateChatCreateChatMessages { return v.Messages }

// CreateChatCreateChatMessages includes the requested fields of the GraphQL type ChatMessages.
type CreateChatCreateChatMessages struct {
	Owner_id    string `json:"owner_id"`
	Message     string `json:"message"`
	Sended_time int    `json:"sended_time"`
}

// GetOwner_id returns CreateChatCreateChatMessages.Owner_id, and is useful for accessing the field via an interface.
func (v *CreateChatCreateChatMessages) GetOwner_id() string { return v.Owner_id }

// GetMessage returns CreateChatCreateChatMessages.Message, and is useful for accessing the field via an interface.
func (v *CreateChatCreateChatMessages) GetMessage() string { return v.Message }

// GetSended_time returns CreateChatCreateChatMessages.Sended_time, and is useful for accessing the field via an interface.
func (v *CreateChatCreateChatMessages) GetSended_time() int { return v.Sended_time }

// CreateChatCreateChatParticipants includes the requested fields of the GraphQL type ChatParticipants.
type CreateChatCreateChatParticipants struct {
	Participant_id string `json:"participant_id"`
	Last_seen      int    `json:"last_seen"`
}

// GetParticipant_id returns CreateChatCreateChatParticipants.Participant_id, and is useful for accessing the field via an interface.
func (v *CreateChatCreateChatParticipants) GetParticipant_id() string { return v.Participant_id }

// GetLast_seen returns CreateChatCreateChatParticipants.Last_seen, and is useful for accessing the field via an interface.
func (v *CreateChatCreateChatParticipants) GetLast_seen() int { return v.Last_seen }

// CreateChatResponse is returned by CreateChat on success.
type CreateChatResponse struct {
	CreateChat CreateChatCreateChat `json:"createChat"`
}

// GetCreateChat returns CreateChatResponse.CreateChat, and is useful for accessing the field via an interface.
func (v *CreateChatResponse) GetCreateChat() CreateChatCreateChat { return v.CreateChat }

// CreateDemoAccountCreateDemoAccount includes the requested fields of the GraphQL type DemoAccount.
type CreateDemoAccountCreateDemoAccount struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns CreateDemoAccountCreateDemoAccount.Id, and is useful for accessing the field via an interface.
func (v *CreateDemoAccountCreateDemoAccount) GetId() string { return v.Id }

// GetEmail returns CreateDemoAccountCreateDemoAccount.Email, and is useful for accessing the field via an interface.
func (v *CreateDemoAccountCreateDemoAccount) GetEmail() string { return v.Email }

// GetPassword returns CreateDemoAccountCreateDemoAccount.Password, and is useful for accessing the field via an interface.
func (v *CreateDemoAccountCreateDemoAccount) GetPassword() string { return v.Password }

// CreateDemoAccountResponse is returned by CreateDemoAccount on success.
type CreateDemoAccountResponse struct {
	CreateDemoAccount CreateDemoAccountCreateDemoAccount `json:"createDemoAccount"`
}

// GetCreateDemoAccount returns CreateDemoAccountResponse.CreateDemoAccount, and is useful for accessing the field via an interface.
func (v *CreateDemoAccountResponse) GetCreateDemoAccount() CreateDemoAccountCreateDemoAccount {
	return v.CreateDemoAccount
}

// CreateDeviceConnectCreateDeviceConnect includes the requested fields of the GraphQL type DeviceConnect.
type CreateDeviceConnectCreateDeviceConnect struct {
	Id           string  `json:"id"`
	Device_name  string  `json:"device_name"`
	Ip_address   string  `json:"ip_address"`
	Latitude     float64 `json:"latitude"`
	Longitude    float64 `json:"longitude"`
	Date         int     `json:"date"`
	Trust_device bool    `json:"trust_device"`
}

// GetId returns CreateDeviceConnectCreateDeviceConnect.Id, and is useful for accessing the field via an interface.
func (v *CreateDeviceConnectCreateDeviceConnect) GetId() string { return v.Id }

// GetDevice_name returns CreateDeviceConnectCreateDeviceConnect.Device_name, and is useful for accessing the field via an interface.
func (v *CreateDeviceConnectCreateDeviceConnect) GetDevice_name() string { return v.Device_name }

// GetIp_address returns CreateDeviceConnectCreateDeviceConnect.Ip_address, and is useful for accessing the field via an interface.
func (v *CreateDeviceConnectCreateDeviceConnect) GetIp_address() string { return v.Ip_address }

// GetLatitude returns CreateDeviceConnectCreateDeviceConnect.Latitude, and is useful for accessing the field via an interface.
func (v *CreateDeviceConnectCreateDeviceConnect) GetLatitude() float64 { return v.Latitude }

// GetLongitude returns CreateDeviceConnectCreateDeviceConnect.Longitude, and is useful for accessing the field via an interface.
func (v *CreateDeviceConnectCreateDeviceConnect) GetLongitude() float64 { return v.Longitude }

// GetDate returns CreateDeviceConnectCreateDeviceConnect.Date, and is useful for accessing the field via an interface.
func (v *CreateDeviceConnectCreateDeviceConnect) GetDate() int { return v.Date }

// GetTrust_device returns CreateDeviceConnectCreateDeviceConnect.Trust_device, and is useful for accessing the field via an interface.
func (v *CreateDeviceConnectCreateDeviceConnect) GetTrust_device() bool { return v.Trust_device }

// CreateDeviceConnectResponse is returned by CreateDeviceConnect on success.
type CreateDeviceConnectResponse struct {
	CreateDeviceConnect CreateDeviceConnectCreateDeviceConnect `json:"createDeviceConnect"`
}

// GetCreateDeviceConnect returns CreateDeviceConnectResponse.CreateDeviceConnect, and is useful for accessing the field via an interface.
func (v *CreateDeviceConnectResponse) GetCreateDeviceConnect() CreateDeviceConnectCreateDeviceConnect {
	return v.CreateDeviceConnect
}

// CreateDiseaseCreateDisease includes the requested fields of the GraphQL type Disease.
type CreateDiseaseCreateDisease struct {
	Id                string                                                    `json:"id"`
	Code              string                                                    `json:"code"`
	Name              string                                                    `json:"name"`
	Symptoms          []string                                                  `json:"symptoms"`
	Symptoms_weight   []CreateDiseaseCreateDiseaseSymptoms_weightSymptomsWeight `json:"symptoms_weight"`
	Overweight_factor float64                                                   `json:"overweight_factor"`
	Advice            string                                                    `json:"advice"`
}

// GetId returns CreateDiseaseCreateDisease.Id, and is useful for accessing the field via an interface.
func (v *CreateDiseaseCreateDisease) GetId() string { return v.Id }

// GetCode returns CreateDiseaseCreateDisease.Code, and is useful for accessing the field via an interface.
func (v *CreateDiseaseCreateDisease) GetCode() string { return v.Code }

// GetName returns CreateDiseaseCreateDisease.Name, and is useful for accessing the field via an interface.
func (v *CreateDiseaseCreateDisease) GetName() string { return v.Name }

// GetSymptoms returns CreateDiseaseCreateDisease.Symptoms, and is useful for accessing the field via an interface.
func (v *CreateDiseaseCreateDisease) GetSymptoms() []string { return v.Symptoms }

// GetSymptoms_weight returns CreateDiseaseCreateDisease.Symptoms_weight, and is useful for accessing the field via an interface.
func (v *CreateDiseaseCreateDisease) GetSymptoms_weight() []CreateDiseaseCreateDiseaseSymptoms_weightSymptomsWeight {
	return v.Symptoms_weight
}

// GetOverweight_factor returns CreateDiseaseCreateDisease.Overweight_factor, and is useful for accessing the field via an interface.
func (v *CreateDiseaseCreateDisease) GetOverweight_factor() float64 { return v.Overweight_factor }

// GetAdvice returns CreateDiseaseCreateDisease.Advice, and is useful for accessing the field via an interface.
func (v *CreateDiseaseCreateDisease) GetAdvice() string { return v.Advice }

// CreateDiseaseCreateDiseaseSymptoms_weightSymptomsWeight includes the requested fields of the GraphQL type SymptomsWeight.
type CreateDiseaseCreateDiseaseSymptoms_weightSymptomsWeight struct {
	Symptom string  `json:"symptom"`
	Value   float64 `json:"value"`
	Chronic bool    `json:"chronic"`
}

// GetSymptom returns CreateDiseaseCreateDiseaseSymptoms_weightSymptomsWeight.Symptom, and is useful for accessing the field via an interface.
func (v *CreateDiseaseCreateDiseaseSymptoms_weightSymptomsWeight) GetSymptom() string {
	return v.Symptom
}

// GetValue returns CreateDiseaseCreateDiseaseSymptoms_weightSymptomsWeight.Value, and is useful for accessing the field via an interface.
func (v *CreateDiseaseCreateDiseaseSymptoms_weightSymptomsWeight) GetValue() float64 { return v.Value }

// GetChronic returns CreateDiseaseCreateDiseaseSymptoms_weightSymptomsWeight.Chronic, and is useful for accessing the field via an interface.
func (v *CreateDiseaseCreateDiseaseSymptoms_weightSymptomsWeight) GetChronic() bool { return v.Chronic }

// CreateDiseaseResponse is returned by CreateDisease on success.
type CreateDiseaseResponse struct {
	CreateDisease CreateDiseaseCreateDisease `json:"createDisease"`
}

// GetCreateDisease returns CreateDiseaseResponse.CreateDisease, and is useful for accessing the field via an interface.
func (v *CreateDiseaseResponse) GetCreateDisease() CreateDiseaseCreateDisease { return v.CreateDisease }

// CreateDoctorCreateDoctor includes the requested fields of the GraphQL type Doctor.
type CreateDoctorCreateDoctor struct {
	Id              string                          `json:"id"`
	Email           string                          `json:"email"`
	Password        string                          `json:"password"`
	Name            string                          `json:"name"`
	Firstname       string                          `json:"firstname"`
	Address         CreateDoctorCreateDoctorAddress `json:"address"`
	Rendez_vous_ids []string                        `json:"rendez_vous_ids"`
	Patient_ids     []string                        `json:"patient_ids"`
	Chat_ids        []string                        `json:"chat_ids"`
}

// GetId returns CreateDoctorCreateDoctor.Id, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctor) GetId() string { return v.Id }

// GetEmail returns CreateDoctorCreateDoctor.Email, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctor) GetEmail() string { return v.Email }

// GetPassword returns CreateDoctorCreateDoctor.Password, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctor) GetPassword() string { return v.Password }

// GetName returns CreateDoctorCreateDoctor.Name, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctor) GetName() string { return v.Name }

// GetFirstname returns CreateDoctorCreateDoctor.Firstname, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctor) GetFirstname() string { return v.Firstname }

// GetAddress returns CreateDoctorCreateDoctor.Address, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctor) GetAddress() CreateDoctorCreateDoctorAddress { return v.Address }

// GetRendez_vous_ids returns CreateDoctorCreateDoctor.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctor) GetRendez_vous_ids() []string { return v.Rendez_vous_ids }

// GetPatient_ids returns CreateDoctorCreateDoctor.Patient_ids, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctor) GetPatient_ids() []string { return v.Patient_ids }

// GetChat_ids returns CreateDoctorCreateDoctor.Chat_ids, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctor) GetChat_ids() []string { return v.Chat_ids }

// CreateDoctorCreateDoctorAddress includes the requested fields of the GraphQL type Address.
type CreateDoctorCreateDoctorAddress struct {
	Street   string `json:"street"`
	Zip_code string `json:"zip_code"`
	Country  string `json:"country"`
}

// GetStreet returns CreateDoctorCreateDoctorAddress.Street, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctorAddress) GetStreet() string { return v.Street }

// GetZip_code returns CreateDoctorCreateDoctorAddress.Zip_code, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctorAddress) GetZip_code() string { return v.Zip_code }

// GetCountry returns CreateDoctorCreateDoctorAddress.Country, and is useful for accessing the field via an interface.
func (v *CreateDoctorCreateDoctorAddress) GetCountry() string { return v.Country }

// CreateDoctorResponse is returned by CreateDoctor on success.
type CreateDoctorResponse struct {
	CreateDoctor CreateDoctorCreateDoctor `json:"createDoctor"`
}

// GetCreateDoctor returns CreateDoctorResponse.CreateDoctor, and is useful for accessing the field via an interface.
func (v *CreateDoctorResponse) GetCreateDoctor() CreateDoctorCreateDoctor { return v.CreateDoctor }

// CreateDocumentCreateDocument includes the requested fields of the GraphQL type Document.
type CreateDocumentCreateDocument struct {
	Id            string       `json:"id"`
	Owner_id      string       `json:"owner_id"`
	Name          string       `json:"name"`
	Document_type DocumentType `json:"document_type"`
	Category      Category     `json:"category"`
	Is_favorite   bool         `json:"is_favorite"`
	Download_url  string       `json:"download_url"`
}

// GetId returns CreateDocumentCreateDocument.Id, and is useful for accessing the field via an interface.
func (v *CreateDocumentCreateDocument) GetId() string { return v.Id }

// GetOwner_id returns CreateDocumentCreateDocument.Owner_id, and is useful for accessing the field via an interface.
func (v *CreateDocumentCreateDocument) GetOwner_id() string { return v.Owner_id }

// GetName returns CreateDocumentCreateDocument.Name, and is useful for accessing the field via an interface.
func (v *CreateDocumentCreateDocument) GetName() string { return v.Name }

// GetDocument_type returns CreateDocumentCreateDocument.Document_type, and is useful for accessing the field via an interface.
func (v *CreateDocumentCreateDocument) GetDocument_type() DocumentType { return v.Document_type }

// GetCategory returns CreateDocumentCreateDocument.Category, and is useful for accessing the field via an interface.
func (v *CreateDocumentCreateDocument) GetCategory() Category { return v.Category }

// GetIs_favorite returns CreateDocumentCreateDocument.Is_favorite, and is useful for accessing the field via an interface.
func (v *CreateDocumentCreateDocument) GetIs_favorite() bool { return v.Is_favorite }

// GetDownload_url returns CreateDocumentCreateDocument.Download_url, and is useful for accessing the field via an interface.
func (v *CreateDocumentCreateDocument) GetDownload_url() string { return v.Download_url }

// CreateDocumentResponse is returned by CreateDocument on success.
type CreateDocumentResponse struct {
	CreateDocument CreateDocumentCreateDocument `json:"createDocument"`
}

// GetCreateDocument returns CreateDocumentResponse.CreateDocument, and is useful for accessing the field via an interface.
func (v *CreateDocumentResponse) GetCreateDocument() CreateDocumentCreateDocument {
	return v.CreateDocument
}

// CreateDoubleAuthCreateDoubleAuth includes the requested fields of the GraphQL type DoubleAuth.
type CreateDoubleAuthCreateDoubleAuth struct {
	Id              string   `json:"id"`
	Methods         []string `json:"methods"`
	Secret          string   `json:"secret"`
	Url             string   `json:"url"`
	Trust_device_id string   `json:"trust_device_id"`
}

// GetId returns CreateDoubleAuthCreateDoubleAuth.Id, and is useful for accessing the field via an interface.
func (v *CreateDoubleAuthCreateDoubleAuth) GetId() string { return v.Id }

// GetMethods returns CreateDoubleAuthCreateDoubleAuth.Methods, and is useful for accessing the field via an interface.
func (v *CreateDoubleAuthCreateDoubleAuth) GetMethods() []string { return v.Methods }

// GetSecret returns CreateDoubleAuthCreateDoubleAuth.Secret, and is useful for accessing the field via an interface.
func (v *CreateDoubleAuthCreateDoubleAuth) GetSecret() string { return v.Secret }

// GetUrl returns CreateDoubleAuthCreateDoubleAuth.Url, and is useful for accessing the field via an interface.
func (v *CreateDoubleAuthCreateDoubleAuth) GetUrl() string { return v.Url }

// GetTrust_device_id returns CreateDoubleAuthCreateDoubleAuth.Trust_device_id, and is useful for accessing the field via an interface.
func (v *CreateDoubleAuthCreateDoubleAuth) GetTrust_device_id() string { return v.Trust_device_id }

// CreateDoubleAuthResponse is returned by CreateDoubleAuth on success.
type CreateDoubleAuthResponse struct {
	CreateDoubleAuth CreateDoubleAuthCreateDoubleAuth `json:"createDoubleAuth"`
}

// GetCreateDoubleAuth returns CreateDoubleAuthResponse.CreateDoubleAuth, and is useful for accessing the field via an interface.
func (v *CreateDoubleAuthResponse) GetCreateDoubleAuth() CreateDoubleAuthCreateDoubleAuth {
	return v.CreateDoubleAuth
}

// CreateMedicalFolderCreateMedicalFolderMedicalInfo includes the requested fields of the GraphQL type MedicalInfo.
type CreateMedicalFolderCreateMedicalFolderMedicalInfo struct {
	Id                     string           `json:"id"`
	Name                   string           `json:"name"`
	Firstname              string           `json:"firstname"`
	Birthdate              int              `json:"birthdate"`
	Sex                    Sex              `json:"sex"`
	Height                 int              `json:"height"`
	Weight                 int              `json:"weight"`
	Primary_doctor_id      string           `json:"primary_doctor_id"`
	Antecedent_disease_ids []string         `json:"antecedent_disease_ids"`
	Onboarding_status      OnboardingStatus `json:"onboarding_status"`
}

// GetId returns CreateMedicalFolderCreateMedicalFolderMedicalInfo.Id, and is useful for accessing the field via an interface.
func (v *CreateMedicalFolderCreateMedicalFolderMedicalInfo) GetId() string { return v.Id }

// GetName returns CreateMedicalFolderCreateMedicalFolderMedicalInfo.Name, and is useful for accessing the field via an interface.
func (v *CreateMedicalFolderCreateMedicalFolderMedicalInfo) GetName() string { return v.Name }

// GetFirstname returns CreateMedicalFolderCreateMedicalFolderMedicalInfo.Firstname, and is useful for accessing the field via an interface.
func (v *CreateMedicalFolderCreateMedicalFolderMedicalInfo) GetFirstname() string { return v.Firstname }

// GetBirthdate returns CreateMedicalFolderCreateMedicalFolderMedicalInfo.Birthdate, and is useful for accessing the field via an interface.
func (v *CreateMedicalFolderCreateMedicalFolderMedicalInfo) GetBirthdate() int { return v.Birthdate }

// GetSex returns CreateMedicalFolderCreateMedicalFolderMedicalInfo.Sex, and is useful for accessing the field via an interface.
func (v *CreateMedicalFolderCreateMedicalFolderMedicalInfo) GetSex() Sex { return v.Sex }

// GetHeight returns CreateMedicalFolderCreateMedicalFolderMedicalInfo.Height, and is useful for accessing the field via an interface.
func (v *CreateMedicalFolderCreateMedicalFolderMedicalInfo) GetHeight() int { return v.Height }

// GetWeight returns CreateMedicalFolderCreateMedicalFolderMedicalInfo.Weight, and is useful for accessing the field via an interface.
func (v *CreateMedicalFolderCreateMedicalFolderMedicalInfo) GetWeight() int { return v.Weight }

// GetPrimary_doctor_id returns CreateMedicalFolderCreateMedicalFolderMedicalInfo.Primary_doctor_id, and is useful for accessing the field via an interface.
func (v *CreateMedicalFolderCreateMedicalFolderMedicalInfo) GetPrimary_doctor_id() string {
	return v.Primary_doctor_id
}

// GetAntecedent_disease_ids returns CreateMedicalFolderCreateMedicalFolderMedicalInfo.Antecedent_disease_ids, and is useful for accessing the field via an interface.
func (v *CreateMedicalFolderCreateMedicalFolderMedicalInfo) GetAntecedent_disease_ids() []string {
	return v.Antecedent_disease_ids
}

// GetOnboarding_status returns CreateMedicalFolderCreateMedicalFolderMedicalInfo.Onboarding_status, and is useful for accessing the field via an interface.
func (v *CreateMedicalFolderCreateMedicalFolderMedicalInfo) GetOnboarding_status() OnboardingStatus {
	return v.Onboarding_status
}

// CreateMedicalFolderResponse is returned by CreateMedicalFolder on success.
type CreateMedicalFolderResponse struct {
	CreateMedicalFolder CreateMedicalFolderCreateMedicalFolderMedicalInfo `json:"createMedicalFolder"`
}

// GetCreateMedicalFolder returns CreateMedicalFolderResponse.CreateMedicalFolder, and is useful for accessing the field via an interface.
func (v *CreateMedicalFolderResponse) GetCreateMedicalFolder() CreateMedicalFolderCreateMedicalFolderMedicalInfo {
	return v.CreateMedicalFolder
}

// CreateMedicineCreateMedicine includes the requested fields of the GraphQL type Medicine.
type CreateMedicineCreateMedicine struct {
	Id               string       `json:"id"`
	Name             string       `json:"name"`
	Unit             MedicineUnit `json:"unit"`
	Target_diseases  []string     `json:"target_diseases"`
	Treated_symptoms []string     `json:"treated_symptoms"`
	Side_effects     []string     `json:"side_effects"`
}

// GetId returns CreateMedicineCreateMedicine.Id, and is useful for accessing the field via an interface.
func (v *CreateMedicineCreateMedicine) GetId() string { return v.Id }

// GetName returns CreateMedicineCreateMedicine.Name, and is useful for accessing the field via an interface.
func (v *CreateMedicineCreateMedicine) GetName() string { return v.Name }

// GetUnit returns CreateMedicineCreateMedicine.Unit, and is useful for accessing the field via an interface.
func (v *CreateMedicineCreateMedicine) GetUnit() MedicineUnit { return v.Unit }

// GetTarget_diseases returns CreateMedicineCreateMedicine.Target_diseases, and is useful for accessing the field via an interface.
func (v *CreateMedicineCreateMedicine) GetTarget_diseases() []string { return v.Target_diseases }

// GetTreated_symptoms returns CreateMedicineCreateMedicine.Treated_symptoms, and is useful for accessing the field via an interface.
func (v *CreateMedicineCreateMedicine) GetTreated_symptoms() []string { return v.Treated_symptoms }

// GetSide_effects returns CreateMedicineCreateMedicine.Side_effects, and is useful for accessing the field via an interface.
func (v *CreateMedicineCreateMedicine) GetSide_effects() []string { return v.Side_effects }

// CreateMedicineResponse is returned by CreateMedicine on success.
type CreateMedicineResponse struct {
	CreateMedicine CreateMedicineCreateMedicine `json:"createMedicine"`
}

// GetCreateMedicine returns CreateMedicineResponse.CreateMedicine, and is useful for accessing the field via an interface.
func (v *CreateMedicineResponse) GetCreateMedicine() CreateMedicineCreateMedicine {
	return v.CreateMedicine
}

// CreateNotificationCreateNotification includes the requested fields of the GraphQL type Notification.
type CreateNotificationCreateNotification struct {
	Id      string `json:"id"`
	Token   string `json:"token"`
	Title   string `json:"title"`
	Message string `json:"message"`
}

// GetId returns CreateNotificationCreateNotification.Id, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotification) GetId() string { return v.Id }

// GetToken returns CreateNotificationCreateNotification.Token, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotification) GetToken() string { return v.Token }

// GetTitle returns CreateNotificationCreateNotification.Title, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotification) GetTitle() string { return v.Title }

// GetMessage returns CreateNotificationCreateNotification.Message, and is useful for accessing the field via an interface.
func (v *CreateNotificationCreateNotification) GetMessage() string { return v.Message }

// CreateNotificationResponse is returned by CreateNotification on success.
type CreateNotificationResponse struct {
	CreateNotification CreateNotificationCreateNotification `json:"createNotification"`
}

// GetCreateNotification returns CreateNotificationResponse.CreateNotification, and is useful for accessing the field via an interface.
func (v *CreateNotificationResponse) GetCreateNotification() CreateNotificationCreateNotification {
	return v.CreateNotification
}

// CreatePatientCreatePatient includes the requested fields of the GraphQL type Patient.
type CreatePatientCreatePatient struct {
	Id                      string   `json:"id"`
	Email                   string   `json:"email"`
	Password                string   `json:"password"`
	Rendez_vous_ids         []string `json:"rendez_vous_ids"`
	Medical_info_id         string   `json:"medical_info_id"`
	Document_ids            []string `json:"document_ids"`
	Treatment_follow_up_ids []string `json:"treatment_follow_up_ids"`
	Chat_ids                []string `json:"chat_ids"`
	Device_connect          []string `json:"device_connect"`
	Double_auth_methods_id  string   `json:"double_auth_methods_id"`
}

// GetId returns CreatePatientCreatePatient.Id, and is useful for accessing the field via an interface.
func (v *CreatePatientCreatePatient) GetId() string { return v.Id }

// GetEmail returns CreatePatientCreatePatient.Email, and is useful for accessing the field via an interface.
func (v *CreatePatientCreatePatient) GetEmail() string { return v.Email }

// GetPassword returns CreatePatientCreatePatient.Password, and is useful for accessing the field via an interface.
func (v *CreatePatientCreatePatient) GetPassword() string { return v.Password }

// GetRendez_vous_ids returns CreatePatientCreatePatient.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *CreatePatientCreatePatient) GetRendez_vous_ids() []string { return v.Rendez_vous_ids }

// GetMedical_info_id returns CreatePatientCreatePatient.Medical_info_id, and is useful for accessing the field via an interface.
func (v *CreatePatientCreatePatient) GetMedical_info_id() string { return v.Medical_info_id }

// GetDocument_ids returns CreatePatientCreatePatient.Document_ids, and is useful for accessing the field via an interface.
func (v *CreatePatientCreatePatient) GetDocument_ids() []string { return v.Document_ids }

// GetTreatment_follow_up_ids returns CreatePatientCreatePatient.Treatment_follow_up_ids, and is useful for accessing the field via an interface.
func (v *CreatePatientCreatePatient) GetTreatment_follow_up_ids() []string {
	return v.Treatment_follow_up_ids
}

// GetChat_ids returns CreatePatientCreatePatient.Chat_ids, and is useful for accessing the field via an interface.
func (v *CreatePatientCreatePatient) GetChat_ids() []string { return v.Chat_ids }

// GetDevice_connect returns CreatePatientCreatePatient.Device_connect, and is useful for accessing the field via an interface.
func (v *CreatePatientCreatePatient) GetDevice_connect() []string { return v.Device_connect }

// GetDouble_auth_methods_id returns CreatePatientCreatePatient.Double_auth_methods_id, and is useful for accessing the field via an interface.
func (v *CreatePatientCreatePatient) GetDouble_auth_methods_id() string {
	return v.Double_auth_methods_id
}

// CreatePatientResponse is returned by CreatePatient on success.
type CreatePatientResponse struct {
	CreatePatient CreatePatientCreatePatient `json:"createPatient"`
}

// GetCreatePatient returns CreatePatientResponse.CreatePatient, and is useful for accessing the field via an interface.
func (v *CreatePatientResponse) GetCreatePatient() CreatePatientCreatePatient { return v.CreatePatient }

// CreateRdvCreateRdv includes the requested fields of the GraphQL type Rdv.
type CreateRdvCreateRdv struct {
	Id                 string            `json:"id"`
	Doctor_id          string            `json:"doctor_id"`
	Id_patient         string            `json:"id_patient"`
	Start_date         int               `json:"start_date"`
	End_date           int               `json:"end_date"`
	Cancelation_reason string            `json:"cancelation_reason"`
	Appointment_status AppointmentStatus `json:"appointment_status"`
	Session_id         string            `json:"session_id"`
	Health_method      string            `json:"health_method"`
}

// GetId returns CreateRdvCreateRdv.Id, and is useful for accessing the field via an interface.
func (v *CreateRdvCreateRdv) GetId() string { return v.Id }

// GetDoctor_id returns CreateRdvCreateRdv.Doctor_id, and is useful for accessing the field via an interface.
func (v *CreateRdvCreateRdv) GetDoctor_id() string { return v.Doctor_id }

// GetId_patient returns CreateRdvCreateRdv.Id_patient, and is useful for accessing the field via an interface.
func (v *CreateRdvCreateRdv) GetId_patient() string { return v.Id_patient }

// GetStart_date returns CreateRdvCreateRdv.Start_date, and is useful for accessing the field via an interface.
func (v *CreateRdvCreateRdv) GetStart_date() int { return v.Start_date }

// GetEnd_date returns CreateRdvCreateRdv.End_date, and is useful for accessing the field via an interface.
func (v *CreateRdvCreateRdv) GetEnd_date() int { return v.End_date }

// GetCancelation_reason returns CreateRdvCreateRdv.Cancelation_reason, and is useful for accessing the field via an interface.
func (v *CreateRdvCreateRdv) GetCancelation_reason() string { return v.Cancelation_reason }

// GetAppointment_status returns CreateRdvCreateRdv.Appointment_status, and is useful for accessing the field via an interface.
func (v *CreateRdvCreateRdv) GetAppointment_status() AppointmentStatus { return v.Appointment_status }

// GetSession_id returns CreateRdvCreateRdv.Session_id, and is useful for accessing the field via an interface.
func (v *CreateRdvCreateRdv) GetSession_id() string { return v.Session_id }

// GetHealth_method returns CreateRdvCreateRdv.Health_method, and is useful for accessing the field via an interface.
func (v *CreateRdvCreateRdv) GetHealth_method() string { return v.Health_method }

// CreateRdvResponse is returned by CreateRdv on success.
type CreateRdvResponse struct {
	CreateRdv CreateRdvCreateRdv `json:"createRdv"`
}

// GetCreateRdv returns CreateRdvResponse.CreateRdv, and is useful for accessing the field via an interface.
func (v *CreateRdvResponse) GetCreateRdv() CreateRdvCreateRdv { return v.CreateRdv }

// CreateSessionCreateSession includes the requested fields of the GraphQL type Session.
type CreateSessionCreateSession struct {
	Id            string                                             `json:"id"`
	Diseases      []CreateSessionCreateSessionDiseases               `json:"diseases"`
	Symptoms      []CreateSessionCreateSessionSymptomsSessionSymptom `json:"symptoms"`
	Age           int                                                `json:"age"`
	Height        int                                                `json:"height"`
	Weight        int                                                `json:"weight"`
	Sex           string                                             `json:"sex"`
	Ante_chirs    []string                                           `json:"ante_chirs"`
	Ante_diseases []string                                           `json:"ante_diseases"`
	Medicine      []string                                           `json:"medicine"`
	Last_question string                                             `json:"last_question"`
	Logs          []CreateSessionCreateSessionLogs                   `json:"logs"`
	Alerts        []string                                           `json:"alerts"`
}

// GetId returns CreateSessionCreateSession.Id, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetId() string { return v.Id }

// GetDiseases returns CreateSessionCreateSession.Diseases, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetDiseases() []CreateSessionCreateSessionDiseases {
	return v.Diseases
}

// GetSymptoms returns CreateSessionCreateSession.Symptoms, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetSymptoms() []CreateSessionCreateSessionSymptomsSessionSymptom {
	return v.Symptoms
}

// GetAge returns CreateSessionCreateSession.Age, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetAge() int { return v.Age }

// GetHeight returns CreateSessionCreateSession.Height, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetHeight() int { return v.Height }

// GetWeight returns CreateSessionCreateSession.Weight, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetWeight() int { return v.Weight }

// GetSex returns CreateSessionCreateSession.Sex, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetSex() string { return v.Sex }

// GetAnte_chirs returns CreateSessionCreateSession.Ante_chirs, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetAnte_chirs() []string { return v.Ante_chirs }

// GetAnte_diseases returns CreateSessionCreateSession.Ante_diseases, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetAnte_diseases() []string { return v.Ante_diseases }

// GetMedicine returns CreateSessionCreateSession.Medicine, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetMedicine() []string { return v.Medicine }

// GetLast_question returns CreateSessionCreateSession.Last_question, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetLast_question() string { return v.Last_question }

// GetLogs returns CreateSessionCreateSession.Logs, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetLogs() []CreateSessionCreateSessionLogs { return v.Logs }

// GetAlerts returns CreateSessionCreateSession.Alerts, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSession) GetAlerts() []string { return v.Alerts }

// CreateSessionCreateSessionDiseases includes the requested fields of the GraphQL type SessionDiseases.
type CreateSessionCreateSessionDiseases struct {
	Name             string  `json:"name"`
	Presence         float64 `json:"presence"`
	Unknown_presence float64 `json:"unknown_presence"`
}

// GetName returns CreateSessionCreateSessionDiseases.Name, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSessionDiseases) GetName() string { return v.Name }

// GetPresence returns CreateSessionCreateSessionDiseases.Presence, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSessionDiseases) GetPresence() float64 { return v.Presence }

// GetUnknown_presence returns CreateSessionCreateSessionDiseases.Unknown_presence, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSessionDiseases) GetUnknown_presence() float64 { return v.Unknown_presence }

// CreateSessionCreateSessionLogs includes the requested fields of the GraphQL type Logs.
type CreateSessionCreateSessionLogs struct {
	Question string `json:"question"`
	Answer   string `json:"answer"`
}

// GetQuestion returns CreateSessionCreateSessionLogs.Question, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSessionLogs) GetQuestion() string { return v.Question }

// GetAnswer returns CreateSessionCreateSessionLogs.Answer, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSessionLogs) GetAnswer() string { return v.Answer }

// CreateSessionCreateSessionSymptomsSessionSymptom includes the requested fields of the GraphQL type SessionSymptom.
type CreateSessionCreateSessionSymptomsSessionSymptom struct {
	Name     string   `json:"name"`
	Presence int      `json:"presence"`
	Duration int      `json:"duration"`
	Treated  []string `json:"treated"`
}

// GetName returns CreateSessionCreateSessionSymptomsSessionSymptom.Name, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSessionSymptomsSessionSymptom) GetName() string { return v.Name }

// GetPresence returns CreateSessionCreateSessionSymptomsSessionSymptom.Presence, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSessionSymptomsSessionSymptom) GetPresence() int { return v.Presence }

// GetDuration returns CreateSessionCreateSessionSymptomsSessionSymptom.Duration, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSessionSymptomsSessionSymptom) GetDuration() int { return v.Duration }

// GetTreated returns CreateSessionCreateSessionSymptomsSessionSymptom.Treated, and is useful for accessing the field via an interface.
func (v *CreateSessionCreateSessionSymptomsSessionSymptom) GetTreated() []string { return v.Treated }

// CreateSessionResponse is returned by CreateSession on success.
type CreateSessionResponse struct {
	CreateSession CreateSessionCreateSession `json:"createSession"`
}

// GetCreateSession returns CreateSessionResponse.CreateSession, and is useful for accessing the field via an interface.
func (v *CreateSessionResponse) GetCreateSession() CreateSessionCreateSession { return v.CreateSession }

// CreateSymptomCreateSymptom includes the requested fields of the GraphQL type Symptom.
type CreateSymptomCreateSymptom struct {
	Id                string   `json:"id"`
	Code              string   `json:"code"`
	Name              string   `json:"name"`
	Chronic           int      `json:"chronic"`
	Symptom           []string `json:"symptom"`
	Advice            string   `json:"advice"`
	Question          string   `json:"question"`
	Question_basic    string   `json:"question_basic"`
	Question_duration string   `json:"question_duration"`
	Question_ante     string   `json:"question_ante"`
}

// GetId returns CreateSymptomCreateSymptom.Id, and is useful for accessing the field via an interface.
func (v *CreateSymptomCreateSymptom) GetId() string { return v.Id }

// GetCode returns CreateSymptomCreateSymptom.Code, and is useful for accessing the field via an interface.
func (v *CreateSymptomCreateSymptom) GetCode() string { return v.Code }

// GetName returns CreateSymptomCreateSymptom.Name, and is useful for accessing the field via an interface.
func (v *CreateSymptomCreateSymptom) GetName() string { return v.Name }

// GetChronic returns CreateSymptomCreateSymptom.Chronic, and is useful for accessing the field via an interface.
func (v *CreateSymptomCreateSymptom) GetChronic() int { return v.Chronic }

// GetSymptom returns CreateSymptomCreateSymptom.Symptom, and is useful for accessing the field via an interface.
func (v *CreateSymptomCreateSymptom) GetSymptom() []string { return v.Symptom }

// GetAdvice returns CreateSymptomCreateSymptom.Advice, and is useful for accessing the field via an interface.
func (v *CreateSymptomCreateSymptom) GetAdvice() string { return v.Advice }

// GetQuestion returns CreateSymptomCreateSymptom.Question, and is useful for accessing the field via an interface.
func (v *CreateSymptomCreateSymptom) GetQuestion() string { return v.Question }

// GetQuestion_basic returns CreateSymptomCreateSymptom.Question_basic, and is useful for accessing the field via an interface.
func (v *CreateSymptomCreateSymptom) GetQuestion_basic() string { return v.Question_basic }

// GetQuestion_duration returns CreateSymptomCreateSymptom.Question_duration, and is useful for accessing the field via an interface.
func (v *CreateSymptomCreateSymptom) GetQuestion_duration() string { return v.Question_duration }

// GetQuestion_ante returns CreateSymptomCreateSymptom.Question_ante, and is useful for accessing the field via an interface.
func (v *CreateSymptomCreateSymptom) GetQuestion_ante() string { return v.Question_ante }

// CreateSymptomResponse is returned by CreateSymptom on success.
type CreateSymptomResponse struct {
	CreateSymptom CreateSymptomCreateSymptom `json:"createSymptom"`
}

// GetCreateSymptom returns CreateSymptomResponse.CreateSymptom, and is useful for accessing the field via an interface.
func (v *CreateSymptomResponse) GetCreateSymptom() CreateSymptomCreateSymptom { return v.CreateSymptom }

// CreateTestAccountCreateTestAccount includes the requested fields of the GraphQL type TestAccount.
type CreateTestAccountCreateTestAccount struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns CreateTestAccountCreateTestAccount.Id, and is useful for accessing the field via an interface.
func (v *CreateTestAccountCreateTestAccount) GetId() string { return v.Id }

// GetEmail returns CreateTestAccountCreateTestAccount.Email, and is useful for accessing the field via an interface.
func (v *CreateTestAccountCreateTestAccount) GetEmail() string { return v.Email }

// GetPassword returns CreateTestAccountCreateTestAccount.Password, and is useful for accessing the field via an interface.
func (v *CreateTestAccountCreateTestAccount) GetPassword() string { return v.Password }

// CreateTestAccountResponse is returned by CreateTestAccount on success.
type CreateTestAccountResponse struct {
	CreateTestAccount CreateTestAccountCreateTestAccount `json:"createTestAccount"`
}

// GetCreateTestAccount returns CreateTestAccountResponse.CreateTestAccount, and is useful for accessing the field via an interface.
func (v *CreateTestAccountResponse) GetCreateTestAccount() CreateTestAccountCreateTestAccount {
	return v.CreateTestAccount
}

// CreateTreatmentCreateTreatment includes the requested fields of the GraphQL type Treatment.
type CreateTreatmentCreateTreatment struct {
	Id          string   `json:"id"`
	Period      []Period `json:"period"`
	Day         []Day    `json:"day"`
	Quantity    int      `json:"quantity"`
	Medicine_id string   `json:"medicine_id"`
}

// GetId returns CreateTreatmentCreateTreatment.Id, and is useful for accessing the field via an interface.
func (v *CreateTreatmentCreateTreatment) GetId() string { return v.Id }

// GetPeriod returns CreateTreatmentCreateTreatment.Period, and is useful for accessing the field via an interface.
func (v *CreateTreatmentCreateTreatment) GetPeriod() []Period { return v.Period }

// GetDay returns CreateTreatmentCreateTreatment.Day, and is useful for accessing the field via an interface.
func (v *CreateTreatmentCreateTreatment) GetDay() []Day { return v.Day }

// GetQuantity returns CreateTreatmentCreateTreatment.Quantity, and is useful for accessing the field via an interface.
func (v *CreateTreatmentCreateTreatment) GetQuantity() int { return v.Quantity }

// GetMedicine_id returns CreateTreatmentCreateTreatment.Medicine_id, and is useful for accessing the field via an interface.
func (v *CreateTreatmentCreateTreatment) GetMedicine_id() string { return v.Medicine_id }

// CreateTreatmentResponse is returned by CreateTreatment on success.
type CreateTreatmentResponse struct {
	CreateTreatment CreateTreatmentCreateTreatment `json:"createTreatment"`
}

// GetCreateTreatment returns CreateTreatmentResponse.CreateTreatment, and is useful for accessing the field via an interface.
func (v *CreateTreatmentResponse) GetCreateTreatment() CreateTreatmentCreateTreatment {
	return v.CreateTreatment
}

// CreateTreatmentsFollowUpCreateTreatmentsFollowUp includes the requested fields of the GraphQL type TreatmentsFollowUp.
type CreateTreatmentsFollowUpCreateTreatmentsFollowUp struct {
	Id           string   `json:"id"`
	Treatment_id string   `json:"treatment_id"`
	Date         int      `json:"date"`
	Period       []Period `json:"period"`
}

// GetId returns CreateTreatmentsFollowUpCreateTreatmentsFollowUp.Id, and is useful for accessing the field via an interface.
func (v *CreateTreatmentsFollowUpCreateTreatmentsFollowUp) GetId() string { return v.Id }

// GetTreatment_id returns CreateTreatmentsFollowUpCreateTreatmentsFollowUp.Treatment_id, and is useful for accessing the field via an interface.
func (v *CreateTreatmentsFollowUpCreateTreatmentsFollowUp) GetTreatment_id() string {
	return v.Treatment_id
}

// GetDate returns CreateTreatmentsFollowUpCreateTreatmentsFollowUp.Date, and is useful for accessing the field via an interface.
func (v *CreateTreatmentsFollowUpCreateTreatmentsFollowUp) GetDate() int { return v.Date }

// GetPeriod returns CreateTreatmentsFollowUpCreateTreatmentsFollowUp.Period, and is useful for accessing the field via an interface.
func (v *CreateTreatmentsFollowUpCreateTreatmentsFollowUp) GetPeriod() []Period { return v.Period }

// CreateTreatmentsFollowUpResponse is returned by CreateTreatmentsFollowUp on success.
type CreateTreatmentsFollowUpResponse struct {
	CreateTreatmentsFollowUp CreateTreatmentsFollowUpCreateTreatmentsFollowUp `json:"createTreatmentsFollowUp"`
}

// GetCreateTreatmentsFollowUp returns CreateTreatmentsFollowUpResponse.CreateTreatmentsFollowUp, and is useful for accessing the field via an interface.
func (v *CreateTreatmentsFollowUpResponse) GetCreateTreatmentsFollowUp() CreateTreatmentsFollowUpCreateTreatmentsFollowUp {
	return v.CreateTreatmentsFollowUp
}

type Day string

const (
	DayMonday    Day = "MONDAY"
	DayTuesday   Day = "TUESDAY"
	DayWednesday Day = "WEDNESDAY"
	DayThursday  Day = "THURSDAY"
	DayFriday    Day = "FRIDAY"
	DaySaturday  Day = "SATURDAY"
	DaySunday    Day = "SUNDAY"
)

// DeleteAdminResponse is returned by DeleteAdmin on success.
type DeleteAdminResponse struct {
	DeleteAdmin bool `json:"deleteAdmin"`
}

// GetDeleteAdmin returns DeleteAdminResponse.DeleteAdmin, and is useful for accessing the field via an interface.
func (v *DeleteAdminResponse) GetDeleteAdmin() bool { return v.DeleteAdmin }

// DeleteAlertResponse is returned by DeleteAlert on success.
type DeleteAlertResponse struct {
	DeleteAlert bool `json:"deleteAlert"`
}

// GetDeleteAlert returns DeleteAlertResponse.DeleteAlert, and is useful for accessing the field via an interface.
func (v *DeleteAlertResponse) GetDeleteAlert() bool { return v.DeleteAlert }

// DeleteAnteChirResponse is returned by DeleteAnteChir on success.
type DeleteAnteChirResponse struct {
	DeleteAnteChir bool `json:"deleteAnteChir"`
}

// GetDeleteAnteChir returns DeleteAnteChirResponse.DeleteAnteChir, and is useful for accessing the field via an interface.
func (v *DeleteAnteChirResponse) GetDeleteAnteChir() bool { return v.DeleteAnteChir }

// DeleteAnteDiseaseResponse is returned by DeleteAnteDisease on success.
type DeleteAnteDiseaseResponse struct {
	DeleteAnteDisease bool `json:"deleteAnteDisease"`
}

// GetDeleteAnteDisease returns DeleteAnteDiseaseResponse.DeleteAnteDisease, and is useful for accessing the field via an interface.
func (v *DeleteAnteDiseaseResponse) GetDeleteAnteDisease() bool { return v.DeleteAnteDisease }

// DeleteAnteFamilyResponse is returned by DeleteAnteFamily on success.
type DeleteAnteFamilyResponse struct {
	DeleteAnteFamily bool `json:"deleteAnteFamily"`
}

// GetDeleteAnteFamily returns DeleteAnteFamilyResponse.DeleteAnteFamily, and is useful for accessing the field via an interface.
func (v *DeleteAnteFamilyResponse) GetDeleteAnteFamily() bool { return v.DeleteAnteFamily }

// DeleteBlackListResponse is returned by DeleteBlackList on success.
type DeleteBlackListResponse struct {
	DeleteDoubleAuth bool `json:"deleteDoubleAuth"`
}

// GetDeleteDoubleAuth returns DeleteBlackListResponse.DeleteDoubleAuth, and is useful for accessing the field via an interface.
func (v *DeleteBlackListResponse) GetDeleteDoubleAuth() bool { return v.DeleteDoubleAuth }

// DeleteChatResponse is returned by DeleteChat on success.
type DeleteChatResponse struct {
	DeleteChat bool `json:"deleteChat"`
}

// GetDeleteChat returns DeleteChatResponse.DeleteChat, and is useful for accessing the field via an interface.
func (v *DeleteChatResponse) GetDeleteChat() bool { return v.DeleteChat }

// DeleteDemoAccountResponse is returned by DeleteDemoAccount on success.
type DeleteDemoAccountResponse struct {
	DeleteDemoAccount bool `json:"deleteDemoAccount"`
}

// GetDeleteDemoAccount returns DeleteDemoAccountResponse.DeleteDemoAccount, and is useful for accessing the field via an interface.
func (v *DeleteDemoAccountResponse) GetDeleteDemoAccount() bool { return v.DeleteDemoAccount }

// DeleteDeviceConnectResponse is returned by DeleteDeviceConnect on success.
type DeleteDeviceConnectResponse struct {
	DeleteDeviceConnect bool `json:"deleteDeviceConnect"`
}

// GetDeleteDeviceConnect returns DeleteDeviceConnectResponse.DeleteDeviceConnect, and is useful for accessing the field via an interface.
func (v *DeleteDeviceConnectResponse) GetDeleteDeviceConnect() bool { return v.DeleteDeviceConnect }

// DeleteDiseaseResponse is returned by DeleteDisease on success.
type DeleteDiseaseResponse struct {
	DeleteDisease bool `json:"deleteDisease"`
}

// GetDeleteDisease returns DeleteDiseaseResponse.DeleteDisease, and is useful for accessing the field via an interface.
func (v *DeleteDiseaseResponse) GetDeleteDisease() bool { return v.DeleteDisease }

// DeleteDoctorResponse is returned by DeleteDoctor on success.
type DeleteDoctorResponse struct {
	DeleteDoctor bool `json:"deleteDoctor"`
}

// GetDeleteDoctor returns DeleteDoctorResponse.DeleteDoctor, and is useful for accessing the field via an interface.
func (v *DeleteDoctorResponse) GetDeleteDoctor() bool { return v.DeleteDoctor }

// DeleteDocumentResponse is returned by DeleteDocument on success.
type DeleteDocumentResponse struct {
	DeleteDocument bool `json:"deleteDocument"`
}

// GetDeleteDocument returns DeleteDocumentResponse.DeleteDocument, and is useful for accessing the field via an interface.
func (v *DeleteDocumentResponse) GetDeleteDocument() bool { return v.DeleteDocument }

// DeleteDoubleAuthResponse is returned by DeleteDoubleAuth on success.
type DeleteDoubleAuthResponse struct {
	DeleteDoubleAuth bool `json:"deleteDoubleAuth"`
}

// GetDeleteDoubleAuth returns DeleteDoubleAuthResponse.DeleteDoubleAuth, and is useful for accessing the field via an interface.
func (v *DeleteDoubleAuthResponse) GetDeleteDoubleAuth() bool { return v.DeleteDoubleAuth }

// DeleteMedicalFolderResponse is returned by DeleteMedicalFolder on success.
type DeleteMedicalFolderResponse struct {
	DeleteMedicalFolder bool `json:"deleteMedicalFolder"`
}

// GetDeleteMedicalFolder returns DeleteMedicalFolderResponse.DeleteMedicalFolder, and is useful for accessing the field via an interface.
func (v *DeleteMedicalFolderResponse) GetDeleteMedicalFolder() bool { return v.DeleteMedicalFolder }

// DeleteMedicineResponse is returned by DeleteMedicine on success.
type DeleteMedicineResponse struct {
	DeleteMedicine bool `json:"deleteMedicine"`
}

// GetDeleteMedicine returns DeleteMedicineResponse.DeleteMedicine, and is useful for accessing the field via an interface.
func (v *DeleteMedicineResponse) GetDeleteMedicine() bool { return v.DeleteMedicine }

// DeleteNotificationResponse is returned by DeleteNotification on success.
type DeleteNotificationResponse struct {
	DeleteNotification bool `json:"deleteNotification"`
}

// GetDeleteNotification returns DeleteNotificationResponse.DeleteNotification, and is useful for accessing the field via an interface.
func (v *DeleteNotificationResponse) GetDeleteNotification() bool { return v.DeleteNotification }

// DeletePatientResponse is returned by DeletePatient on success.
type DeletePatientResponse struct {
	DeletePatient bool `json:"deletePatient"`
}

// GetDeletePatient returns DeletePatientResponse.DeletePatient, and is useful for accessing the field via an interface.
func (v *DeletePatientResponse) GetDeletePatient() bool { return v.DeletePatient }

// DeleteRdvResponse is returned by DeleteRdv on success.
type DeleteRdvResponse struct {
	DeleteRdv bool `json:"deleteRdv"`
}

// GetDeleteRdv returns DeleteRdvResponse.DeleteRdv, and is useful for accessing the field via an interface.
func (v *DeleteRdvResponse) GetDeleteRdv() bool { return v.DeleteRdv }

// DeleteSessionResponse is returned by DeleteSession on success.
type DeleteSessionResponse struct {
	DeleteSession bool `json:"deleteSession"`
}

// GetDeleteSession returns DeleteSessionResponse.DeleteSession, and is useful for accessing the field via an interface.
func (v *DeleteSessionResponse) GetDeleteSession() bool { return v.DeleteSession }

// DeleteSlotResponse is returned by DeleteSlot on success.
type DeleteSlotResponse struct {
	DeleteSlot bool `json:"deleteSlot"`
}

// GetDeleteSlot returns DeleteSlotResponse.DeleteSlot, and is useful for accessing the field via an interface.
func (v *DeleteSlotResponse) GetDeleteSlot() bool { return v.DeleteSlot }

// DeleteSymptomResponse is returned by DeleteSymptom on success.
type DeleteSymptomResponse struct {
	DeleteSymptom bool `json:"deleteSymptom"`
}

// GetDeleteSymptom returns DeleteSymptomResponse.DeleteSymptom, and is useful for accessing the field via an interface.
func (v *DeleteSymptomResponse) GetDeleteSymptom() bool { return v.DeleteSymptom }

// DeleteTestAccountResponse is returned by DeleteTestAccount on success.
type DeleteTestAccountResponse struct {
	DeleteTestAccount bool `json:"deleteTestAccount"`
}

// GetDeleteTestAccount returns DeleteTestAccountResponse.DeleteTestAccount, and is useful for accessing the field via an interface.
func (v *DeleteTestAccountResponse) GetDeleteTestAccount() bool { return v.DeleteTestAccount }

// DeleteTreatmentResponse is returned by DeleteTreatment on success.
type DeleteTreatmentResponse struct {
	DeleteTreatment bool `json:"deleteTreatment"`
}

// GetDeleteTreatment returns DeleteTreatmentResponse.DeleteTreatment, and is useful for accessing the field via an interface.
func (v *DeleteTreatmentResponse) GetDeleteTreatment() bool { return v.DeleteTreatment }

// DeleteTreatmentsFollowUpResponse is returned by DeleteTreatmentsFollowUp on success.
type DeleteTreatmentsFollowUpResponse struct {
	DeleteTreatmentsFollowUp bool `json:"deleteTreatmentsFollowUp"`
}

// GetDeleteTreatmentsFollowUp returns DeleteTreatmentsFollowUpResponse.DeleteTreatmentsFollowUp, and is useful for accessing the field via an interface.
func (v *DeleteTreatmentsFollowUpResponse) GetDeleteTreatmentsFollowUp() bool {
	return v.DeleteTreatmentsFollowUp
}

type DocumentType string

const (
	DocumentTypeXray         DocumentType = "XRAY"
	DocumentTypePrescription DocumentType = "PRESCRIPTION"
	DocumentTypeOther        DocumentType = "OTHER"
	DocumentTypeCertificate  DocumentType = "CERTIFICATE"
)

// GetAdminByEmailGetAdminByEmailAdmin includes the requested fields of the GraphQL type Admin.
type GetAdminByEmailGetAdminByEmailAdmin struct {
	Id        string `json:"id"`
	Email     string `json:"email"`
	Password  string `json:"password"`
	Name      string `json:"name"`
	Last_name string `json:"last_name"`
}

// GetId returns GetAdminByEmailGetAdminByEmailAdmin.Id, and is useful for accessing the field via an interface.
func (v *GetAdminByEmailGetAdminByEmailAdmin) GetId() string { return v.Id }

// GetEmail returns GetAdminByEmailGetAdminByEmailAdmin.Email, and is useful for accessing the field via an interface.
func (v *GetAdminByEmailGetAdminByEmailAdmin) GetEmail() string { return v.Email }

// GetPassword returns GetAdminByEmailGetAdminByEmailAdmin.Password, and is useful for accessing the field via an interface.
func (v *GetAdminByEmailGetAdminByEmailAdmin) GetPassword() string { return v.Password }

// GetName returns GetAdminByEmailGetAdminByEmailAdmin.Name, and is useful for accessing the field via an interface.
func (v *GetAdminByEmailGetAdminByEmailAdmin) GetName() string { return v.Name }

// GetLast_name returns GetAdminByEmailGetAdminByEmailAdmin.Last_name, and is useful for accessing the field via an interface.
func (v *GetAdminByEmailGetAdminByEmailAdmin) GetLast_name() string { return v.Last_name }

// GetAdminByEmailResponse is returned by GetAdminByEmail on success.
type GetAdminByEmailResponse struct {
	GetAdminByEmail GetAdminByEmailGetAdminByEmailAdmin `json:"getAdminByEmail"`
}

// GetGetAdminByEmail returns GetAdminByEmailResponse.GetAdminByEmail, and is useful for accessing the field via an interface.
func (v *GetAdminByEmailResponse) GetGetAdminByEmail() GetAdminByEmailGetAdminByEmailAdmin {
	return v.GetAdminByEmail
}

// GetAdminByIdGetAdminByIdAdmin includes the requested fields of the GraphQL type Admin.
type GetAdminByIdGetAdminByIdAdmin struct {
	Id        string `json:"id"`
	Email     string `json:"email"`
	Password  string `json:"password"`
	Name      string `json:"name"`
	Last_name string `json:"last_name"`
}

// GetId returns GetAdminByIdGetAdminByIdAdmin.Id, and is useful for accessing the field via an interface.
func (v *GetAdminByIdGetAdminByIdAdmin) GetId() string { return v.Id }

// GetEmail returns GetAdminByIdGetAdminByIdAdmin.Email, and is useful for accessing the field via an interface.
func (v *GetAdminByIdGetAdminByIdAdmin) GetEmail() string { return v.Email }

// GetPassword returns GetAdminByIdGetAdminByIdAdmin.Password, and is useful for accessing the field via an interface.
func (v *GetAdminByIdGetAdminByIdAdmin) GetPassword() string { return v.Password }

// GetName returns GetAdminByIdGetAdminByIdAdmin.Name, and is useful for accessing the field via an interface.
func (v *GetAdminByIdGetAdminByIdAdmin) GetName() string { return v.Name }

// GetLast_name returns GetAdminByIdGetAdminByIdAdmin.Last_name, and is useful for accessing the field via an interface.
func (v *GetAdminByIdGetAdminByIdAdmin) GetLast_name() string { return v.Last_name }

// GetAdminByIdResponse is returned by GetAdminById on success.
type GetAdminByIdResponse struct {
	GetAdminById GetAdminByIdGetAdminByIdAdmin `json:"getAdminById"`
}

// GetGetAdminById returns GetAdminByIdResponse.GetAdminById, and is useful for accessing the field via an interface.
func (v *GetAdminByIdResponse) GetGetAdminById() GetAdminByIdGetAdminByIdAdmin { return v.GetAdminById }

// GetAdminsGetAdminsAdmin includes the requested fields of the GraphQL type Admin.
type GetAdminsGetAdminsAdmin struct {
	Id        string `json:"id"`
	Email     string `json:"email"`
	Password  string `json:"password"`
	Name      string `json:"name"`
	Last_name string `json:"last_name"`
}

// GetId returns GetAdminsGetAdminsAdmin.Id, and is useful for accessing the field via an interface.
func (v *GetAdminsGetAdminsAdmin) GetId() string { return v.Id }

// GetEmail returns GetAdminsGetAdminsAdmin.Email, and is useful for accessing the field via an interface.
func (v *GetAdminsGetAdminsAdmin) GetEmail() string { return v.Email }

// GetPassword returns GetAdminsGetAdminsAdmin.Password, and is useful for accessing the field via an interface.
func (v *GetAdminsGetAdminsAdmin) GetPassword() string { return v.Password }

// GetName returns GetAdminsGetAdminsAdmin.Name, and is useful for accessing the field via an interface.
func (v *GetAdminsGetAdminsAdmin) GetName() string { return v.Name }

// GetLast_name returns GetAdminsGetAdminsAdmin.Last_name, and is useful for accessing the field via an interface.
func (v *GetAdminsGetAdminsAdmin) GetLast_name() string { return v.Last_name }

// GetAdminsResponse is returned by GetAdmins on success.
type GetAdminsResponse struct {
	GetAdmins []GetAdminsGetAdminsAdmin `json:"getAdmins"`
}

// GetGetAdmins returns GetAdminsResponse.GetAdmins, and is useful for accessing the field via an interface.
func (v *GetAdminsResponse) GetGetAdmins() []GetAdminsGetAdminsAdmin { return v.GetAdmins }

// GetAlertByIdGetAlertByIdAlert includes the requested fields of the GraphQL type Alert.
type GetAlertByIdGetAlertByIdAlert struct {
	Id       string   `json:"id"`
	Name     string   `json:"name"`
	Sex      string   `json:"sex"`
	Height   int      `json:"height"`
	Weight   int      `json:"weight"`
	Symptoms []string `json:"symptoms"`
	Comment  string   `json:"comment"`
}

// GetId returns GetAlertByIdGetAlertByIdAlert.Id, and is useful for accessing the field via an interface.
func (v *GetAlertByIdGetAlertByIdAlert) GetId() string { return v.Id }

// GetName returns GetAlertByIdGetAlertByIdAlert.Name, and is useful for accessing the field via an interface.
func (v *GetAlertByIdGetAlertByIdAlert) GetName() string { return v.Name }

// GetSex returns GetAlertByIdGetAlertByIdAlert.Sex, and is useful for accessing the field via an interface.
func (v *GetAlertByIdGetAlertByIdAlert) GetSex() string { return v.Sex }

// GetHeight returns GetAlertByIdGetAlertByIdAlert.Height, and is useful for accessing the field via an interface.
func (v *GetAlertByIdGetAlertByIdAlert) GetHeight() int { return v.Height }

// GetWeight returns GetAlertByIdGetAlertByIdAlert.Weight, and is useful for accessing the field via an interface.
func (v *GetAlertByIdGetAlertByIdAlert) GetWeight() int { return v.Weight }

// GetSymptoms returns GetAlertByIdGetAlertByIdAlert.Symptoms, and is useful for accessing the field via an interface.
func (v *GetAlertByIdGetAlertByIdAlert) GetSymptoms() []string { return v.Symptoms }

// GetComment returns GetAlertByIdGetAlertByIdAlert.Comment, and is useful for accessing the field via an interface.
func (v *GetAlertByIdGetAlertByIdAlert) GetComment() string { return v.Comment }

// GetAlertByIdResponse is returned by GetAlertById on success.
type GetAlertByIdResponse struct {
	GetAlertById GetAlertByIdGetAlertByIdAlert `json:"getAlertById"`
}

// GetGetAlertById returns GetAlertByIdResponse.GetAlertById, and is useful for accessing the field via an interface.
func (v *GetAlertByIdResponse) GetGetAlertById() GetAlertByIdGetAlertByIdAlert { return v.GetAlertById }

// GetAlertsGetAlertsAlert includes the requested fields of the GraphQL type Alert.
type GetAlertsGetAlertsAlert struct {
	Id       string   `json:"id"`
	Name     string   `json:"name"`
	Sex      string   `json:"sex"`
	Height   int      `json:"height"`
	Weight   int      `json:"weight"`
	Symptoms []string `json:"symptoms"`
	Comment  string   `json:"comment"`
}

// GetId returns GetAlertsGetAlertsAlert.Id, and is useful for accessing the field via an interface.
func (v *GetAlertsGetAlertsAlert) GetId() string { return v.Id }

// GetName returns GetAlertsGetAlertsAlert.Name, and is useful for accessing the field via an interface.
func (v *GetAlertsGetAlertsAlert) GetName() string { return v.Name }

// GetSex returns GetAlertsGetAlertsAlert.Sex, and is useful for accessing the field via an interface.
func (v *GetAlertsGetAlertsAlert) GetSex() string { return v.Sex }

// GetHeight returns GetAlertsGetAlertsAlert.Height, and is useful for accessing the field via an interface.
func (v *GetAlertsGetAlertsAlert) GetHeight() int { return v.Height }

// GetWeight returns GetAlertsGetAlertsAlert.Weight, and is useful for accessing the field via an interface.
func (v *GetAlertsGetAlertsAlert) GetWeight() int { return v.Weight }

// GetSymptoms returns GetAlertsGetAlertsAlert.Symptoms, and is useful for accessing the field via an interface.
func (v *GetAlertsGetAlertsAlert) GetSymptoms() []string { return v.Symptoms }

// GetComment returns GetAlertsGetAlertsAlert.Comment, and is useful for accessing the field via an interface.
func (v *GetAlertsGetAlertsAlert) GetComment() string { return v.Comment }

// GetAlertsResponse is returned by GetAlerts on success.
type GetAlertsResponse struct {
	GetAlerts []GetAlertsGetAlertsAlert `json:"getAlerts"`
}

// GetGetAlerts returns GetAlertsResponse.GetAlerts, and is useful for accessing the field via an interface.
func (v *GetAlertsResponse) GetGetAlerts() []GetAlertsGetAlertsAlert { return v.GetAlerts }

// GetAnteChirByIDGetAnteChirByIDAnteChir includes the requested fields of the GraphQL type AnteChir.
type GetAnteChirByIDGetAnteChirByIDAnteChir struct {
	Id               string                                                                     `json:"id"`
	Name             string                                                                     `json:"name"`
	Induced_symptoms []GetAnteChirByIDGetAnteChirByIDAnteChirInduced_symptomsChirInducedSymptom `json:"induced_symptoms"`
}

// GetId returns GetAnteChirByIDGetAnteChirByIDAnteChir.Id, and is useful for accessing the field via an interface.
func (v *GetAnteChirByIDGetAnteChirByIDAnteChir) GetId() string { return v.Id }

// GetName returns GetAnteChirByIDGetAnteChirByIDAnteChir.Name, and is useful for accessing the field via an interface.
func (v *GetAnteChirByIDGetAnteChirByIDAnteChir) GetName() string { return v.Name }

// GetInduced_symptoms returns GetAnteChirByIDGetAnteChirByIDAnteChir.Induced_symptoms, and is useful for accessing the field via an interface.
func (v *GetAnteChirByIDGetAnteChirByIDAnteChir) GetInduced_symptoms() []GetAnteChirByIDGetAnteChirByIDAnteChirInduced_symptomsChirInducedSymptom {
	return v.Induced_symptoms
}

// GetAnteChirByIDGetAnteChirByIDAnteChirInduced_symptomsChirInducedSymptom includes the requested fields of the GraphQL type ChirInducedSymptom.
type GetAnteChirByIDGetAnteChirByIDAnteChirInduced_symptomsChirInducedSymptom struct {
	Symptom string  `json:"symptom"`
	Factor  float64 `json:"factor"`
}

// GetSymptom returns GetAnteChirByIDGetAnteChirByIDAnteChirInduced_symptomsChirInducedSymptom.Symptom, and is useful for accessing the field via an interface.
func (v *GetAnteChirByIDGetAnteChirByIDAnteChirInduced_symptomsChirInducedSymptom) GetSymptom() string {
	return v.Symptom
}

// GetFactor returns GetAnteChirByIDGetAnteChirByIDAnteChirInduced_symptomsChirInducedSymptom.Factor, and is useful for accessing the field via an interface.
func (v *GetAnteChirByIDGetAnteChirByIDAnteChirInduced_symptomsChirInducedSymptom) GetFactor() float64 {
	return v.Factor
}

// GetAnteChirByIDResponse is returned by GetAnteChirByID on success.
type GetAnteChirByIDResponse struct {
	GetAnteChirByID GetAnteChirByIDGetAnteChirByIDAnteChir `json:"getAnteChirByID"`
}

// GetGetAnteChirByID returns GetAnteChirByIDResponse.GetAnteChirByID, and is useful for accessing the field via an interface.
func (v *GetAnteChirByIDResponse) GetGetAnteChirByID() GetAnteChirByIDGetAnteChirByIDAnteChir {
	return v.GetAnteChirByID
}

// GetAnteChirsGetAnteChirsAnteChir includes the requested fields of the GraphQL type AnteChir.
type GetAnteChirsGetAnteChirsAnteChir struct {
	Id               string                                                               `json:"id"`
	Name             string                                                               `json:"name"`
	Induced_symptoms []GetAnteChirsGetAnteChirsAnteChirInduced_symptomsChirInducedSymptom `json:"induced_symptoms"`
}

// GetId returns GetAnteChirsGetAnteChirsAnteChir.Id, and is useful for accessing the field via an interface.
func (v *GetAnteChirsGetAnteChirsAnteChir) GetId() string { return v.Id }

// GetName returns GetAnteChirsGetAnteChirsAnteChir.Name, and is useful for accessing the field via an interface.
func (v *GetAnteChirsGetAnteChirsAnteChir) GetName() string { return v.Name }

// GetInduced_symptoms returns GetAnteChirsGetAnteChirsAnteChir.Induced_symptoms, and is useful for accessing the field via an interface.
func (v *GetAnteChirsGetAnteChirsAnteChir) GetInduced_symptoms() []GetAnteChirsGetAnteChirsAnteChirInduced_symptomsChirInducedSymptom {
	return v.Induced_symptoms
}

// GetAnteChirsGetAnteChirsAnteChirInduced_symptomsChirInducedSymptom includes the requested fields of the GraphQL type ChirInducedSymptom.
type GetAnteChirsGetAnteChirsAnteChirInduced_symptomsChirInducedSymptom struct {
	Symptom string  `json:"symptom"`
	Factor  float64 `json:"factor"`
}

// GetSymptom returns GetAnteChirsGetAnteChirsAnteChirInduced_symptomsChirInducedSymptom.Symptom, and is useful for accessing the field via an interface.
func (v *GetAnteChirsGetAnteChirsAnteChirInduced_symptomsChirInducedSymptom) GetSymptom() string {
	return v.Symptom
}

// GetFactor returns GetAnteChirsGetAnteChirsAnteChirInduced_symptomsChirInducedSymptom.Factor, and is useful for accessing the field via an interface.
func (v *GetAnteChirsGetAnteChirsAnteChirInduced_symptomsChirInducedSymptom) GetFactor() float64 {
	return v.Factor
}

// GetAnteChirsResponse is returned by GetAnteChirs on success.
type GetAnteChirsResponse struct {
	GetAnteChirs []GetAnteChirsGetAnteChirsAnteChir `json:"getAnteChirs"`
}

// GetGetAnteChirs returns GetAnteChirsResponse.GetAnteChirs, and is useful for accessing the field via an interface.
func (v *GetAnteChirsResponse) GetGetAnteChirs() []GetAnteChirsGetAnteChirsAnteChir {
	return v.GetAnteChirs
}

// GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease includes the requested fields of the GraphQL type AnteDisease.
type GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease struct {
	Id             string   `json:"id"`
	Name           string   `json:"name"`
	Chronicity     float64  `json:"chronicity"`
	Surgery_ids    []string `json:"surgery_ids"`
	Symptoms       []string `json:"symptoms"`
	Treatment_ids  []string `json:"treatment_ids"`
	Still_relevant bool     `json:"still_relevant"`
}

// GetId returns GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease.Id, and is useful for accessing the field via an interface.
func (v *GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease) GetId() string { return v.Id }

// GetName returns GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease.Name, and is useful for accessing the field via an interface.
func (v *GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease) GetName() string { return v.Name }

// GetChronicity returns GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease.Chronicity, and is useful for accessing the field via an interface.
func (v *GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease) GetChronicity() float64 {
	return v.Chronicity
}

// GetSurgery_ids returns GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease.Surgery_ids, and is useful for accessing the field via an interface.
func (v *GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease) GetSurgery_ids() []string {
	return v.Surgery_ids
}

// GetSymptoms returns GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease.Symptoms, and is useful for accessing the field via an interface.
func (v *GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease) GetSymptoms() []string { return v.Symptoms }

// GetTreatment_ids returns GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease.Treatment_ids, and is useful for accessing the field via an interface.
func (v *GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease) GetTreatment_ids() []string {
	return v.Treatment_ids
}

// GetStill_relevant returns GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease.Still_relevant, and is useful for accessing the field via an interface.
func (v *GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease) GetStill_relevant() bool {
	return v.Still_relevant
}

// GetAnteDiseaseByIDResponse is returned by GetAnteDiseaseByID on success.
type GetAnteDiseaseByIDResponse struct {
	GetAnteDiseaseByID GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease `json:"getAnteDiseaseByID"`
}

// GetGetAnteDiseaseByID returns GetAnteDiseaseByIDResponse.GetAnteDiseaseByID, and is useful for accessing the field via an interface.
func (v *GetAnteDiseaseByIDResponse) GetGetAnteDiseaseByID() GetAnteDiseaseByIDGetAnteDiseaseByIDAnteDisease {
	return v.GetAnteDiseaseByID
}

// GetAnteDiseasesGetAnteDiseasesAnteDisease includes the requested fields of the GraphQL type AnteDisease.
type GetAnteDiseasesGetAnteDiseasesAnteDisease struct {
	Id             string   `json:"id"`
	Name           string   `json:"name"`
	Chronicity     float64  `json:"chronicity"`
	Surgery_ids    []string `json:"surgery_ids"`
	Symptoms       []string `json:"symptoms"`
	Treatment_ids  []string `json:"treatment_ids"`
	Still_relevant bool     `json:"still_relevant"`
}

// GetId returns GetAnteDiseasesGetAnteDiseasesAnteDisease.Id, and is useful for accessing the field via an interface.
func (v *GetAnteDiseasesGetAnteDiseasesAnteDisease) GetId() string { return v.Id }

// GetName returns GetAnteDiseasesGetAnteDiseasesAnteDisease.Name, and is useful for accessing the field via an interface.
func (v *GetAnteDiseasesGetAnteDiseasesAnteDisease) GetName() string { return v.Name }

// GetChronicity returns GetAnteDiseasesGetAnteDiseasesAnteDisease.Chronicity, and is useful for accessing the field via an interface.
func (v *GetAnteDiseasesGetAnteDiseasesAnteDisease) GetChronicity() float64 { return v.Chronicity }

// GetSurgery_ids returns GetAnteDiseasesGetAnteDiseasesAnteDisease.Surgery_ids, and is useful for accessing the field via an interface.
func (v *GetAnteDiseasesGetAnteDiseasesAnteDisease) GetSurgery_ids() []string { return v.Surgery_ids }

// GetSymptoms returns GetAnteDiseasesGetAnteDiseasesAnteDisease.Symptoms, and is useful for accessing the field via an interface.
func (v *GetAnteDiseasesGetAnteDiseasesAnteDisease) GetSymptoms() []string { return v.Symptoms }

// GetTreatment_ids returns GetAnteDiseasesGetAnteDiseasesAnteDisease.Treatment_ids, and is useful for accessing the field via an interface.
func (v *GetAnteDiseasesGetAnteDiseasesAnteDisease) GetTreatment_ids() []string {
	return v.Treatment_ids
}

// GetStill_relevant returns GetAnteDiseasesGetAnteDiseasesAnteDisease.Still_relevant, and is useful for accessing the field via an interface.
func (v *GetAnteDiseasesGetAnteDiseasesAnteDisease) GetStill_relevant() bool { return v.Still_relevant }

// GetAnteDiseasesResponse is returned by GetAnteDiseases on success.
type GetAnteDiseasesResponse struct {
	GetAnteDiseases []GetAnteDiseasesGetAnteDiseasesAnteDisease `json:"getAnteDiseases"`
}

// GetGetAnteDiseases returns GetAnteDiseasesResponse.GetAnteDiseases, and is useful for accessing the field via an interface.
func (v *GetAnteDiseasesResponse) GetGetAnteDiseases() []GetAnteDiseasesGetAnteDiseasesAnteDisease {
	return v.GetAnteDiseases
}

// GetAnteFamiliesGetAnteFamiliesAnteFamily includes the requested fields of the GraphQL type AnteFamily.
type GetAnteFamiliesGetAnteFamiliesAnteFamily struct {
	Id      string   `json:"id"`
	Name    string   `json:"name"`
	Disease []string `json:"disease"`
}

// GetId returns GetAnteFamiliesGetAnteFamiliesAnteFamily.Id, and is useful for accessing the field via an interface.
func (v *GetAnteFamiliesGetAnteFamiliesAnteFamily) GetId() string { return v.Id }

// GetName returns GetAnteFamiliesGetAnteFamiliesAnteFamily.Name, and is useful for accessing the field via an interface.
func (v *GetAnteFamiliesGetAnteFamiliesAnteFamily) GetName() string { return v.Name }

// GetDisease returns GetAnteFamiliesGetAnteFamiliesAnteFamily.Disease, and is useful for accessing the field via an interface.
func (v *GetAnteFamiliesGetAnteFamiliesAnteFamily) GetDisease() []string { return v.Disease }

// GetAnteFamiliesResponse is returned by GetAnteFamilies on success.
type GetAnteFamiliesResponse struct {
	GetAnteFamilies []GetAnteFamiliesGetAnteFamiliesAnteFamily `json:"getAnteFamilies"`
}

// GetGetAnteFamilies returns GetAnteFamiliesResponse.GetAnteFamilies, and is useful for accessing the field via an interface.
func (v *GetAnteFamiliesResponse) GetGetAnteFamilies() []GetAnteFamiliesGetAnteFamiliesAnteFamily {
	return v.GetAnteFamilies
}

// GetAnteFamilyByIDGetAnteFamilyByIDAnteFamily includes the requested fields of the GraphQL type AnteFamily.
type GetAnteFamilyByIDGetAnteFamilyByIDAnteFamily struct {
	Id      string   `json:"id"`
	Name    string   `json:"name"`
	Disease []string `json:"disease"`
}

// GetId returns GetAnteFamilyByIDGetAnteFamilyByIDAnteFamily.Id, and is useful for accessing the field via an interface.
func (v *GetAnteFamilyByIDGetAnteFamilyByIDAnteFamily) GetId() string { return v.Id }

// GetName returns GetAnteFamilyByIDGetAnteFamilyByIDAnteFamily.Name, and is useful for accessing the field via an interface.
func (v *GetAnteFamilyByIDGetAnteFamilyByIDAnteFamily) GetName() string { return v.Name }

// GetDisease returns GetAnteFamilyByIDGetAnteFamilyByIDAnteFamily.Disease, and is useful for accessing the field via an interface.
func (v *GetAnteFamilyByIDGetAnteFamilyByIDAnteFamily) GetDisease() []string { return v.Disease }

// GetAnteFamilyByIDResponse is returned by GetAnteFamilyByID on success.
type GetAnteFamilyByIDResponse struct {
	GetAnteFamilyByID GetAnteFamilyByIDGetAnteFamilyByIDAnteFamily `json:"getAnteFamilyByID"`
}

// GetGetAnteFamilyByID returns GetAnteFamilyByIDResponse.GetAnteFamilyByID, and is useful for accessing the field via an interface.
func (v *GetAnteFamilyByIDResponse) GetGetAnteFamilyByID() GetAnteFamilyByIDGetAnteFamilyByIDAnteFamily {
	return v.GetAnteFamilyByID
}

// GetBlackListByIdGetBlackListByIdBlackList includes the requested fields of the GraphQL type BlackList.
type GetBlackListByIdGetBlackListByIdBlackList struct {
	Id    string   `json:"id"`
	Token []string `json:"token"`
}

// GetId returns GetBlackListByIdGetBlackListByIdBlackList.Id, and is useful for accessing the field via an interface.
func (v *GetBlackListByIdGetBlackListByIdBlackList) GetId() string { return v.Id }

// GetToken returns GetBlackListByIdGetBlackListByIdBlackList.Token, and is useful for accessing the field via an interface.
func (v *GetBlackListByIdGetBlackListByIdBlackList) GetToken() []string { return v.Token }

// GetBlackListByIdResponse is returned by GetBlackListById on success.
type GetBlackListByIdResponse struct {
	GetBlackListById GetBlackListByIdGetBlackListByIdBlackList `json:"getBlackListById"`
}

// GetGetBlackListById returns GetBlackListByIdResponse.GetBlackListById, and is useful for accessing the field via an interface.
func (v *GetBlackListByIdResponse) GetGetBlackListById() GetBlackListByIdGetBlackListByIdBlackList {
	return v.GetBlackListById
}

// GetBlackListGetBlackList includes the requested fields of the GraphQL type BlackList.
type GetBlackListGetBlackList struct {
	Id    string   `json:"id"`
	Token []string `json:"token"`
}

// GetId returns GetBlackListGetBlackList.Id, and is useful for accessing the field via an interface.
func (v *GetBlackListGetBlackList) GetId() string { return v.Id }

// GetToken returns GetBlackListGetBlackList.Token, and is useful for accessing the field via an interface.
func (v *GetBlackListGetBlackList) GetToken() []string { return v.Token }

// GetBlackListResponse is returned by GetBlackList on success.
type GetBlackListResponse struct {
	GetBlackList []GetBlackListGetBlackList `json:"getBlackList"`
}

// GetGetBlackList returns GetBlackListResponse.GetBlackList, and is useful for accessing the field via an interface.
func (v *GetBlackListResponse) GetGetBlackList() []GetBlackListGetBlackList { return v.GetBlackList }

// GetChatByIdGetChatByIdChat includes the requested fields of the GraphQL type Chat.
type GetChatByIdGetChatByIdChat struct {
	Id           string                                   `json:"id"`
	Participants []GetChatByIdGetChatByIdChatParticipants `json:"participants"`
	Messages     []GetChatByIdGetChatByIdChatMessages     `json:"messages"`
}

// GetId returns GetChatByIdGetChatByIdChat.Id, and is useful for accessing the field via an interface.
func (v *GetChatByIdGetChatByIdChat) GetId() string { return v.Id }

// GetParticipants returns GetChatByIdGetChatByIdChat.Participants, and is useful for accessing the field via an interface.
func (v *GetChatByIdGetChatByIdChat) GetParticipants() []GetChatByIdGetChatByIdChatParticipants {
	return v.Participants
}

// GetMessages returns GetChatByIdGetChatByIdChat.Messages, and is useful for accessing the field via an interface.
func (v *GetChatByIdGetChatByIdChat) GetMessages() []GetChatByIdGetChatByIdChatMessages {
	return v.Messages
}

// GetChatByIdGetChatByIdChatMessages includes the requested fields of the GraphQL type ChatMessages.
type GetChatByIdGetChatByIdChatMessages struct {
	Owner_id    string `json:"owner_id"`
	Message     string `json:"message"`
	Sended_time int    `json:"sended_time"`
}

// GetOwner_id returns GetChatByIdGetChatByIdChatMessages.Owner_id, and is useful for accessing the field via an interface.
func (v *GetChatByIdGetChatByIdChatMessages) GetOwner_id() string { return v.Owner_id }

// GetMessage returns GetChatByIdGetChatByIdChatMessages.Message, and is useful for accessing the field via an interface.
func (v *GetChatByIdGetChatByIdChatMessages) GetMessage() string { return v.Message }

// GetSended_time returns GetChatByIdGetChatByIdChatMessages.Sended_time, and is useful for accessing the field via an interface.
func (v *GetChatByIdGetChatByIdChatMessages) GetSended_time() int { return v.Sended_time }

// GetChatByIdGetChatByIdChatParticipants includes the requested fields of the GraphQL type ChatParticipants.
type GetChatByIdGetChatByIdChatParticipants struct {
	Participant_id string `json:"participant_id"`
	Last_seen      int    `json:"last_seen"`
}

// GetParticipant_id returns GetChatByIdGetChatByIdChatParticipants.Participant_id, and is useful for accessing the field via an interface.
func (v *GetChatByIdGetChatByIdChatParticipants) GetParticipant_id() string { return v.Participant_id }

// GetLast_seen returns GetChatByIdGetChatByIdChatParticipants.Last_seen, and is useful for accessing the field via an interface.
func (v *GetChatByIdGetChatByIdChatParticipants) GetLast_seen() int { return v.Last_seen }

// GetChatByIdResponse is returned by GetChatById on success.
type GetChatByIdResponse struct {
	GetChatById GetChatByIdGetChatByIdChat `json:"getChatById"`
}

// GetGetChatById returns GetChatByIdResponse.GetChatById, and is useful for accessing the field via an interface.
func (v *GetChatByIdResponse) GetGetChatById() GetChatByIdGetChatByIdChat { return v.GetChatById }

// GetChatsGetChatsChat includes the requested fields of the GraphQL type Chat.
type GetChatsGetChatsChat struct {
	Id           string                             `json:"id"`
	Participants []GetChatsGetChatsChatParticipants `json:"participants"`
	Messages     []GetChatsGetChatsChatMessages     `json:"messages"`
}

// GetId returns GetChatsGetChatsChat.Id, and is useful for accessing the field via an interface.
func (v *GetChatsGetChatsChat) GetId() string { return v.Id }

// GetParticipants returns GetChatsGetChatsChat.Participants, and is useful for accessing the field via an interface.
func (v *GetChatsGetChatsChat) GetParticipants() []GetChatsGetChatsChatParticipants {
	return v.Participants
}

// GetMessages returns GetChatsGetChatsChat.Messages, and is useful for accessing the field via an interface.
func (v *GetChatsGetChatsChat) GetMessages() []GetChatsGetChatsChatMessages { return v.Messages }

// GetChatsGetChatsChatMessages includes the requested fields of the GraphQL type ChatMessages.
type GetChatsGetChatsChatMessages struct {
	Owner_id    string `json:"owner_id"`
	Message     string `json:"message"`
	Sended_time int    `json:"sended_time"`
}

// GetOwner_id returns GetChatsGetChatsChatMessages.Owner_id, and is useful for accessing the field via an interface.
func (v *GetChatsGetChatsChatMessages) GetOwner_id() string { return v.Owner_id }

// GetMessage returns GetChatsGetChatsChatMessages.Message, and is useful for accessing the field via an interface.
func (v *GetChatsGetChatsChatMessages) GetMessage() string { return v.Message }

// GetSended_time returns GetChatsGetChatsChatMessages.Sended_time, and is useful for accessing the field via an interface.
func (v *GetChatsGetChatsChatMessages) GetSended_time() int { return v.Sended_time }

// GetChatsGetChatsChatParticipants includes the requested fields of the GraphQL type ChatParticipants.
type GetChatsGetChatsChatParticipants struct {
	Participant_id string `json:"participant_id"`
	Last_seen      int    `json:"last_seen"`
}

// GetParticipant_id returns GetChatsGetChatsChatParticipants.Participant_id, and is useful for accessing the field via an interface.
func (v *GetChatsGetChatsChatParticipants) GetParticipant_id() string { return v.Participant_id }

// GetLast_seen returns GetChatsGetChatsChatParticipants.Last_seen, and is useful for accessing the field via an interface.
func (v *GetChatsGetChatsChatParticipants) GetLast_seen() int { return v.Last_seen }

// GetChatsResponse is returned by GetChats on success.
type GetChatsResponse struct {
	GetChats []GetChatsGetChatsChat `json:"getChats"`
}

// GetGetChats returns GetChatsResponse.GetChats, and is useful for accessing the field via an interface.
func (v *GetChatsResponse) GetGetChats() []GetChatsGetChatsChat { return v.GetChats }

// GetDemoAccountByEmailGetDemoAccountByEmailDemoAccount includes the requested fields of the GraphQL type DemoAccount.
type GetDemoAccountByEmailGetDemoAccountByEmailDemoAccount struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns GetDemoAccountByEmailGetDemoAccountByEmailDemoAccount.Id, and is useful for accessing the field via an interface.
func (v *GetDemoAccountByEmailGetDemoAccountByEmailDemoAccount) GetId() string { return v.Id }

// GetEmail returns GetDemoAccountByEmailGetDemoAccountByEmailDemoAccount.Email, and is useful for accessing the field via an interface.
func (v *GetDemoAccountByEmailGetDemoAccountByEmailDemoAccount) GetEmail() string { return v.Email }

// GetPassword returns GetDemoAccountByEmailGetDemoAccountByEmailDemoAccount.Password, and is useful for accessing the field via an interface.
func (v *GetDemoAccountByEmailGetDemoAccountByEmailDemoAccount) GetPassword() string {
	return v.Password
}

// GetDemoAccountByEmailResponse is returned by GetDemoAccountByEmail on success.
type GetDemoAccountByEmailResponse struct {
	GetDemoAccountByEmail GetDemoAccountByEmailGetDemoAccountByEmailDemoAccount `json:"getDemoAccountByEmail"`
}

// GetGetDemoAccountByEmail returns GetDemoAccountByEmailResponse.GetDemoAccountByEmail, and is useful for accessing the field via an interface.
func (v *GetDemoAccountByEmailResponse) GetGetDemoAccountByEmail() GetDemoAccountByEmailGetDemoAccountByEmailDemoAccount {
	return v.GetDemoAccountByEmail
}

// GetDemoAccountByIdGetDemoAccountByIdDemoAccount includes the requested fields of the GraphQL type DemoAccount.
type GetDemoAccountByIdGetDemoAccountByIdDemoAccount struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns GetDemoAccountByIdGetDemoAccountByIdDemoAccount.Id, and is useful for accessing the field via an interface.
func (v *GetDemoAccountByIdGetDemoAccountByIdDemoAccount) GetId() string { return v.Id }

// GetEmail returns GetDemoAccountByIdGetDemoAccountByIdDemoAccount.Email, and is useful for accessing the field via an interface.
func (v *GetDemoAccountByIdGetDemoAccountByIdDemoAccount) GetEmail() string { return v.Email }

// GetPassword returns GetDemoAccountByIdGetDemoAccountByIdDemoAccount.Password, and is useful for accessing the field via an interface.
func (v *GetDemoAccountByIdGetDemoAccountByIdDemoAccount) GetPassword() string { return v.Password }

// GetDemoAccountByIdResponse is returned by GetDemoAccountById on success.
type GetDemoAccountByIdResponse struct {
	GetDemoAccountById GetDemoAccountByIdGetDemoAccountByIdDemoAccount `json:"getDemoAccountById"`
}

// GetGetDemoAccountById returns GetDemoAccountByIdResponse.GetDemoAccountById, and is useful for accessing the field via an interface.
func (v *GetDemoAccountByIdResponse) GetGetDemoAccountById() GetDemoAccountByIdGetDemoAccountByIdDemoAccount {
	return v.GetDemoAccountById
}

// GetDemoAccountsGetDemoAccountsDemoAccount includes the requested fields of the GraphQL type DemoAccount.
type GetDemoAccountsGetDemoAccountsDemoAccount struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns GetDemoAccountsGetDemoAccountsDemoAccount.Id, and is useful for accessing the field via an interface.
func (v *GetDemoAccountsGetDemoAccountsDemoAccount) GetId() string { return v.Id }

// GetEmail returns GetDemoAccountsGetDemoAccountsDemoAccount.Email, and is useful for accessing the field via an interface.
func (v *GetDemoAccountsGetDemoAccountsDemoAccount) GetEmail() string { return v.Email }

// GetPassword returns GetDemoAccountsGetDemoAccountsDemoAccount.Password, and is useful for accessing the field via an interface.
func (v *GetDemoAccountsGetDemoAccountsDemoAccount) GetPassword() string { return v.Password }

// GetDemoAccountsResponse is returned by GetDemoAccounts on success.
type GetDemoAccountsResponse struct {
	GetDemoAccounts []GetDemoAccountsGetDemoAccountsDemoAccount `json:"getDemoAccounts"`
}

// GetGetDemoAccounts returns GetDemoAccountsResponse.GetDemoAccounts, and is useful for accessing the field via an interface.
func (v *GetDemoAccountsResponse) GetGetDemoAccounts() []GetDemoAccountsGetDemoAccountsDemoAccount {
	return v.GetDemoAccounts
}

// GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect includes the requested fields of the GraphQL type DeviceConnect.
type GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect struct {
	Id           string  `json:"id"`
	Device_name  string  `json:"device_name"`
	Ip_address   string  `json:"ip_address"`
	Latitude     float64 `json:"latitude"`
	Longitude    float64 `json:"longitude"`
	Date         int     `json:"date"`
	Trust_device bool    `json:"trust_device"`
}

// GetId returns GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect.Id, and is useful for accessing the field via an interface.
func (v *GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect) GetId() string { return v.Id }

// GetDevice_name returns GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect.Device_name, and is useful for accessing the field via an interface.
func (v *GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect) GetDevice_name() string {
	return v.Device_name
}

// GetIp_address returns GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect.Ip_address, and is useful for accessing the field via an interface.
func (v *GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect) GetIp_address() string {
	return v.Ip_address
}

// GetLatitude returns GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect.Latitude, and is useful for accessing the field via an interface.
func (v *GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect) GetLatitude() float64 {
	return v.Latitude
}

// GetLongitude returns GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect.Longitude, and is useful for accessing the field via an interface.
func (v *GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect) GetLongitude() float64 {
	return v.Longitude
}

// GetDate returns GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect.Date, and is useful for accessing the field via an interface.
func (v *GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect) GetDate() int { return v.Date }

// GetTrust_device returns GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect.Trust_device, and is useful for accessing the field via an interface.
func (v *GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect) GetTrust_device() bool {
	return v.Trust_device
}

// GetDeviceConnectByIdResponse is returned by GetDeviceConnectById on success.
type GetDeviceConnectByIdResponse struct {
	GetDeviceConnectById GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect `json:"getDeviceConnectById"`
}

// GetGetDeviceConnectById returns GetDeviceConnectByIdResponse.GetDeviceConnectById, and is useful for accessing the field via an interface.
func (v *GetDeviceConnectByIdResponse) GetGetDeviceConnectById() GetDeviceConnectByIdGetDeviceConnectByIdDeviceConnect {
	return v.GetDeviceConnectById
}

// GetDevicesConnectGetDevicesConnectDeviceConnect includes the requested fields of the GraphQL type DeviceConnect.
type GetDevicesConnectGetDevicesConnectDeviceConnect struct {
	Id           string  `json:"id"`
	Device_name  string  `json:"device_name"`
	Ip_address   string  `json:"ip_address"`
	Latitude     float64 `json:"latitude"`
	Longitude    float64 `json:"longitude"`
	Date         int     `json:"date"`
	Trust_device bool    `json:"trust_device"`
}

// GetId returns GetDevicesConnectGetDevicesConnectDeviceConnect.Id, and is useful for accessing the field via an interface.
func (v *GetDevicesConnectGetDevicesConnectDeviceConnect) GetId() string { return v.Id }

// GetDevice_name returns GetDevicesConnectGetDevicesConnectDeviceConnect.Device_name, and is useful for accessing the field via an interface.
func (v *GetDevicesConnectGetDevicesConnectDeviceConnect) GetDevice_name() string {
	return v.Device_name
}

// GetIp_address returns GetDevicesConnectGetDevicesConnectDeviceConnect.Ip_address, and is useful for accessing the field via an interface.
func (v *GetDevicesConnectGetDevicesConnectDeviceConnect) GetIp_address() string { return v.Ip_address }

// GetLatitude returns GetDevicesConnectGetDevicesConnectDeviceConnect.Latitude, and is useful for accessing the field via an interface.
func (v *GetDevicesConnectGetDevicesConnectDeviceConnect) GetLatitude() float64 { return v.Latitude }

// GetLongitude returns GetDevicesConnectGetDevicesConnectDeviceConnect.Longitude, and is useful for accessing the field via an interface.
func (v *GetDevicesConnectGetDevicesConnectDeviceConnect) GetLongitude() float64 { return v.Longitude }

// GetDate returns GetDevicesConnectGetDevicesConnectDeviceConnect.Date, and is useful for accessing the field via an interface.
func (v *GetDevicesConnectGetDevicesConnectDeviceConnect) GetDate() int { return v.Date }

// GetTrust_device returns GetDevicesConnectGetDevicesConnectDeviceConnect.Trust_device, and is useful for accessing the field via an interface.
func (v *GetDevicesConnectGetDevicesConnectDeviceConnect) GetTrust_device() bool {
	return v.Trust_device
}

// GetDevicesConnectResponse is returned by GetDevicesConnect on success.
type GetDevicesConnectResponse struct {
	GetDevicesConnect []GetDevicesConnectGetDevicesConnectDeviceConnect `json:"getDevicesConnect"`
}

// GetGetDevicesConnect returns GetDevicesConnectResponse.GetDevicesConnect, and is useful for accessing the field via an interface.
func (v *GetDevicesConnectResponse) GetGetDevicesConnect() []GetDevicesConnectGetDevicesConnectDeviceConnect {
	return v.GetDevicesConnect
}

// GetDiseaseByIdGetDiseaseByIdDisease includes the requested fields of the GraphQL type Disease.
type GetDiseaseByIdGetDiseaseByIdDisease struct {
	Id                string                                                             `json:"id"`
	Code              string                                                             `json:"code"`
	Name              string                                                             `json:"name"`
	Symptoms          []string                                                           `json:"symptoms"`
	Symptoms_weight   []GetDiseaseByIdGetDiseaseByIdDiseaseSymptoms_weightSymptomsWeight `json:"symptoms_weight"`
	Overweight_factor float64                                                            `json:"overweight_factor"`
	Advice            string                                                             `json:"advice"`
}

// GetId returns GetDiseaseByIdGetDiseaseByIdDisease.Id, and is useful for accessing the field via an interface.
func (v *GetDiseaseByIdGetDiseaseByIdDisease) GetId() string { return v.Id }

// GetCode returns GetDiseaseByIdGetDiseaseByIdDisease.Code, and is useful for accessing the field via an interface.
func (v *GetDiseaseByIdGetDiseaseByIdDisease) GetCode() string { return v.Code }

// GetName returns GetDiseaseByIdGetDiseaseByIdDisease.Name, and is useful for accessing the field via an interface.
func (v *GetDiseaseByIdGetDiseaseByIdDisease) GetName() string { return v.Name }

// GetSymptoms returns GetDiseaseByIdGetDiseaseByIdDisease.Symptoms, and is useful for accessing the field via an interface.
func (v *GetDiseaseByIdGetDiseaseByIdDisease) GetSymptoms() []string { return v.Symptoms }

// GetSymptoms_weight returns GetDiseaseByIdGetDiseaseByIdDisease.Symptoms_weight, and is useful for accessing the field via an interface.
func (v *GetDiseaseByIdGetDiseaseByIdDisease) GetSymptoms_weight() []GetDiseaseByIdGetDiseaseByIdDiseaseSymptoms_weightSymptomsWeight {
	return v.Symptoms_weight
}

// GetOverweight_factor returns GetDiseaseByIdGetDiseaseByIdDisease.Overweight_factor, and is useful for accessing the field via an interface.
func (v *GetDiseaseByIdGetDiseaseByIdDisease) GetOverweight_factor() float64 {
	return v.Overweight_factor
}

// GetAdvice returns GetDiseaseByIdGetDiseaseByIdDisease.Advice, and is useful for accessing the field via an interface.
func (v *GetDiseaseByIdGetDiseaseByIdDisease) GetAdvice() string { return v.Advice }

// GetDiseaseByIdGetDiseaseByIdDiseaseSymptoms_weightSymptomsWeight includes the requested fields of the GraphQL type SymptomsWeight.
type GetDiseaseByIdGetDiseaseByIdDiseaseSymptoms_weightSymptomsWeight struct {
	Symptom string  `json:"symptom"`
	Value   float64 `json:"value"`
	Chronic bool    `json:"chronic"`
}

// GetSymptom returns GetDiseaseByIdGetDiseaseByIdDiseaseSymptoms_weightSymptomsWeight.Symptom, and is useful for accessing the field via an interface.
func (v *GetDiseaseByIdGetDiseaseByIdDiseaseSymptoms_weightSymptomsWeight) GetSymptom() string {
	return v.Symptom
}

// GetValue returns GetDiseaseByIdGetDiseaseByIdDiseaseSymptoms_weightSymptomsWeight.Value, and is useful for accessing the field via an interface.
func (v *GetDiseaseByIdGetDiseaseByIdDiseaseSymptoms_weightSymptomsWeight) GetValue() float64 {
	return v.Value
}

// GetChronic returns GetDiseaseByIdGetDiseaseByIdDiseaseSymptoms_weightSymptomsWeight.Chronic, and is useful for accessing the field via an interface.
func (v *GetDiseaseByIdGetDiseaseByIdDiseaseSymptoms_weightSymptomsWeight) GetChronic() bool {
	return v.Chronic
}

// GetDiseaseByIdResponse is returned by GetDiseaseById on success.
type GetDiseaseByIdResponse struct {
	GetDiseaseById GetDiseaseByIdGetDiseaseByIdDisease `json:"getDiseaseById"`
}

// GetGetDiseaseById returns GetDiseaseByIdResponse.GetDiseaseById, and is useful for accessing the field via an interface.
func (v *GetDiseaseByIdResponse) GetGetDiseaseById() GetDiseaseByIdGetDiseaseByIdDisease {
	return v.GetDiseaseById
}

// GetDiseasesGetDiseasesDisease includes the requested fields of the GraphQL type Disease.
type GetDiseasesGetDiseasesDisease struct {
	Id                string                                                       `json:"id"`
	Code              string                                                       `json:"code"`
	Name              string                                                       `json:"name"`
	Symptoms          []string                                                     `json:"symptoms"`
	Symptoms_weight   []GetDiseasesGetDiseasesDiseaseSymptoms_weightSymptomsWeight `json:"symptoms_weight"`
	Overweight_factor float64                                                      `json:"overweight_factor"`
	Advice            string                                                       `json:"advice"`
}

// GetId returns GetDiseasesGetDiseasesDisease.Id, and is useful for accessing the field via an interface.
func (v *GetDiseasesGetDiseasesDisease) GetId() string { return v.Id }

// GetCode returns GetDiseasesGetDiseasesDisease.Code, and is useful for accessing the field via an interface.
func (v *GetDiseasesGetDiseasesDisease) GetCode() string { return v.Code }

// GetName returns GetDiseasesGetDiseasesDisease.Name, and is useful for accessing the field via an interface.
func (v *GetDiseasesGetDiseasesDisease) GetName() string { return v.Name }

// GetSymptoms returns GetDiseasesGetDiseasesDisease.Symptoms, and is useful for accessing the field via an interface.
func (v *GetDiseasesGetDiseasesDisease) GetSymptoms() []string { return v.Symptoms }

// GetSymptoms_weight returns GetDiseasesGetDiseasesDisease.Symptoms_weight, and is useful for accessing the field via an interface.
func (v *GetDiseasesGetDiseasesDisease) GetSymptoms_weight() []GetDiseasesGetDiseasesDiseaseSymptoms_weightSymptomsWeight {
	return v.Symptoms_weight
}

// GetOverweight_factor returns GetDiseasesGetDiseasesDisease.Overweight_factor, and is useful for accessing the field via an interface.
func (v *GetDiseasesGetDiseasesDisease) GetOverweight_factor() float64 { return v.Overweight_factor }

// GetAdvice returns GetDiseasesGetDiseasesDisease.Advice, and is useful for accessing the field via an interface.
func (v *GetDiseasesGetDiseasesDisease) GetAdvice() string { return v.Advice }

// GetDiseasesGetDiseasesDiseaseSymptoms_weightSymptomsWeight includes the requested fields of the GraphQL type SymptomsWeight.
type GetDiseasesGetDiseasesDiseaseSymptoms_weightSymptomsWeight struct {
	Symptom string  `json:"symptom"`
	Value   float64 `json:"value"`
	Chronic bool    `json:"chronic"`
}

// GetSymptom returns GetDiseasesGetDiseasesDiseaseSymptoms_weightSymptomsWeight.Symptom, and is useful for accessing the field via an interface.
func (v *GetDiseasesGetDiseasesDiseaseSymptoms_weightSymptomsWeight) GetSymptom() string {
	return v.Symptom
}

// GetValue returns GetDiseasesGetDiseasesDiseaseSymptoms_weightSymptomsWeight.Value, and is useful for accessing the field via an interface.
func (v *GetDiseasesGetDiseasesDiseaseSymptoms_weightSymptomsWeight) GetValue() float64 {
	return v.Value
}

// GetChronic returns GetDiseasesGetDiseasesDiseaseSymptoms_weightSymptomsWeight.Chronic, and is useful for accessing the field via an interface.
func (v *GetDiseasesGetDiseasesDiseaseSymptoms_weightSymptomsWeight) GetChronic() bool {
	return v.Chronic
}

// GetDiseasesResponse is returned by GetDiseases on success.
type GetDiseasesResponse struct {
	GetDiseases []GetDiseasesGetDiseasesDisease `json:"getDiseases"`
}

// GetGetDiseases returns GetDiseasesResponse.GetDiseases, and is useful for accessing the field via an interface.
func (v *GetDiseasesResponse) GetGetDiseases() []GetDiseasesGetDiseasesDisease { return v.GetDiseases }

// GetDoctorByEmailGetDoctorByEmailDoctor includes the requested fields of the GraphQL type Doctor.
type GetDoctorByEmailGetDoctorByEmailDoctor struct {
	Id              string                                        `json:"id"`
	Email           string                                        `json:"email"`
	Password        string                                        `json:"password"`
	Name            string                                        `json:"name"`
	Firstname       string                                        `json:"firstname"`
	Address         GetDoctorByEmailGetDoctorByEmailDoctorAddress `json:"address"`
	Rendez_vous_ids []string                                      `json:"rendez_vous_ids"`
	Patient_ids     []string                                      `json:"patient_ids"`
	Chat_ids        []string                                      `json:"chat_ids"`
}

// GetId returns GetDoctorByEmailGetDoctorByEmailDoctor.Id, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctor) GetId() string { return v.Id }

// GetEmail returns GetDoctorByEmailGetDoctorByEmailDoctor.Email, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctor) GetEmail() string { return v.Email }

// GetPassword returns GetDoctorByEmailGetDoctorByEmailDoctor.Password, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctor) GetPassword() string { return v.Password }

// GetName returns GetDoctorByEmailGetDoctorByEmailDoctor.Name, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctor) GetName() string { return v.Name }

// GetFirstname returns GetDoctorByEmailGetDoctorByEmailDoctor.Firstname, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctor) GetFirstname() string { return v.Firstname }

// GetAddress returns GetDoctorByEmailGetDoctorByEmailDoctor.Address, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctor) GetAddress() GetDoctorByEmailGetDoctorByEmailDoctorAddress {
	return v.Address
}

// GetRendez_vous_ids returns GetDoctorByEmailGetDoctorByEmailDoctor.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctor) GetRendez_vous_ids() []string {
	return v.Rendez_vous_ids
}

// GetPatient_ids returns GetDoctorByEmailGetDoctorByEmailDoctor.Patient_ids, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctor) GetPatient_ids() []string { return v.Patient_ids }

// GetChat_ids returns GetDoctorByEmailGetDoctorByEmailDoctor.Chat_ids, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctor) GetChat_ids() []string { return v.Chat_ids }

// GetDoctorByEmailGetDoctorByEmailDoctorAddress includes the requested fields of the GraphQL type Address.
type GetDoctorByEmailGetDoctorByEmailDoctorAddress struct {
	Street   string `json:"street"`
	Zip_code string `json:"zip_code"`
	Country  string `json:"country"`
	City     string `json:"city"`
}

// GetStreet returns GetDoctorByEmailGetDoctorByEmailDoctorAddress.Street, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctorAddress) GetStreet() string { return v.Street }

// GetZip_code returns GetDoctorByEmailGetDoctorByEmailDoctorAddress.Zip_code, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctorAddress) GetZip_code() string { return v.Zip_code }

// GetCountry returns GetDoctorByEmailGetDoctorByEmailDoctorAddress.Country, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctorAddress) GetCountry() string { return v.Country }

// GetCity returns GetDoctorByEmailGetDoctorByEmailDoctorAddress.City, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailGetDoctorByEmailDoctorAddress) GetCity() string { return v.City }

// GetDoctorByEmailResponse is returned by GetDoctorByEmail on success.
type GetDoctorByEmailResponse struct {
	GetDoctorByEmail GetDoctorByEmailGetDoctorByEmailDoctor `json:"getDoctorByEmail"`
}

// GetGetDoctorByEmail returns GetDoctorByEmailResponse.GetDoctorByEmail, and is useful for accessing the field via an interface.
func (v *GetDoctorByEmailResponse) GetGetDoctorByEmail() GetDoctorByEmailGetDoctorByEmailDoctor {
	return v.GetDoctorByEmail
}

// GetDoctorByIdGetDoctorByIdDoctor includes the requested fields of the GraphQL type Doctor.
type GetDoctorByIdGetDoctorByIdDoctor struct {
	Id              string                                  `json:"id"`
	Email           string                                  `json:"email"`
	Password        string                                  `json:"password"`
	Name            string                                  `json:"name"`
	Firstname       string                                  `json:"firstname"`
	Address         GetDoctorByIdGetDoctorByIdDoctorAddress `json:"address"`
	Rendez_vous_ids []string                                `json:"rendez_vous_ids"`
	Patient_ids     []string                                `json:"patient_ids"`
	Chat_ids        []string                                `json:"chat_ids"`
}

// GetId returns GetDoctorByIdGetDoctorByIdDoctor.Id, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctor) GetId() string { return v.Id }

// GetEmail returns GetDoctorByIdGetDoctorByIdDoctor.Email, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctor) GetEmail() string { return v.Email }

// GetPassword returns GetDoctorByIdGetDoctorByIdDoctor.Password, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctor) GetPassword() string { return v.Password }

// GetName returns GetDoctorByIdGetDoctorByIdDoctor.Name, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctor) GetName() string { return v.Name }

// GetFirstname returns GetDoctorByIdGetDoctorByIdDoctor.Firstname, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctor) GetFirstname() string { return v.Firstname }

// GetAddress returns GetDoctorByIdGetDoctorByIdDoctor.Address, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctor) GetAddress() GetDoctorByIdGetDoctorByIdDoctorAddress {
	return v.Address
}

// GetRendez_vous_ids returns GetDoctorByIdGetDoctorByIdDoctor.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctor) GetRendez_vous_ids() []string { return v.Rendez_vous_ids }

// GetPatient_ids returns GetDoctorByIdGetDoctorByIdDoctor.Patient_ids, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctor) GetPatient_ids() []string { return v.Patient_ids }

// GetChat_ids returns GetDoctorByIdGetDoctorByIdDoctor.Chat_ids, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctor) GetChat_ids() []string { return v.Chat_ids }

// GetDoctorByIdGetDoctorByIdDoctorAddress includes the requested fields of the GraphQL type Address.
type GetDoctorByIdGetDoctorByIdDoctorAddress struct {
	Street   string `json:"street"`
	Zip_code string `json:"zip_code"`
	Country  string `json:"country"`
	City     string `json:"city"`
}

// GetStreet returns GetDoctorByIdGetDoctorByIdDoctorAddress.Street, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctorAddress) GetStreet() string { return v.Street }

// GetZip_code returns GetDoctorByIdGetDoctorByIdDoctorAddress.Zip_code, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctorAddress) GetZip_code() string { return v.Zip_code }

// GetCountry returns GetDoctorByIdGetDoctorByIdDoctorAddress.Country, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctorAddress) GetCountry() string { return v.Country }

// GetCity returns GetDoctorByIdGetDoctorByIdDoctorAddress.City, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdGetDoctorByIdDoctorAddress) GetCity() string { return v.City }

// GetDoctorByIdResponse is returned by GetDoctorById on success.
type GetDoctorByIdResponse struct {
	GetDoctorById GetDoctorByIdGetDoctorByIdDoctor `json:"getDoctorById"`
}

// GetGetDoctorById returns GetDoctorByIdResponse.GetDoctorById, and is useful for accessing the field via an interface.
func (v *GetDoctorByIdResponse) GetGetDoctorById() GetDoctorByIdGetDoctorByIdDoctor {
	return v.GetDoctorById
}

// GetDoctorRdvGetDoctorRdv includes the requested fields of the GraphQL type Rdv.
type GetDoctorRdvGetDoctorRdv struct {
	Id                 string            `json:"id"`
	Doctor_id          string            `json:"doctor_id"`
	Id_patient         string            `json:"id_patient"`
	Start_date         int               `json:"start_date"`
	End_date           int               `json:"end_date"`
	Cancelation_reason string            `json:"cancelation_reason"`
	Appointment_status AppointmentStatus `json:"appointment_status"`
	Session_id         string            `json:"session_id"`
	Health_method      string            `json:"health_method"`
}

// GetId returns GetDoctorRdvGetDoctorRdv.Id, and is useful for accessing the field via an interface.
func (v *GetDoctorRdvGetDoctorRdv) GetId() string { return v.Id }

// GetDoctor_id returns GetDoctorRdvGetDoctorRdv.Doctor_id, and is useful for accessing the field via an interface.
func (v *GetDoctorRdvGetDoctorRdv) GetDoctor_id() string { return v.Doctor_id }

// GetId_patient returns GetDoctorRdvGetDoctorRdv.Id_patient, and is useful for accessing the field via an interface.
func (v *GetDoctorRdvGetDoctorRdv) GetId_patient() string { return v.Id_patient }

// GetStart_date returns GetDoctorRdvGetDoctorRdv.Start_date, and is useful for accessing the field via an interface.
func (v *GetDoctorRdvGetDoctorRdv) GetStart_date() int { return v.Start_date }

// GetEnd_date returns GetDoctorRdvGetDoctorRdv.End_date, and is useful for accessing the field via an interface.
func (v *GetDoctorRdvGetDoctorRdv) GetEnd_date() int { return v.End_date }

// GetCancelation_reason returns GetDoctorRdvGetDoctorRdv.Cancelation_reason, and is useful for accessing the field via an interface.
func (v *GetDoctorRdvGetDoctorRdv) GetCancelation_reason() string { return v.Cancelation_reason }

// GetAppointment_status returns GetDoctorRdvGetDoctorRdv.Appointment_status, and is useful for accessing the field via an interface.
func (v *GetDoctorRdvGetDoctorRdv) GetAppointment_status() AppointmentStatus {
	return v.Appointment_status
}

// GetSession_id returns GetDoctorRdvGetDoctorRdv.Session_id, and is useful for accessing the field via an interface.
func (v *GetDoctorRdvGetDoctorRdv) GetSession_id() string { return v.Session_id }

// GetHealth_method returns GetDoctorRdvGetDoctorRdv.Health_method, and is useful for accessing the field via an interface.
func (v *GetDoctorRdvGetDoctorRdv) GetHealth_method() string { return v.Health_method }

// GetDoctorRdvResponse is returned by GetDoctorRdv on success.
type GetDoctorRdvResponse struct {
	GetDoctorRdv []GetDoctorRdvGetDoctorRdv `json:"getDoctorRdv"`
}

// GetGetDoctorRdv returns GetDoctorRdvResponse.GetDoctorRdv, and is useful for accessing the field via an interface.
func (v *GetDoctorRdvResponse) GetGetDoctorRdv() []GetDoctorRdvGetDoctorRdv { return v.GetDoctorRdv }

// GetDoctorsGetDoctorsDoctor includes the requested fields of the GraphQL type Doctor.
type GetDoctorsGetDoctorsDoctor struct {
	Id              string                            `json:"id"`
	Email           string                            `json:"email"`
	Password        string                            `json:"password"`
	Name            string                            `json:"name"`
	Firstname       string                            `json:"firstname"`
	Address         GetDoctorsGetDoctorsDoctorAddress `json:"address"`
	Rendez_vous_ids []string                          `json:"rendez_vous_ids"`
	Patient_ids     []string                          `json:"patient_ids"`
	Chat_ids        []string                          `json:"chat_ids"`
}

// GetId returns GetDoctorsGetDoctorsDoctor.Id, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctor) GetId() string { return v.Id }

// GetEmail returns GetDoctorsGetDoctorsDoctor.Email, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctor) GetEmail() string { return v.Email }

// GetPassword returns GetDoctorsGetDoctorsDoctor.Password, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctor) GetPassword() string { return v.Password }

// GetName returns GetDoctorsGetDoctorsDoctor.Name, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctor) GetName() string { return v.Name }

// GetFirstname returns GetDoctorsGetDoctorsDoctor.Firstname, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctor) GetFirstname() string { return v.Firstname }

// GetAddress returns GetDoctorsGetDoctorsDoctor.Address, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctor) GetAddress() GetDoctorsGetDoctorsDoctorAddress { return v.Address }

// GetRendez_vous_ids returns GetDoctorsGetDoctorsDoctor.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctor) GetRendez_vous_ids() []string { return v.Rendez_vous_ids }

// GetPatient_ids returns GetDoctorsGetDoctorsDoctor.Patient_ids, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctor) GetPatient_ids() []string { return v.Patient_ids }

// GetChat_ids returns GetDoctorsGetDoctorsDoctor.Chat_ids, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctor) GetChat_ids() []string { return v.Chat_ids }

// GetDoctorsGetDoctorsDoctorAddress includes the requested fields of the GraphQL type Address.
type GetDoctorsGetDoctorsDoctorAddress struct {
	Street   string `json:"street"`
	Zip_code string `json:"zip_code"`
	Country  string `json:"country"`
	City     string `json:"city"`
}

// GetStreet returns GetDoctorsGetDoctorsDoctorAddress.Street, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctorAddress) GetStreet() string { return v.Street }

// GetZip_code returns GetDoctorsGetDoctorsDoctorAddress.Zip_code, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctorAddress) GetZip_code() string { return v.Zip_code }

// GetCountry returns GetDoctorsGetDoctorsDoctorAddress.Country, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctorAddress) GetCountry() string { return v.Country }

// GetCity returns GetDoctorsGetDoctorsDoctorAddress.City, and is useful for accessing the field via an interface.
func (v *GetDoctorsGetDoctorsDoctorAddress) GetCity() string { return v.City }

// GetDoctorsResponse is returned by GetDoctors on success.
type GetDoctorsResponse struct {
	GetDoctors []GetDoctorsGetDoctorsDoctor `json:"getDoctors"`
}

// GetGetDoctors returns GetDoctorsResponse.GetDoctors, and is useful for accessing the field via an interface.
func (v *GetDoctorsResponse) GetGetDoctors() []GetDoctorsGetDoctorsDoctor { return v.GetDoctors }

// GetDocumentByIdGetDocumentByIdDocument includes the requested fields of the GraphQL type Document.
type GetDocumentByIdGetDocumentByIdDocument struct {
	Id            string       `json:"id"`
	Owner_id      string       `json:"owner_id"`
	Name          string       `json:"name"`
	Document_type DocumentType `json:"document_type"`
	Category      Category     `json:"category"`
	Is_favorite   bool         `json:"is_favorite"`
	Download_url  string       `json:"download_url"`
}

// GetId returns GetDocumentByIdGetDocumentByIdDocument.Id, and is useful for accessing the field via an interface.
func (v *GetDocumentByIdGetDocumentByIdDocument) GetId() string { return v.Id }

// GetOwner_id returns GetDocumentByIdGetDocumentByIdDocument.Owner_id, and is useful for accessing the field via an interface.
func (v *GetDocumentByIdGetDocumentByIdDocument) GetOwner_id() string { return v.Owner_id }

// GetName returns GetDocumentByIdGetDocumentByIdDocument.Name, and is useful for accessing the field via an interface.
func (v *GetDocumentByIdGetDocumentByIdDocument) GetName() string { return v.Name }

// GetDocument_type returns GetDocumentByIdGetDocumentByIdDocument.Document_type, and is useful for accessing the field via an interface.
func (v *GetDocumentByIdGetDocumentByIdDocument) GetDocument_type() DocumentType {
	return v.Document_type
}

// GetCategory returns GetDocumentByIdGetDocumentByIdDocument.Category, and is useful for accessing the field via an interface.
func (v *GetDocumentByIdGetDocumentByIdDocument) GetCategory() Category { return v.Category }

// GetIs_favorite returns GetDocumentByIdGetDocumentByIdDocument.Is_favorite, and is useful for accessing the field via an interface.
func (v *GetDocumentByIdGetDocumentByIdDocument) GetIs_favorite() bool { return v.Is_favorite }

// GetDownload_url returns GetDocumentByIdGetDocumentByIdDocument.Download_url, and is useful for accessing the field via an interface.
func (v *GetDocumentByIdGetDocumentByIdDocument) GetDownload_url() string { return v.Download_url }

// GetDocumentByIdResponse is returned by GetDocumentById on success.
type GetDocumentByIdResponse struct {
	GetDocumentById GetDocumentByIdGetDocumentByIdDocument `json:"getDocumentById"`
}

// GetGetDocumentById returns GetDocumentByIdResponse.GetDocumentById, and is useful for accessing the field via an interface.
func (v *GetDocumentByIdResponse) GetGetDocumentById() GetDocumentByIdGetDocumentByIdDocument {
	return v.GetDocumentById
}

// GetDocumentsGetDocumentsDocument includes the requested fields of the GraphQL type Document.
type GetDocumentsGetDocumentsDocument struct {
	Id            string       `json:"id"`
	Owner_id      string       `json:"owner_id"`
	Name          string       `json:"name"`
	Document_type DocumentType `json:"document_type"`
	Category      Category     `json:"category"`
	Is_favorite   bool         `json:"is_favorite"`
	Download_url  string       `json:"download_url"`
}

// GetId returns GetDocumentsGetDocumentsDocument.Id, and is useful for accessing the field via an interface.
func (v *GetDocumentsGetDocumentsDocument) GetId() string { return v.Id }

// GetOwner_id returns GetDocumentsGetDocumentsDocument.Owner_id, and is useful for accessing the field via an interface.
func (v *GetDocumentsGetDocumentsDocument) GetOwner_id() string { return v.Owner_id }

// GetName returns GetDocumentsGetDocumentsDocument.Name, and is useful for accessing the field via an interface.
func (v *GetDocumentsGetDocumentsDocument) GetName() string { return v.Name }

// GetDocument_type returns GetDocumentsGetDocumentsDocument.Document_type, and is useful for accessing the field via an interface.
func (v *GetDocumentsGetDocumentsDocument) GetDocument_type() DocumentType { return v.Document_type }

// GetCategory returns GetDocumentsGetDocumentsDocument.Category, and is useful for accessing the field via an interface.
func (v *GetDocumentsGetDocumentsDocument) GetCategory() Category { return v.Category }

// GetIs_favorite returns GetDocumentsGetDocumentsDocument.Is_favorite, and is useful for accessing the field via an interface.
func (v *GetDocumentsGetDocumentsDocument) GetIs_favorite() bool { return v.Is_favorite }

// GetDownload_url returns GetDocumentsGetDocumentsDocument.Download_url, and is useful for accessing the field via an interface.
func (v *GetDocumentsGetDocumentsDocument) GetDownload_url() string { return v.Download_url }

// GetDocumentsResponse is returned by GetDocuments on success.
type GetDocumentsResponse struct {
	GetDocuments []GetDocumentsGetDocumentsDocument `json:"getDocuments"`
}

// GetGetDocuments returns GetDocumentsResponse.GetDocuments, and is useful for accessing the field via an interface.
func (v *GetDocumentsResponse) GetGetDocuments() []GetDocumentsGetDocumentsDocument {
	return v.GetDocuments
}

// GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth includes the requested fields of the GraphQL type DoubleAuth.
type GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth struct {
	Id              string   `json:"id"`
	Methods         []string `json:"methods"`
	Secret          string   `json:"secret"`
	Url             string   `json:"url"`
	Trust_device_id string   `json:"trust_device_id"`
}

// GetId returns GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth.Id, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth) GetId() string { return v.Id }

// GetMethods returns GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth.Methods, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth) GetMethods() []string { return v.Methods }

// GetSecret returns GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth.Secret, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth) GetSecret() string { return v.Secret }

// GetUrl returns GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth.Url, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth) GetUrl() string { return v.Url }

// GetTrust_device_id returns GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth.Trust_device_id, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth) GetTrust_device_id() string {
	return v.Trust_device_id
}

// GetDoubleAuthByIdResponse is returned by GetDoubleAuthById on success.
type GetDoubleAuthByIdResponse struct {
	GetDoubleAuthById GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth `json:"getDoubleAuthById"`
}

// GetGetDoubleAuthById returns GetDoubleAuthByIdResponse.GetDoubleAuthById, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthByIdResponse) GetGetDoubleAuthById() GetDoubleAuthByIdGetDoubleAuthByIdDoubleAuth {
	return v.GetDoubleAuthById
}

// GetDoubleAuthsGetDoubleAuthsDoubleAuth includes the requested fields of the GraphQL type DoubleAuth.
type GetDoubleAuthsGetDoubleAuthsDoubleAuth struct {
	Id              string   `json:"id"`
	Methods         []string `json:"methods"`
	Secret          string   `json:"secret"`
	Url             string   `json:"url"`
	Trust_device_id string   `json:"trust_device_id"`
}

// GetId returns GetDoubleAuthsGetDoubleAuthsDoubleAuth.Id, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthsGetDoubleAuthsDoubleAuth) GetId() string { return v.Id }

// GetMethods returns GetDoubleAuthsGetDoubleAuthsDoubleAuth.Methods, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthsGetDoubleAuthsDoubleAuth) GetMethods() []string { return v.Methods }

// GetSecret returns GetDoubleAuthsGetDoubleAuthsDoubleAuth.Secret, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthsGetDoubleAuthsDoubleAuth) GetSecret() string { return v.Secret }

// GetUrl returns GetDoubleAuthsGetDoubleAuthsDoubleAuth.Url, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthsGetDoubleAuthsDoubleAuth) GetUrl() string { return v.Url }

// GetTrust_device_id returns GetDoubleAuthsGetDoubleAuthsDoubleAuth.Trust_device_id, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthsGetDoubleAuthsDoubleAuth) GetTrust_device_id() string {
	return v.Trust_device_id
}

// GetDoubleAuthsResponse is returned by GetDoubleAuths on success.
type GetDoubleAuthsResponse struct {
	GetDoubleAuths []GetDoubleAuthsGetDoubleAuthsDoubleAuth `json:"getDoubleAuths"`
}

// GetGetDoubleAuths returns GetDoubleAuthsResponse.GetDoubleAuths, and is useful for accessing the field via an interface.
func (v *GetDoubleAuthsResponse) GetGetDoubleAuths() []GetDoubleAuthsGetDoubleAuthsDoubleAuth {
	return v.GetDoubleAuths
}

// GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo includes the requested fields of the GraphQL type MedicalInfo.
type GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo struct {
	Id                     string           `json:"id"`
	Name                   string           `json:"name"`
	Firstname              string           `json:"firstname"`
	Birthdate              int              `json:"birthdate"`
	Sex                    Sex              `json:"sex"`
	Height                 int              `json:"height"`
	Weight                 int              `json:"weight"`
	Primary_doctor_id      string           `json:"primary_doctor_id"`
	Antecedent_disease_ids []string         `json:"antecedent_disease_ids"`
	Onboarding_status      OnboardingStatus `json:"onboarding_status"`
}

// GetId returns GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo.Id, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo) GetId() string { return v.Id }

// GetName returns GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo.Name, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo) GetName() string { return v.Name }

// GetFirstname returns GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo.Firstname, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo) GetFirstname() string {
	return v.Firstname
}

// GetBirthdate returns GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo.Birthdate, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo) GetBirthdate() int { return v.Birthdate }

// GetSex returns GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo.Sex, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo) GetSex() Sex { return v.Sex }

// GetHeight returns GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo.Height, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo) GetHeight() int { return v.Height }

// GetWeight returns GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo.Weight, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo) GetWeight() int { return v.Weight }

// GetPrimary_doctor_id returns GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo.Primary_doctor_id, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo) GetPrimary_doctor_id() string {
	return v.Primary_doctor_id
}

// GetAntecedent_disease_ids returns GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo.Antecedent_disease_ids, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo) GetAntecedent_disease_ids() []string {
	return v.Antecedent_disease_ids
}

// GetOnboarding_status returns GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo.Onboarding_status, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo) GetOnboarding_status() OnboardingStatus {
	return v.Onboarding_status
}

// GetMedicalFolderByIDResponse is returned by GetMedicalFolderByID on success.
type GetMedicalFolderByIDResponse struct {
	GetMedicalFolderById GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo `json:"getMedicalFolderById"`
}

// GetGetMedicalFolderById returns GetMedicalFolderByIDResponse.GetMedicalFolderById, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderByIDResponse) GetGetMedicalFolderById() GetMedicalFolderByIDGetMedicalFolderByIdMedicalInfo {
	return v.GetMedicalFolderById
}

// GetMedicalFolderGetMedicalFolderMedicalInfo includes the requested fields of the GraphQL type MedicalInfo.
type GetMedicalFolderGetMedicalFolderMedicalInfo struct {
	Id                     string           `json:"id"`
	Name                   string           `json:"name"`
	Firstname              string           `json:"firstname"`
	Birthdate              int              `json:"birthdate"`
	Sex                    Sex              `json:"sex"`
	Height                 int              `json:"height"`
	Weight                 int              `json:"weight"`
	Primary_doctor_id      string           `json:"primary_doctor_id"`
	Antecedent_disease_ids []string         `json:"antecedent_disease_ids"`
	Onboarding_status      OnboardingStatus `json:"onboarding_status"`
}

// GetId returns GetMedicalFolderGetMedicalFolderMedicalInfo.Id, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderGetMedicalFolderMedicalInfo) GetId() string { return v.Id }

// GetName returns GetMedicalFolderGetMedicalFolderMedicalInfo.Name, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderGetMedicalFolderMedicalInfo) GetName() string { return v.Name }

// GetFirstname returns GetMedicalFolderGetMedicalFolderMedicalInfo.Firstname, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderGetMedicalFolderMedicalInfo) GetFirstname() string { return v.Firstname }

// GetBirthdate returns GetMedicalFolderGetMedicalFolderMedicalInfo.Birthdate, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderGetMedicalFolderMedicalInfo) GetBirthdate() int { return v.Birthdate }

// GetSex returns GetMedicalFolderGetMedicalFolderMedicalInfo.Sex, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderGetMedicalFolderMedicalInfo) GetSex() Sex { return v.Sex }

// GetHeight returns GetMedicalFolderGetMedicalFolderMedicalInfo.Height, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderGetMedicalFolderMedicalInfo) GetHeight() int { return v.Height }

// GetWeight returns GetMedicalFolderGetMedicalFolderMedicalInfo.Weight, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderGetMedicalFolderMedicalInfo) GetWeight() int { return v.Weight }

// GetPrimary_doctor_id returns GetMedicalFolderGetMedicalFolderMedicalInfo.Primary_doctor_id, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderGetMedicalFolderMedicalInfo) GetPrimary_doctor_id() string {
	return v.Primary_doctor_id
}

// GetAntecedent_disease_ids returns GetMedicalFolderGetMedicalFolderMedicalInfo.Antecedent_disease_ids, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderGetMedicalFolderMedicalInfo) GetAntecedent_disease_ids() []string {
	return v.Antecedent_disease_ids
}

// GetOnboarding_status returns GetMedicalFolderGetMedicalFolderMedicalInfo.Onboarding_status, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderGetMedicalFolderMedicalInfo) GetOnboarding_status() OnboardingStatus {
	return v.Onboarding_status
}

// GetMedicalFolderResponse is returned by GetMedicalFolder on success.
type GetMedicalFolderResponse struct {
	GetMedicalFolder []GetMedicalFolderGetMedicalFolderMedicalInfo `json:"getMedicalFolder"`
}

// GetGetMedicalFolder returns GetMedicalFolderResponse.GetMedicalFolder, and is useful for accessing the field via an interface.
func (v *GetMedicalFolderResponse) GetGetMedicalFolder() []GetMedicalFolderGetMedicalFolderMedicalInfo {
	return v.GetMedicalFolder
}

// GetMedicineByIDGetMedicineByIDMedicine includes the requested fields of the GraphQL type Medicine.
type GetMedicineByIDGetMedicineByIDMedicine struct {
	Id               string       `json:"id"`
	Name             string       `json:"name"`
	Unit             MedicineUnit `json:"unit"`
	Target_diseases  []string     `json:"target_diseases"`
	Treated_symptoms []string     `json:"treated_symptoms"`
	Side_effects     []string     `json:"side_effects"`
}

// GetId returns GetMedicineByIDGetMedicineByIDMedicine.Id, and is useful for accessing the field via an interface.
func (v *GetMedicineByIDGetMedicineByIDMedicine) GetId() string { return v.Id }

// GetName returns GetMedicineByIDGetMedicineByIDMedicine.Name, and is useful for accessing the field via an interface.
func (v *GetMedicineByIDGetMedicineByIDMedicine) GetName() string { return v.Name }

// GetUnit returns GetMedicineByIDGetMedicineByIDMedicine.Unit, and is useful for accessing the field via an interface.
func (v *GetMedicineByIDGetMedicineByIDMedicine) GetUnit() MedicineUnit { return v.Unit }

// GetTarget_diseases returns GetMedicineByIDGetMedicineByIDMedicine.Target_diseases, and is useful for accessing the field via an interface.
func (v *GetMedicineByIDGetMedicineByIDMedicine) GetTarget_diseases() []string {
	return v.Target_diseases
}

// GetTreated_symptoms returns GetMedicineByIDGetMedicineByIDMedicine.Treated_symptoms, and is useful for accessing the field via an interface.
func (v *GetMedicineByIDGetMedicineByIDMedicine) GetTreated_symptoms() []string {
	return v.Treated_symptoms
}

// GetSide_effects returns GetMedicineByIDGetMedicineByIDMedicine.Side_effects, and is useful for accessing the field via an interface.
func (v *GetMedicineByIDGetMedicineByIDMedicine) GetSide_effects() []string { return v.Side_effects }

// GetMedicineByIDResponse is returned by GetMedicineByID on success.
type GetMedicineByIDResponse struct {
	GetMedicineByID GetMedicineByIDGetMedicineByIDMedicine `json:"getMedicineByID"`
}

// GetGetMedicineByID returns GetMedicineByIDResponse.GetMedicineByID, and is useful for accessing the field via an interface.
func (v *GetMedicineByIDResponse) GetGetMedicineByID() GetMedicineByIDGetMedicineByIDMedicine {
	return v.GetMedicineByID
}

// GetMedicinesGetMedicinesMedicine includes the requested fields of the GraphQL type Medicine.
type GetMedicinesGetMedicinesMedicine struct {
	Id               string       `json:"id"`
	Name             string       `json:"name"`
	Unit             MedicineUnit `json:"unit"`
	Target_diseases  []string     `json:"target_diseases"`
	Treated_symptoms []string     `json:"treated_symptoms"`
	Side_effects     []string     `json:"side_effects"`
}

// GetId returns GetMedicinesGetMedicinesMedicine.Id, and is useful for accessing the field via an interface.
func (v *GetMedicinesGetMedicinesMedicine) GetId() string { return v.Id }

// GetName returns GetMedicinesGetMedicinesMedicine.Name, and is useful for accessing the field via an interface.
func (v *GetMedicinesGetMedicinesMedicine) GetName() string { return v.Name }

// GetUnit returns GetMedicinesGetMedicinesMedicine.Unit, and is useful for accessing the field via an interface.
func (v *GetMedicinesGetMedicinesMedicine) GetUnit() MedicineUnit { return v.Unit }

// GetTarget_diseases returns GetMedicinesGetMedicinesMedicine.Target_diseases, and is useful for accessing the field via an interface.
func (v *GetMedicinesGetMedicinesMedicine) GetTarget_diseases() []string { return v.Target_diseases }

// GetTreated_symptoms returns GetMedicinesGetMedicinesMedicine.Treated_symptoms, and is useful for accessing the field via an interface.
func (v *GetMedicinesGetMedicinesMedicine) GetTreated_symptoms() []string { return v.Treated_symptoms }

// GetSide_effects returns GetMedicinesGetMedicinesMedicine.Side_effects, and is useful for accessing the field via an interface.
func (v *GetMedicinesGetMedicinesMedicine) GetSide_effects() []string { return v.Side_effects }

// GetMedicinesResponse is returned by GetMedicines on success.
type GetMedicinesResponse struct {
	GetMedicines []GetMedicinesGetMedicinesMedicine `json:"getMedicines"`
}

// GetGetMedicines returns GetMedicinesResponse.GetMedicines, and is useful for accessing the field via an interface.
func (v *GetMedicinesResponse) GetGetMedicines() []GetMedicinesGetMedicinesMedicine {
	return v.GetMedicines
}

// GetNlpReportsByVersionGetNlpReportsByVersionNlpReport includes the requested fields of the GraphQL type NlpReport.
type GetNlpReportsByVersionGetNlpReportsByVersionNlpReport struct {
	Id               string                                                        `json:"id"`
	Version          int                                                           `json:"version"`
	Input_symptoms   []string                                                      `json:"input_symptoms"`
	Input_sentence   string                                                        `json:"input_sentence"`
	Output           []GetNlpReportsByVersionGetNlpReportsByVersionNlpReportOutput `json:"output"`
	Computation_time int                                                           `json:"computation_time"`
}

// GetId returns GetNlpReportsByVersionGetNlpReportsByVersionNlpReport.Id, and is useful for accessing the field via an interface.
func (v *GetNlpReportsByVersionGetNlpReportsByVersionNlpReport) GetId() string { return v.Id }

// GetVersion returns GetNlpReportsByVersionGetNlpReportsByVersionNlpReport.Version, and is useful for accessing the field via an interface.
func (v *GetNlpReportsByVersionGetNlpReportsByVersionNlpReport) GetVersion() int { return v.Version }

// GetInput_symptoms returns GetNlpReportsByVersionGetNlpReportsByVersionNlpReport.Input_symptoms, and is useful for accessing the field via an interface.
func (v *GetNlpReportsByVersionGetNlpReportsByVersionNlpReport) GetInput_symptoms() []string {
	return v.Input_symptoms
}

// GetInput_sentence returns GetNlpReportsByVersionGetNlpReportsByVersionNlpReport.Input_sentence, and is useful for accessing the field via an interface.
func (v *GetNlpReportsByVersionGetNlpReportsByVersionNlpReport) GetInput_sentence() string {
	return v.Input_sentence
}

// GetOutput returns GetNlpReportsByVersionGetNlpReportsByVersionNlpReport.Output, and is useful for accessing the field via an interface.
func (v *GetNlpReportsByVersionGetNlpReportsByVersionNlpReport) GetOutput() []GetNlpReportsByVersionGetNlpReportsByVersionNlpReportOutput {
	return v.Output
}

// GetComputation_time returns GetNlpReportsByVersionGetNlpReportsByVersionNlpReport.Computation_time, and is useful for accessing the field via an interface.
func (v *GetNlpReportsByVersionGetNlpReportsByVersionNlpReport) GetComputation_time() int {
	return v.Computation_time
}

// GetNlpReportsByVersionGetNlpReportsByVersionNlpReportOutput includes the requested fields of the GraphQL type NlpReportOutput.
type GetNlpReportsByVersionGetNlpReportsByVersionNlpReportOutput struct {
	Symptom string `json:"symptom"`
	Present bool   `json:"present"`
}

// GetSymptom returns GetNlpReportsByVersionGetNlpReportsByVersionNlpReportOutput.Symptom, and is useful for accessing the field via an interface.
func (v *GetNlpReportsByVersionGetNlpReportsByVersionNlpReportOutput) GetSymptom() string {
	return v.Symptom
}

// GetPresent returns GetNlpReportsByVersionGetNlpReportsByVersionNlpReportOutput.Present, and is useful for accessing the field via an interface.
func (v *GetNlpReportsByVersionGetNlpReportsByVersionNlpReportOutput) GetPresent() bool {
	return v.Present
}

// GetNlpReportsByVersionResponse is returned by GetNlpReportsByVersion on success.
type GetNlpReportsByVersionResponse struct {
	GetNlpReportsByVersion []GetNlpReportsByVersionGetNlpReportsByVersionNlpReport `json:"getNlpReportsByVersion"`
}

// GetGetNlpReportsByVersion returns GetNlpReportsByVersionResponse.GetNlpReportsByVersion, and is useful for accessing the field via an interface.
func (v *GetNlpReportsByVersionResponse) GetGetNlpReportsByVersion() []GetNlpReportsByVersionGetNlpReportsByVersionNlpReport {
	return v.GetNlpReportsByVersion
}

// GetNlpReportsGetNlpReportsNlpReport includes the requested fields of the GraphQL type NlpReport.
type GetNlpReportsGetNlpReportsNlpReport struct {
	Id               string                                      `json:"id"`
	Version          int                                         `json:"version"`
	Input_symptoms   []string                                    `json:"input_symptoms"`
	Input_sentence   string                                      `json:"input_sentence"`
	Output           []GetNlpReportsGetNlpReportsNlpReportOutput `json:"output"`
	Computation_time int                                         `json:"computation_time"`
}

// GetId returns GetNlpReportsGetNlpReportsNlpReport.Id, and is useful for accessing the field via an interface.
func (v *GetNlpReportsGetNlpReportsNlpReport) GetId() string { return v.Id }

// GetVersion returns GetNlpReportsGetNlpReportsNlpReport.Version, and is useful for accessing the field via an interface.
func (v *GetNlpReportsGetNlpReportsNlpReport) GetVersion() int { return v.Version }

// GetInput_symptoms returns GetNlpReportsGetNlpReportsNlpReport.Input_symptoms, and is useful for accessing the field via an interface.
func (v *GetNlpReportsGetNlpReportsNlpReport) GetInput_symptoms() []string { return v.Input_symptoms }

// GetInput_sentence returns GetNlpReportsGetNlpReportsNlpReport.Input_sentence, and is useful for accessing the field via an interface.
func (v *GetNlpReportsGetNlpReportsNlpReport) GetInput_sentence() string { return v.Input_sentence }

// GetOutput returns GetNlpReportsGetNlpReportsNlpReport.Output, and is useful for accessing the field via an interface.
func (v *GetNlpReportsGetNlpReportsNlpReport) GetOutput() []GetNlpReportsGetNlpReportsNlpReportOutput {
	return v.Output
}

// GetComputation_time returns GetNlpReportsGetNlpReportsNlpReport.Computation_time, and is useful for accessing the field via an interface.
func (v *GetNlpReportsGetNlpReportsNlpReport) GetComputation_time() int { return v.Computation_time }

// GetNlpReportsGetNlpReportsNlpReportOutput includes the requested fields of the GraphQL type NlpReportOutput.
type GetNlpReportsGetNlpReportsNlpReportOutput struct {
	Symptom string `json:"symptom"`
	Present bool   `json:"present"`
}

// GetSymptom returns GetNlpReportsGetNlpReportsNlpReportOutput.Symptom, and is useful for accessing the field via an interface.
func (v *GetNlpReportsGetNlpReportsNlpReportOutput) GetSymptom() string { return v.Symptom }

// GetPresent returns GetNlpReportsGetNlpReportsNlpReportOutput.Present, and is useful for accessing the field via an interface.
func (v *GetNlpReportsGetNlpReportsNlpReportOutput) GetPresent() bool { return v.Present }

// GetNlpReportsResponse is returned by GetNlpReports on success.
type GetNlpReportsResponse struct {
	GetNlpReports []GetNlpReportsGetNlpReportsNlpReport `json:"getNlpReports"`
}

// GetGetNlpReports returns GetNlpReportsResponse.GetNlpReports, and is useful for accessing the field via an interface.
func (v *GetNlpReportsResponse) GetGetNlpReports() []GetNlpReportsGetNlpReportsNlpReport {
	return v.GetNlpReports
}

// GetNotificationByIdGetNotificationByIdNotification includes the requested fields of the GraphQL type Notification.
type GetNotificationByIdGetNotificationByIdNotification struct {
	Id      string `json:"id"`
	Token   string `json:"token"`
	Title   string `json:"title"`
	Message string `json:"message"`
}

// GetId returns GetNotificationByIdGetNotificationByIdNotification.Id, and is useful for accessing the field via an interface.
func (v *GetNotificationByIdGetNotificationByIdNotification) GetId() string { return v.Id }

// GetToken returns GetNotificationByIdGetNotificationByIdNotification.Token, and is useful for accessing the field via an interface.
func (v *GetNotificationByIdGetNotificationByIdNotification) GetToken() string { return v.Token }

// GetTitle returns GetNotificationByIdGetNotificationByIdNotification.Title, and is useful for accessing the field via an interface.
func (v *GetNotificationByIdGetNotificationByIdNotification) GetTitle() string { return v.Title }

// GetMessage returns GetNotificationByIdGetNotificationByIdNotification.Message, and is useful for accessing the field via an interface.
func (v *GetNotificationByIdGetNotificationByIdNotification) GetMessage() string { return v.Message }

// GetNotificationByIdResponse is returned by GetNotificationById on success.
type GetNotificationByIdResponse struct {
	GetNotificationById GetNotificationByIdGetNotificationByIdNotification `json:"getNotificationById"`
}

// GetGetNotificationById returns GetNotificationByIdResponse.GetNotificationById, and is useful for accessing the field via an interface.
func (v *GetNotificationByIdResponse) GetGetNotificationById() GetNotificationByIdGetNotificationByIdNotification {
	return v.GetNotificationById
}

// GetNotificationsGetNotificationsNotification includes the requested fields of the GraphQL type Notification.
type GetNotificationsGetNotificationsNotification struct {
	Id      string `json:"id"`
	Token   string `json:"token"`
	Title   string `json:"title"`
	Message string `json:"message"`
}

// GetId returns GetNotificationsGetNotificationsNotification.Id, and is useful for accessing the field via an interface.
func (v *GetNotificationsGetNotificationsNotification) GetId() string { return v.Id }

// GetToken returns GetNotificationsGetNotificationsNotification.Token, and is useful for accessing the field via an interface.
func (v *GetNotificationsGetNotificationsNotification) GetToken() string { return v.Token }

// GetTitle returns GetNotificationsGetNotificationsNotification.Title, and is useful for accessing the field via an interface.
func (v *GetNotificationsGetNotificationsNotification) GetTitle() string { return v.Title }

// GetMessage returns GetNotificationsGetNotificationsNotification.Message, and is useful for accessing the field via an interface.
func (v *GetNotificationsGetNotificationsNotification) GetMessage() string { return v.Message }

// GetNotificationsResponse is returned by GetNotifications on success.
type GetNotificationsResponse struct {
	GetNotifications []GetNotificationsGetNotificationsNotification `json:"getNotifications"`
}

// GetGetNotifications returns GetNotificationsResponse.GetNotifications, and is useful for accessing the field via an interface.
func (v *GetNotificationsResponse) GetGetNotifications() []GetNotificationsGetNotificationsNotification {
	return v.GetNotifications
}

// GetPatientByEmailGetPatientByEmailPatient includes the requested fields of the GraphQL type Patient.
type GetPatientByEmailGetPatientByEmailPatient struct {
	Id                      string   `json:"id"`
	Email                   string   `json:"email"`
	Password                string   `json:"password"`
	Rendez_vous_ids         []string `json:"rendez_vous_ids"`
	Medical_info_id         string   `json:"medical_info_id"`
	Document_ids            []string `json:"document_ids"`
	Treatment_follow_up_ids []string `json:"treatment_follow_up_ids"`
	Chat_ids                []string `json:"chat_ids"`
	Double_auth_methods_id  string   `json:"double_auth_methods_id"`
}

// GetId returns GetPatientByEmailGetPatientByEmailPatient.Id, and is useful for accessing the field via an interface.
func (v *GetPatientByEmailGetPatientByEmailPatient) GetId() string { return v.Id }

// GetEmail returns GetPatientByEmailGetPatientByEmailPatient.Email, and is useful for accessing the field via an interface.
func (v *GetPatientByEmailGetPatientByEmailPatient) GetEmail() string { return v.Email }

// GetPassword returns GetPatientByEmailGetPatientByEmailPatient.Password, and is useful for accessing the field via an interface.
func (v *GetPatientByEmailGetPatientByEmailPatient) GetPassword() string { return v.Password }

// GetRendez_vous_ids returns GetPatientByEmailGetPatientByEmailPatient.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *GetPatientByEmailGetPatientByEmailPatient) GetRendez_vous_ids() []string {
	return v.Rendez_vous_ids
}

// GetMedical_info_id returns GetPatientByEmailGetPatientByEmailPatient.Medical_info_id, and is useful for accessing the field via an interface.
func (v *GetPatientByEmailGetPatientByEmailPatient) GetMedical_info_id() string {
	return v.Medical_info_id
}

// GetDocument_ids returns GetPatientByEmailGetPatientByEmailPatient.Document_ids, and is useful for accessing the field via an interface.
func (v *GetPatientByEmailGetPatientByEmailPatient) GetDocument_ids() []string { return v.Document_ids }

// GetTreatment_follow_up_ids returns GetPatientByEmailGetPatientByEmailPatient.Treatment_follow_up_ids, and is useful for accessing the field via an interface.
func (v *GetPatientByEmailGetPatientByEmailPatient) GetTreatment_follow_up_ids() []string {
	return v.Treatment_follow_up_ids
}

// GetChat_ids returns GetPatientByEmailGetPatientByEmailPatient.Chat_ids, and is useful for accessing the field via an interface.
func (v *GetPatientByEmailGetPatientByEmailPatient) GetChat_ids() []string { return v.Chat_ids }

// GetDouble_auth_methods_id returns GetPatientByEmailGetPatientByEmailPatient.Double_auth_methods_id, and is useful for accessing the field via an interface.
func (v *GetPatientByEmailGetPatientByEmailPatient) GetDouble_auth_methods_id() string {
	return v.Double_auth_methods_id
}

// GetPatientByEmailResponse is returned by GetPatientByEmail on success.
type GetPatientByEmailResponse struct {
	GetPatientByEmail GetPatientByEmailGetPatientByEmailPatient `json:"getPatientByEmail"`
}

// GetGetPatientByEmail returns GetPatientByEmailResponse.GetPatientByEmail, and is useful for accessing the field via an interface.
func (v *GetPatientByEmailResponse) GetGetPatientByEmail() GetPatientByEmailGetPatientByEmailPatient {
	return v.GetPatientByEmail
}

// GetPatientByIdGetPatientByIdPatient includes the requested fields of the GraphQL type Patient.
type GetPatientByIdGetPatientByIdPatient struct {
	Id                      string   `json:"id"`
	Email                   string   `json:"email"`
	Password                string   `json:"password"`
	Rendez_vous_ids         []string `json:"rendez_vous_ids"`
	Medical_info_id         string   `json:"medical_info_id"`
	Document_ids            []string `json:"document_ids"`
	Treatment_follow_up_ids []string `json:"treatment_follow_up_ids"`
	Chat_ids                []string `json:"chat_ids"`
	Device_connect          []string `json:"device_connect"`
	Double_auth_methods_id  string   `json:"double_auth_methods_id"`
}

// GetId returns GetPatientByIdGetPatientByIdPatient.Id, and is useful for accessing the field via an interface.
func (v *GetPatientByIdGetPatientByIdPatient) GetId() string { return v.Id }

// GetEmail returns GetPatientByIdGetPatientByIdPatient.Email, and is useful for accessing the field via an interface.
func (v *GetPatientByIdGetPatientByIdPatient) GetEmail() string { return v.Email }

// GetPassword returns GetPatientByIdGetPatientByIdPatient.Password, and is useful for accessing the field via an interface.
func (v *GetPatientByIdGetPatientByIdPatient) GetPassword() string { return v.Password }

// GetRendez_vous_ids returns GetPatientByIdGetPatientByIdPatient.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *GetPatientByIdGetPatientByIdPatient) GetRendez_vous_ids() []string { return v.Rendez_vous_ids }

// GetMedical_info_id returns GetPatientByIdGetPatientByIdPatient.Medical_info_id, and is useful for accessing the field via an interface.
func (v *GetPatientByIdGetPatientByIdPatient) GetMedical_info_id() string { return v.Medical_info_id }

// GetDocument_ids returns GetPatientByIdGetPatientByIdPatient.Document_ids, and is useful for accessing the field via an interface.
func (v *GetPatientByIdGetPatientByIdPatient) GetDocument_ids() []string { return v.Document_ids }

// GetTreatment_follow_up_ids returns GetPatientByIdGetPatientByIdPatient.Treatment_follow_up_ids, and is useful for accessing the field via an interface.
func (v *GetPatientByIdGetPatientByIdPatient) GetTreatment_follow_up_ids() []string {
	return v.Treatment_follow_up_ids
}

// GetChat_ids returns GetPatientByIdGetPatientByIdPatient.Chat_ids, and is useful for accessing the field via an interface.
func (v *GetPatientByIdGetPatientByIdPatient) GetChat_ids() []string { return v.Chat_ids }

// GetDevice_connect returns GetPatientByIdGetPatientByIdPatient.Device_connect, and is useful for accessing the field via an interface.
func (v *GetPatientByIdGetPatientByIdPatient) GetDevice_connect() []string { return v.Device_connect }

// GetDouble_auth_methods_id returns GetPatientByIdGetPatientByIdPatient.Double_auth_methods_id, and is useful for accessing the field via an interface.
func (v *GetPatientByIdGetPatientByIdPatient) GetDouble_auth_methods_id() string {
	return v.Double_auth_methods_id
}

// GetPatientByIdResponse is returned by GetPatientById on success.
type GetPatientByIdResponse struct {
	GetPatientById GetPatientByIdGetPatientByIdPatient `json:"getPatientById"`
}

// GetGetPatientById returns GetPatientByIdResponse.GetPatientById, and is useful for accessing the field via an interface.
func (v *GetPatientByIdResponse) GetGetPatientById() GetPatientByIdGetPatientByIdPatient {
	return v.GetPatientById
}

// GetPatientDocumentGetPatientDocument includes the requested fields of the GraphQL type Document.
type GetPatientDocumentGetPatientDocument struct {
	Id            string       `json:"id"`
	Owner_id      string       `json:"owner_id"`
	Name          string       `json:"name"`
	Document_type DocumentType `json:"document_type"`
	Category      Category     `json:"category"`
	Is_favorite   bool         `json:"is_favorite"`
	Download_url  string       `json:"download_url"`
}

// GetId returns GetPatientDocumentGetPatientDocument.Id, and is useful for accessing the field via an interface.
func (v *GetPatientDocumentGetPatientDocument) GetId() string { return v.Id }

// GetOwner_id returns GetPatientDocumentGetPatientDocument.Owner_id, and is useful for accessing the field via an interface.
func (v *GetPatientDocumentGetPatientDocument) GetOwner_id() string { return v.Owner_id }

// GetName returns GetPatientDocumentGetPatientDocument.Name, and is useful for accessing the field via an interface.
func (v *GetPatientDocumentGetPatientDocument) GetName() string { return v.Name }

// GetDocument_type returns GetPatientDocumentGetPatientDocument.Document_type, and is useful for accessing the field via an interface.
func (v *GetPatientDocumentGetPatientDocument) GetDocument_type() DocumentType {
	return v.Document_type
}

// GetCategory returns GetPatientDocumentGetPatientDocument.Category, and is useful for accessing the field via an interface.
func (v *GetPatientDocumentGetPatientDocument) GetCategory() Category { return v.Category }

// GetIs_favorite returns GetPatientDocumentGetPatientDocument.Is_favorite, and is useful for accessing the field via an interface.
func (v *GetPatientDocumentGetPatientDocument) GetIs_favorite() bool { return v.Is_favorite }

// GetDownload_url returns GetPatientDocumentGetPatientDocument.Download_url, and is useful for accessing the field via an interface.
func (v *GetPatientDocumentGetPatientDocument) GetDownload_url() string { return v.Download_url }

// GetPatientDocumentResponse is returned by GetPatientDocument on success.
type GetPatientDocumentResponse struct {
	GetPatientDocument []GetPatientDocumentGetPatientDocument `json:"getPatientDocument"`
}

// GetGetPatientDocument returns GetPatientDocumentResponse.GetPatientDocument, and is useful for accessing the field via an interface.
func (v *GetPatientDocumentResponse) GetGetPatientDocument() []GetPatientDocumentGetPatientDocument {
	return v.GetPatientDocument
}

// GetPatientRdvGetPatientRdv includes the requested fields of the GraphQL type Rdv.
type GetPatientRdvGetPatientRdv struct {
	Id                 string            `json:"id"`
	Doctor_id          string            `json:"doctor_id"`
	Id_patient         string            `json:"id_patient"`
	Start_date         int               `json:"start_date"`
	End_date           int               `json:"end_date"`
	Cancelation_reason string            `json:"cancelation_reason"`
	Appointment_status AppointmentStatus `json:"appointment_status"`
	Session_id         string            `json:"session_id"`
	Health_method      string            `json:"health_method"`
}

// GetId returns GetPatientRdvGetPatientRdv.Id, and is useful for accessing the field via an interface.
func (v *GetPatientRdvGetPatientRdv) GetId() string { return v.Id }

// GetDoctor_id returns GetPatientRdvGetPatientRdv.Doctor_id, and is useful for accessing the field via an interface.
func (v *GetPatientRdvGetPatientRdv) GetDoctor_id() string { return v.Doctor_id }

// GetId_patient returns GetPatientRdvGetPatientRdv.Id_patient, and is useful for accessing the field via an interface.
func (v *GetPatientRdvGetPatientRdv) GetId_patient() string { return v.Id_patient }

// GetStart_date returns GetPatientRdvGetPatientRdv.Start_date, and is useful for accessing the field via an interface.
func (v *GetPatientRdvGetPatientRdv) GetStart_date() int { return v.Start_date }

// GetEnd_date returns GetPatientRdvGetPatientRdv.End_date, and is useful for accessing the field via an interface.
func (v *GetPatientRdvGetPatientRdv) GetEnd_date() int { return v.End_date }

// GetCancelation_reason returns GetPatientRdvGetPatientRdv.Cancelation_reason, and is useful for accessing the field via an interface.
func (v *GetPatientRdvGetPatientRdv) GetCancelation_reason() string { return v.Cancelation_reason }

// GetAppointment_status returns GetPatientRdvGetPatientRdv.Appointment_status, and is useful for accessing the field via an interface.
func (v *GetPatientRdvGetPatientRdv) GetAppointment_status() AppointmentStatus {
	return v.Appointment_status
}

// GetSession_id returns GetPatientRdvGetPatientRdv.Session_id, and is useful for accessing the field via an interface.
func (v *GetPatientRdvGetPatientRdv) GetSession_id() string { return v.Session_id }

// GetHealth_method returns GetPatientRdvGetPatientRdv.Health_method, and is useful for accessing the field via an interface.
func (v *GetPatientRdvGetPatientRdv) GetHealth_method() string { return v.Health_method }

// GetPatientRdvResponse is returned by GetPatientRdv on success.
type GetPatientRdvResponse struct {
	GetPatientRdv []GetPatientRdvGetPatientRdv `json:"getPatientRdv"`
}

// GetGetPatientRdv returns GetPatientRdvResponse.GetPatientRdv, and is useful for accessing the field via an interface.
func (v *GetPatientRdvResponse) GetGetPatientRdv() []GetPatientRdvGetPatientRdv {
	return v.GetPatientRdv
}

// GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient includes the requested fields of the GraphQL type Patient.
type GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient struct {
	Id                      string   `json:"id"`
	Email                   string   `json:"email"`
	Password                string   `json:"password"`
	Rendez_vous_ids         []string `json:"rendez_vous_ids"`
	Medical_info_id         string   `json:"medical_info_id"`
	Document_ids            []string `json:"document_ids"`
	Treatment_follow_up_ids []string `json:"treatment_follow_up_ids"`
	Chat_ids                []string `json:"chat_ids"`
	Device_connect          []string `json:"device_connect"`
	Double_auth_methods_id  string   `json:"double_auth_methods_id"`
}

// GetId returns GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient.Id, and is useful for accessing the field via an interface.
func (v *GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient) GetId() string { return v.Id }

// GetEmail returns GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient.Email, and is useful for accessing the field via an interface.
func (v *GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient) GetEmail() string { return v.Email }

// GetPassword returns GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient.Password, and is useful for accessing the field via an interface.
func (v *GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient) GetPassword() string {
	return v.Password
}

// GetRendez_vous_ids returns GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient) GetRendez_vous_ids() []string {
	return v.Rendez_vous_ids
}

// GetMedical_info_id returns GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient.Medical_info_id, and is useful for accessing the field via an interface.
func (v *GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient) GetMedical_info_id() string {
	return v.Medical_info_id
}

// GetDocument_ids returns GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient.Document_ids, and is useful for accessing the field via an interface.
func (v *GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient) GetDocument_ids() []string {
	return v.Document_ids
}

// GetTreatment_follow_up_ids returns GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient.Treatment_follow_up_ids, and is useful for accessing the field via an interface.
func (v *GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient) GetTreatment_follow_up_ids() []string {
	return v.Treatment_follow_up_ids
}

// GetChat_ids returns GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient.Chat_ids, and is useful for accessing the field via an interface.
func (v *GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient) GetChat_ids() []string {
	return v.Chat_ids
}

// GetDevice_connect returns GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient.Device_connect, and is useful for accessing the field via an interface.
func (v *GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient) GetDevice_connect() []string {
	return v.Device_connect
}

// GetDouble_auth_methods_id returns GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient.Double_auth_methods_id, and is useful for accessing the field via an interface.
func (v *GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient) GetDouble_auth_methods_id() string {
	return v.Double_auth_methods_id
}

// GetPatientsFromDoctorByIdResponse is returned by GetPatientsFromDoctorById on success.
type GetPatientsFromDoctorByIdResponse struct {
	GetPatientsFromDoctorById []GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient `json:"getPatientsFromDoctorById"`
}

// GetGetPatientsFromDoctorById returns GetPatientsFromDoctorByIdResponse.GetPatientsFromDoctorById, and is useful for accessing the field via an interface.
func (v *GetPatientsFromDoctorByIdResponse) GetGetPatientsFromDoctorById() []GetPatientsFromDoctorByIdGetPatientsFromDoctorByIdPatient {
	return v.GetPatientsFromDoctorById
}

// GetPatientsGetPatientsPatient includes the requested fields of the GraphQL type Patient.
type GetPatientsGetPatientsPatient struct {
	Id                      string   `json:"id"`
	Email                   string   `json:"email"`
	Password                string   `json:"password"`
	Rendez_vous_ids         []string `json:"rendez_vous_ids"`
	Medical_info_id         string   `json:"medical_info_id"`
	Document_ids            []string `json:"document_ids"`
	Treatment_follow_up_ids []string `json:"treatment_follow_up_ids"`
	Chat_ids                []string `json:"chat_ids"`
	Device_connect          []string `json:"device_connect"`
	Double_auth_methods_id  string   `json:"double_auth_methods_id"`
}

// GetId returns GetPatientsGetPatientsPatient.Id, and is useful for accessing the field via an interface.
func (v *GetPatientsGetPatientsPatient) GetId() string { return v.Id }

// GetEmail returns GetPatientsGetPatientsPatient.Email, and is useful for accessing the field via an interface.
func (v *GetPatientsGetPatientsPatient) GetEmail() string { return v.Email }

// GetPassword returns GetPatientsGetPatientsPatient.Password, and is useful for accessing the field via an interface.
func (v *GetPatientsGetPatientsPatient) GetPassword() string { return v.Password }

// GetRendez_vous_ids returns GetPatientsGetPatientsPatient.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *GetPatientsGetPatientsPatient) GetRendez_vous_ids() []string { return v.Rendez_vous_ids }

// GetMedical_info_id returns GetPatientsGetPatientsPatient.Medical_info_id, and is useful for accessing the field via an interface.
func (v *GetPatientsGetPatientsPatient) GetMedical_info_id() string { return v.Medical_info_id }

// GetDocument_ids returns GetPatientsGetPatientsPatient.Document_ids, and is useful for accessing the field via an interface.
func (v *GetPatientsGetPatientsPatient) GetDocument_ids() []string { return v.Document_ids }

// GetTreatment_follow_up_ids returns GetPatientsGetPatientsPatient.Treatment_follow_up_ids, and is useful for accessing the field via an interface.
func (v *GetPatientsGetPatientsPatient) GetTreatment_follow_up_ids() []string {
	return v.Treatment_follow_up_ids
}

// GetChat_ids returns GetPatientsGetPatientsPatient.Chat_ids, and is useful for accessing the field via an interface.
func (v *GetPatientsGetPatientsPatient) GetChat_ids() []string { return v.Chat_ids }

// GetDevice_connect returns GetPatientsGetPatientsPatient.Device_connect, and is useful for accessing the field via an interface.
func (v *GetPatientsGetPatientsPatient) GetDevice_connect() []string { return v.Device_connect }

// GetDouble_auth_methods_id returns GetPatientsGetPatientsPatient.Double_auth_methods_id, and is useful for accessing the field via an interface.
func (v *GetPatientsGetPatientsPatient) GetDouble_auth_methods_id() string {
	return v.Double_auth_methods_id
}

// GetPatientsResponse is returned by GetPatients on success.
type GetPatientsResponse struct {
	GetPatients []GetPatientsGetPatientsPatient `json:"getPatients"`
}

// GetGetPatients returns GetPatientsResponse.GetPatients, and is useful for accessing the field via an interface.
func (v *GetPatientsResponse) GetGetPatients() []GetPatientsGetPatientsPatient { return v.GetPatients }

// GetRdvByIdGetRdvByIdRdv includes the requested fields of the GraphQL type Rdv.
type GetRdvByIdGetRdvByIdRdv struct {
	Id                 string            `json:"id"`
	Doctor_id          string            `json:"doctor_id"`
	Id_patient         string            `json:"id_patient"`
	Start_date         int               `json:"start_date"`
	End_date           int               `json:"end_date"`
	Cancelation_reason string            `json:"cancelation_reason"`
	Appointment_status AppointmentStatus `json:"appointment_status"`
	Session_id         string            `json:"session_id"`
	Health_method      string            `json:"health_method"`
}

// GetId returns GetRdvByIdGetRdvByIdRdv.Id, and is useful for accessing the field via an interface.
func (v *GetRdvByIdGetRdvByIdRdv) GetId() string { return v.Id }

// GetDoctor_id returns GetRdvByIdGetRdvByIdRdv.Doctor_id, and is useful for accessing the field via an interface.
func (v *GetRdvByIdGetRdvByIdRdv) GetDoctor_id() string { return v.Doctor_id }

// GetId_patient returns GetRdvByIdGetRdvByIdRdv.Id_patient, and is useful for accessing the field via an interface.
func (v *GetRdvByIdGetRdvByIdRdv) GetId_patient() string { return v.Id_patient }

// GetStart_date returns GetRdvByIdGetRdvByIdRdv.Start_date, and is useful for accessing the field via an interface.
func (v *GetRdvByIdGetRdvByIdRdv) GetStart_date() int { return v.Start_date }

// GetEnd_date returns GetRdvByIdGetRdvByIdRdv.End_date, and is useful for accessing the field via an interface.
func (v *GetRdvByIdGetRdvByIdRdv) GetEnd_date() int { return v.End_date }

// GetCancelation_reason returns GetRdvByIdGetRdvByIdRdv.Cancelation_reason, and is useful for accessing the field via an interface.
func (v *GetRdvByIdGetRdvByIdRdv) GetCancelation_reason() string { return v.Cancelation_reason }

// GetAppointment_status returns GetRdvByIdGetRdvByIdRdv.Appointment_status, and is useful for accessing the field via an interface.
func (v *GetRdvByIdGetRdvByIdRdv) GetAppointment_status() AppointmentStatus {
	return v.Appointment_status
}

// GetSession_id returns GetRdvByIdGetRdvByIdRdv.Session_id, and is useful for accessing the field via an interface.
func (v *GetRdvByIdGetRdvByIdRdv) GetSession_id() string { return v.Session_id }

// GetHealth_method returns GetRdvByIdGetRdvByIdRdv.Health_method, and is useful for accessing the field via an interface.
func (v *GetRdvByIdGetRdvByIdRdv) GetHealth_method() string { return v.Health_method }

// GetRdvByIdResponse is returned by GetRdvById on success.
type GetRdvByIdResponse struct {
	GetRdvById GetRdvByIdGetRdvByIdRdv `json:"getRdvById"`
}

// GetGetRdvById returns GetRdvByIdResponse.GetRdvById, and is useful for accessing the field via an interface.
func (v *GetRdvByIdResponse) GetGetRdvById() GetRdvByIdGetRdvByIdRdv { return v.GetRdvById }

// GetSessionByIdGetSessionByIdSession includes the requested fields of the GraphQL type Session.
type GetSessionByIdGetSessionByIdSession struct {
	Id            string                                                      `json:"id"`
	Diseases      []GetSessionByIdGetSessionByIdSessionDiseases               `json:"diseases"`
	Symptoms      []GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom `json:"symptoms"`
	Age           int                                                         `json:"age"`
	Height        int                                                         `json:"height"`
	Weight        int                                                         `json:"weight"`
	Sex           string                                                      `json:"sex"`
	Ante_chirs    []string                                                    `json:"ante_chirs"`
	Ante_diseases []string                                                    `json:"ante_diseases"`
	Medicine      []string                                                    `json:"medicine"`
	Last_question string                                                      `json:"last_question"`
	Logs          []GetSessionByIdGetSessionByIdSessionLogs                   `json:"logs"`
	Alerts        []string                                                    `json:"alerts"`
}

// GetId returns GetSessionByIdGetSessionByIdSession.Id, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetId() string { return v.Id }

// GetDiseases returns GetSessionByIdGetSessionByIdSession.Diseases, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetDiseases() []GetSessionByIdGetSessionByIdSessionDiseases {
	return v.Diseases
}

// GetSymptoms returns GetSessionByIdGetSessionByIdSession.Symptoms, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetSymptoms() []GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom {
	return v.Symptoms
}

// GetAge returns GetSessionByIdGetSessionByIdSession.Age, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetAge() int { return v.Age }

// GetHeight returns GetSessionByIdGetSessionByIdSession.Height, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetHeight() int { return v.Height }

// GetWeight returns GetSessionByIdGetSessionByIdSession.Weight, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetWeight() int { return v.Weight }

// GetSex returns GetSessionByIdGetSessionByIdSession.Sex, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetSex() string { return v.Sex }

// GetAnte_chirs returns GetSessionByIdGetSessionByIdSession.Ante_chirs, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetAnte_chirs() []string { return v.Ante_chirs }

// GetAnte_diseases returns GetSessionByIdGetSessionByIdSession.Ante_diseases, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetAnte_diseases() []string { return v.Ante_diseases }

// GetMedicine returns GetSessionByIdGetSessionByIdSession.Medicine, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetMedicine() []string { return v.Medicine }

// GetLast_question returns GetSessionByIdGetSessionByIdSession.Last_question, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetLast_question() string { return v.Last_question }

// GetLogs returns GetSessionByIdGetSessionByIdSession.Logs, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetLogs() []GetSessionByIdGetSessionByIdSessionLogs {
	return v.Logs
}

// GetAlerts returns GetSessionByIdGetSessionByIdSession.Alerts, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSession) GetAlerts() []string { return v.Alerts }

// GetSessionByIdGetSessionByIdSessionDiseases includes the requested fields of the GraphQL type SessionDiseases.
type GetSessionByIdGetSessionByIdSessionDiseases struct {
	Name             string  `json:"name"`
	Presence         float64 `json:"presence"`
	Unknown_presence float64 `json:"unknown_presence"`
}

// GetName returns GetSessionByIdGetSessionByIdSessionDiseases.Name, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSessionDiseases) GetName() string { return v.Name }

// GetPresence returns GetSessionByIdGetSessionByIdSessionDiseases.Presence, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSessionDiseases) GetPresence() float64 { return v.Presence }

// GetUnknown_presence returns GetSessionByIdGetSessionByIdSessionDiseases.Unknown_presence, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSessionDiseases) GetUnknown_presence() float64 {
	return v.Unknown_presence
}

// GetSessionByIdGetSessionByIdSessionLogs includes the requested fields of the GraphQL type Logs.
type GetSessionByIdGetSessionByIdSessionLogs struct {
	Question string `json:"question"`
	Answer   string `json:"answer"`
}

// GetQuestion returns GetSessionByIdGetSessionByIdSessionLogs.Question, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSessionLogs) GetQuestion() string { return v.Question }

// GetAnswer returns GetSessionByIdGetSessionByIdSessionLogs.Answer, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSessionLogs) GetAnswer() string { return v.Answer }

// GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom includes the requested fields of the GraphQL type SessionSymptom.
type GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom struct {
	Name     string   `json:"name"`
	Presence int      `json:"presence"`
	Duration int      `json:"duration"`
	Treated  []string `json:"treated"`
}

// GetName returns GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom.Name, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom) GetName() string { return v.Name }

// GetPresence returns GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom.Presence, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom) GetPresence() int {
	return v.Presence
}

// GetDuration returns GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom.Duration, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom) GetDuration() int {
	return v.Duration
}

// GetTreated returns GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom.Treated, and is useful for accessing the field via an interface.
func (v *GetSessionByIdGetSessionByIdSessionSymptomsSessionSymptom) GetTreated() []string {
	return v.Treated
}

// GetSessionByIdResponse is returned by GetSessionById on success.
type GetSessionByIdResponse struct {
	GetSessionById GetSessionByIdGetSessionByIdSession `json:"getSessionById"`
}

// GetGetSessionById returns GetSessionByIdResponse.GetSessionById, and is useful for accessing the field via an interface.
func (v *GetSessionByIdResponse) GetGetSessionById() GetSessionByIdGetSessionByIdSession {
	return v.GetSessionById
}

// GetSessionsGetSessionsSession includes the requested fields of the GraphQL type Session.
type GetSessionsGetSessionsSession struct {
	Id            string                                                `json:"id"`
	Diseases      []GetSessionsGetSessionsSessionDiseases               `json:"diseases"`
	Symptoms      []GetSessionsGetSessionsSessionSymptomsSessionSymptom `json:"symptoms"`
	Age           int                                                   `json:"age"`
	Height        int                                                   `json:"height"`
	Weight        int                                                   `json:"weight"`
	Sex           string                                                `json:"sex"`
	Ante_chirs    []string                                              `json:"ante_chirs"`
	Ante_diseases []string                                              `json:"ante_diseases"`
	Medicine      []string                                              `json:"medicine"`
	Last_question string                                                `json:"last_question"`
	Logs          []GetSessionsGetSessionsSessionLogs                   `json:"logs"`
	Alerts        []string                                              `json:"alerts"`
}

// GetId returns GetSessionsGetSessionsSession.Id, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetId() string { return v.Id }

// GetDiseases returns GetSessionsGetSessionsSession.Diseases, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetDiseases() []GetSessionsGetSessionsSessionDiseases {
	return v.Diseases
}

// GetSymptoms returns GetSessionsGetSessionsSession.Symptoms, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetSymptoms() []GetSessionsGetSessionsSessionSymptomsSessionSymptom {
	return v.Symptoms
}

// GetAge returns GetSessionsGetSessionsSession.Age, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetAge() int { return v.Age }

// GetHeight returns GetSessionsGetSessionsSession.Height, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetHeight() int { return v.Height }

// GetWeight returns GetSessionsGetSessionsSession.Weight, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetWeight() int { return v.Weight }

// GetSex returns GetSessionsGetSessionsSession.Sex, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetSex() string { return v.Sex }

// GetAnte_chirs returns GetSessionsGetSessionsSession.Ante_chirs, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetAnte_chirs() []string { return v.Ante_chirs }

// GetAnte_diseases returns GetSessionsGetSessionsSession.Ante_diseases, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetAnte_diseases() []string { return v.Ante_diseases }

// GetMedicine returns GetSessionsGetSessionsSession.Medicine, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetMedicine() []string { return v.Medicine }

// GetLast_question returns GetSessionsGetSessionsSession.Last_question, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetLast_question() string { return v.Last_question }

// GetLogs returns GetSessionsGetSessionsSession.Logs, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetLogs() []GetSessionsGetSessionsSessionLogs { return v.Logs }

// GetAlerts returns GetSessionsGetSessionsSession.Alerts, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSession) GetAlerts() []string { return v.Alerts }

// GetSessionsGetSessionsSessionDiseases includes the requested fields of the GraphQL type SessionDiseases.
type GetSessionsGetSessionsSessionDiseases struct {
	Name             string  `json:"name"`
	Presence         float64 `json:"presence"`
	Unknown_presence float64 `json:"unknown_presence"`
}

// GetName returns GetSessionsGetSessionsSessionDiseases.Name, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSessionDiseases) GetName() string { return v.Name }

// GetPresence returns GetSessionsGetSessionsSessionDiseases.Presence, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSessionDiseases) GetPresence() float64 { return v.Presence }

// GetUnknown_presence returns GetSessionsGetSessionsSessionDiseases.Unknown_presence, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSessionDiseases) GetUnknown_presence() float64 {
	return v.Unknown_presence
}

// GetSessionsGetSessionsSessionLogs includes the requested fields of the GraphQL type Logs.
type GetSessionsGetSessionsSessionLogs struct {
	Question string `json:"question"`
	Answer   string `json:"answer"`
}

// GetQuestion returns GetSessionsGetSessionsSessionLogs.Question, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSessionLogs) GetQuestion() string { return v.Question }

// GetAnswer returns GetSessionsGetSessionsSessionLogs.Answer, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSessionLogs) GetAnswer() string { return v.Answer }

// GetSessionsGetSessionsSessionSymptomsSessionSymptom includes the requested fields of the GraphQL type SessionSymptom.
type GetSessionsGetSessionsSessionSymptomsSessionSymptom struct {
	Name     string   `json:"name"`
	Presence int      `json:"presence"`
	Duration int      `json:"duration"`
	Treated  []string `json:"treated"`
}

// GetName returns GetSessionsGetSessionsSessionSymptomsSessionSymptom.Name, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSessionSymptomsSessionSymptom) GetName() string { return v.Name }

// GetPresence returns GetSessionsGetSessionsSessionSymptomsSessionSymptom.Presence, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSessionSymptomsSessionSymptom) GetPresence() int { return v.Presence }

// GetDuration returns GetSessionsGetSessionsSessionSymptomsSessionSymptom.Duration, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSessionSymptomsSessionSymptom) GetDuration() int { return v.Duration }

// GetTreated returns GetSessionsGetSessionsSessionSymptomsSessionSymptom.Treated, and is useful for accessing the field via an interface.
func (v *GetSessionsGetSessionsSessionSymptomsSessionSymptom) GetTreated() []string { return v.Treated }

// GetSessionsResponse is returned by GetSessions on success.
type GetSessionsResponse struct {
	GetSessions []GetSessionsGetSessionsSession `json:"getSessions"`
}

// GetGetSessions returns GetSessionsResponse.GetSessions, and is useful for accessing the field via an interface.
func (v *GetSessionsResponse) GetGetSessions() []GetSessionsGetSessionsSession { return v.GetSessions }

// GetSlotByIdGetSlotByIdRdv includes the requested fields of the GraphQL type Rdv.
type GetSlotByIdGetSlotByIdRdv struct {
	Id                 string            `json:"id"`
	Doctor_id          string            `json:"doctor_id"`
	Id_patient         string            `json:"id_patient"`
	Start_date         int               `json:"start_date"`
	End_date           int               `json:"end_date"`
	Cancelation_reason string            `json:"cancelation_reason"`
	Appointment_status AppointmentStatus `json:"appointment_status"`
	Session_id         string            `json:"session_id"`
}

// GetId returns GetSlotByIdGetSlotByIdRdv.Id, and is useful for accessing the field via an interface.
func (v *GetSlotByIdGetSlotByIdRdv) GetId() string { return v.Id }

// GetDoctor_id returns GetSlotByIdGetSlotByIdRdv.Doctor_id, and is useful for accessing the field via an interface.
func (v *GetSlotByIdGetSlotByIdRdv) GetDoctor_id() string { return v.Doctor_id }

// GetId_patient returns GetSlotByIdGetSlotByIdRdv.Id_patient, and is useful for accessing the field via an interface.
func (v *GetSlotByIdGetSlotByIdRdv) GetId_patient() string { return v.Id_patient }

// GetStart_date returns GetSlotByIdGetSlotByIdRdv.Start_date, and is useful for accessing the field via an interface.
func (v *GetSlotByIdGetSlotByIdRdv) GetStart_date() int { return v.Start_date }

// GetEnd_date returns GetSlotByIdGetSlotByIdRdv.End_date, and is useful for accessing the field via an interface.
func (v *GetSlotByIdGetSlotByIdRdv) GetEnd_date() int { return v.End_date }

// GetCancelation_reason returns GetSlotByIdGetSlotByIdRdv.Cancelation_reason, and is useful for accessing the field via an interface.
func (v *GetSlotByIdGetSlotByIdRdv) GetCancelation_reason() string { return v.Cancelation_reason }

// GetAppointment_status returns GetSlotByIdGetSlotByIdRdv.Appointment_status, and is useful for accessing the field via an interface.
func (v *GetSlotByIdGetSlotByIdRdv) GetAppointment_status() AppointmentStatus {
	return v.Appointment_status
}

// GetSession_id returns GetSlotByIdGetSlotByIdRdv.Session_id, and is useful for accessing the field via an interface.
func (v *GetSlotByIdGetSlotByIdRdv) GetSession_id() string { return v.Session_id }

// GetSlotByIdResponse is returned by GetSlotById on success.
type GetSlotByIdResponse struct {
	GetSlotById GetSlotByIdGetSlotByIdRdv `json:"getSlotById"`
}

// GetGetSlotById returns GetSlotByIdResponse.GetSlotById, and is useful for accessing the field via an interface.
func (v *GetSlotByIdResponse) GetGetSlotById() GetSlotByIdGetSlotByIdRdv { return v.GetSlotById }

// GetSlotsGetSlotsRdv includes the requested fields of the GraphQL type Rdv.
type GetSlotsGetSlotsRdv struct {
	Id                 string            `json:"id"`
	Doctor_id          string            `json:"doctor_id"`
	Id_patient         string            `json:"id_patient"`
	Start_date         int               `json:"start_date"`
	End_date           int               `json:"end_date"`
	Cancelation_reason string            `json:"cancelation_reason"`
	Appointment_status AppointmentStatus `json:"appointment_status"`
	Session_id         string            `json:"session_id"`
}

// GetId returns GetSlotsGetSlotsRdv.Id, and is useful for accessing the field via an interface.
func (v *GetSlotsGetSlotsRdv) GetId() string { return v.Id }

// GetDoctor_id returns GetSlotsGetSlotsRdv.Doctor_id, and is useful for accessing the field via an interface.
func (v *GetSlotsGetSlotsRdv) GetDoctor_id() string { return v.Doctor_id }

// GetId_patient returns GetSlotsGetSlotsRdv.Id_patient, and is useful for accessing the field via an interface.
func (v *GetSlotsGetSlotsRdv) GetId_patient() string { return v.Id_patient }

// GetStart_date returns GetSlotsGetSlotsRdv.Start_date, and is useful for accessing the field via an interface.
func (v *GetSlotsGetSlotsRdv) GetStart_date() int { return v.Start_date }

// GetEnd_date returns GetSlotsGetSlotsRdv.End_date, and is useful for accessing the field via an interface.
func (v *GetSlotsGetSlotsRdv) GetEnd_date() int { return v.End_date }

// GetCancelation_reason returns GetSlotsGetSlotsRdv.Cancelation_reason, and is useful for accessing the field via an interface.
func (v *GetSlotsGetSlotsRdv) GetCancelation_reason() string { return v.Cancelation_reason }

// GetAppointment_status returns GetSlotsGetSlotsRdv.Appointment_status, and is useful for accessing the field via an interface.
func (v *GetSlotsGetSlotsRdv) GetAppointment_status() AppointmentStatus { return v.Appointment_status }

// GetSession_id returns GetSlotsGetSlotsRdv.Session_id, and is useful for accessing the field via an interface.
func (v *GetSlotsGetSlotsRdv) GetSession_id() string { return v.Session_id }

// GetSlotsResponse is returned by GetSlots on success.
type GetSlotsResponse struct {
	GetSlots []GetSlotsGetSlotsRdv `json:"getSlots"`
}

// GetGetSlots returns GetSlotsResponse.GetSlots, and is useful for accessing the field via an interface.
func (v *GetSlotsResponse) GetGetSlots() []GetSlotsGetSlotsRdv { return v.GetSlots }

// GetSymptomByIdGetSymptomByIdSymptom includes the requested fields of the GraphQL type Symptom.
type GetSymptomByIdGetSymptomByIdSymptom struct {
	Id                string   `json:"id"`
	Code              string   `json:"code"`
	Name              string   `json:"name"`
	Chronic           int      `json:"chronic"`
	Symptom           []string `json:"symptom"`
	Advice            string   `json:"advice"`
	Question          string   `json:"question"`
	Question_basic    string   `json:"question_basic"`
	Question_duration string   `json:"question_duration"`
	Question_ante     string   `json:"question_ante"`
}

// GetId returns GetSymptomByIdGetSymptomByIdSymptom.Id, and is useful for accessing the field via an interface.
func (v *GetSymptomByIdGetSymptomByIdSymptom) GetId() string { return v.Id }

// GetCode returns GetSymptomByIdGetSymptomByIdSymptom.Code, and is useful for accessing the field via an interface.
func (v *GetSymptomByIdGetSymptomByIdSymptom) GetCode() string { return v.Code }

// GetName returns GetSymptomByIdGetSymptomByIdSymptom.Name, and is useful for accessing the field via an interface.
func (v *GetSymptomByIdGetSymptomByIdSymptom) GetName() string { return v.Name }

// GetChronic returns GetSymptomByIdGetSymptomByIdSymptom.Chronic, and is useful for accessing the field via an interface.
func (v *GetSymptomByIdGetSymptomByIdSymptom) GetChronic() int { return v.Chronic }

// GetSymptom returns GetSymptomByIdGetSymptomByIdSymptom.Symptom, and is useful for accessing the field via an interface.
func (v *GetSymptomByIdGetSymptomByIdSymptom) GetSymptom() []string { return v.Symptom }

// GetAdvice returns GetSymptomByIdGetSymptomByIdSymptom.Advice, and is useful for accessing the field via an interface.
func (v *GetSymptomByIdGetSymptomByIdSymptom) GetAdvice() string { return v.Advice }

// GetQuestion returns GetSymptomByIdGetSymptomByIdSymptom.Question, and is useful for accessing the field via an interface.
func (v *GetSymptomByIdGetSymptomByIdSymptom) GetQuestion() string { return v.Question }

// GetQuestion_basic returns GetSymptomByIdGetSymptomByIdSymptom.Question_basic, and is useful for accessing the field via an interface.
func (v *GetSymptomByIdGetSymptomByIdSymptom) GetQuestion_basic() string { return v.Question_basic }

// GetQuestion_duration returns GetSymptomByIdGetSymptomByIdSymptom.Question_duration, and is useful for accessing the field via an interface.
func (v *GetSymptomByIdGetSymptomByIdSymptom) GetQuestion_duration() string {
	return v.Question_duration
}

// GetQuestion_ante returns GetSymptomByIdGetSymptomByIdSymptom.Question_ante, and is useful for accessing the field via an interface.
func (v *GetSymptomByIdGetSymptomByIdSymptom) GetQuestion_ante() string { return v.Question_ante }

// GetSymptomByIdResponse is returned by GetSymptomById on success.
type GetSymptomByIdResponse struct {
	GetSymptomById GetSymptomByIdGetSymptomByIdSymptom `json:"getSymptomById"`
}

// GetGetSymptomById returns GetSymptomByIdResponse.GetSymptomById, and is useful for accessing the field via an interface.
func (v *GetSymptomByIdResponse) GetGetSymptomById() GetSymptomByIdGetSymptomByIdSymptom {
	return v.GetSymptomById
}

// GetSymptomsGetSymptomsSymptom includes the requested fields of the GraphQL type Symptom.
type GetSymptomsGetSymptomsSymptom struct {
	Id                string   `json:"id"`
	Code              string   `json:"code"`
	Name              string   `json:"name"`
	Chronic           int      `json:"chronic"`
	Symptom           []string `json:"symptom"`
	Advice            string   `json:"advice"`
	Question          string   `json:"question"`
	Question_basic    string   `json:"question_basic"`
	Question_duration string   `json:"question_duration"`
	Question_ante     string   `json:"question_ante"`
}

// GetId returns GetSymptomsGetSymptomsSymptom.Id, and is useful for accessing the field via an interface.
func (v *GetSymptomsGetSymptomsSymptom) GetId() string { return v.Id }

// GetCode returns GetSymptomsGetSymptomsSymptom.Code, and is useful for accessing the field via an interface.
func (v *GetSymptomsGetSymptomsSymptom) GetCode() string { return v.Code }

// GetName returns GetSymptomsGetSymptomsSymptom.Name, and is useful for accessing the field via an interface.
func (v *GetSymptomsGetSymptomsSymptom) GetName() string { return v.Name }

// GetChronic returns GetSymptomsGetSymptomsSymptom.Chronic, and is useful for accessing the field via an interface.
func (v *GetSymptomsGetSymptomsSymptom) GetChronic() int { return v.Chronic }

// GetSymptom returns GetSymptomsGetSymptomsSymptom.Symptom, and is useful for accessing the field via an interface.
func (v *GetSymptomsGetSymptomsSymptom) GetSymptom() []string { return v.Symptom }

// GetAdvice returns GetSymptomsGetSymptomsSymptom.Advice, and is useful for accessing the field via an interface.
func (v *GetSymptomsGetSymptomsSymptom) GetAdvice() string { return v.Advice }

// GetQuestion returns GetSymptomsGetSymptomsSymptom.Question, and is useful for accessing the field via an interface.
func (v *GetSymptomsGetSymptomsSymptom) GetQuestion() string { return v.Question }

// GetQuestion_basic returns GetSymptomsGetSymptomsSymptom.Question_basic, and is useful for accessing the field via an interface.
func (v *GetSymptomsGetSymptomsSymptom) GetQuestion_basic() string { return v.Question_basic }

// GetQuestion_duration returns GetSymptomsGetSymptomsSymptom.Question_duration, and is useful for accessing the field via an interface.
func (v *GetSymptomsGetSymptomsSymptom) GetQuestion_duration() string { return v.Question_duration }

// GetQuestion_ante returns GetSymptomsGetSymptomsSymptom.Question_ante, and is useful for accessing the field via an interface.
func (v *GetSymptomsGetSymptomsSymptom) GetQuestion_ante() string { return v.Question_ante }

// GetSymptomsResponse is returned by GetSymptoms on success.
type GetSymptomsResponse struct {
	GetSymptoms []GetSymptomsGetSymptomsSymptom `json:"getSymptoms"`
}

// GetGetSymptoms returns GetSymptomsResponse.GetSymptoms, and is useful for accessing the field via an interface.
func (v *GetSymptomsResponse) GetGetSymptoms() []GetSymptomsGetSymptomsSymptom { return v.GetSymptoms }

// GetTestAccountByEmailGetTestAccountByEmailTestAccount includes the requested fields of the GraphQL type TestAccount.
type GetTestAccountByEmailGetTestAccountByEmailTestAccount struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns GetTestAccountByEmailGetTestAccountByEmailTestAccount.Id, and is useful for accessing the field via an interface.
func (v *GetTestAccountByEmailGetTestAccountByEmailTestAccount) GetId() string { return v.Id }

// GetEmail returns GetTestAccountByEmailGetTestAccountByEmailTestAccount.Email, and is useful for accessing the field via an interface.
func (v *GetTestAccountByEmailGetTestAccountByEmailTestAccount) GetEmail() string { return v.Email }

// GetPassword returns GetTestAccountByEmailGetTestAccountByEmailTestAccount.Password, and is useful for accessing the field via an interface.
func (v *GetTestAccountByEmailGetTestAccountByEmailTestAccount) GetPassword() string {
	return v.Password
}

// GetTestAccountByEmailResponse is returned by GetTestAccountByEmail on success.
type GetTestAccountByEmailResponse struct {
	GetTestAccountByEmail GetTestAccountByEmailGetTestAccountByEmailTestAccount `json:"getTestAccountByEmail"`
}

// GetGetTestAccountByEmail returns GetTestAccountByEmailResponse.GetTestAccountByEmail, and is useful for accessing the field via an interface.
func (v *GetTestAccountByEmailResponse) GetGetTestAccountByEmail() GetTestAccountByEmailGetTestAccountByEmailTestAccount {
	return v.GetTestAccountByEmail
}

// GetTestAccountByIdGetTestAccountByIdTestAccount includes the requested fields of the GraphQL type TestAccount.
type GetTestAccountByIdGetTestAccountByIdTestAccount struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns GetTestAccountByIdGetTestAccountByIdTestAccount.Id, and is useful for accessing the field via an interface.
func (v *GetTestAccountByIdGetTestAccountByIdTestAccount) GetId() string { return v.Id }

// GetEmail returns GetTestAccountByIdGetTestAccountByIdTestAccount.Email, and is useful for accessing the field via an interface.
func (v *GetTestAccountByIdGetTestAccountByIdTestAccount) GetEmail() string { return v.Email }

// GetPassword returns GetTestAccountByIdGetTestAccountByIdTestAccount.Password, and is useful for accessing the field via an interface.
func (v *GetTestAccountByIdGetTestAccountByIdTestAccount) GetPassword() string { return v.Password }

// GetTestAccountByIdResponse is returned by GetTestAccountById on success.
type GetTestAccountByIdResponse struct {
	GetTestAccountById GetTestAccountByIdGetTestAccountByIdTestAccount `json:"getTestAccountById"`
}

// GetGetTestAccountById returns GetTestAccountByIdResponse.GetTestAccountById, and is useful for accessing the field via an interface.
func (v *GetTestAccountByIdResponse) GetGetTestAccountById() GetTestAccountByIdGetTestAccountByIdTestAccount {
	return v.GetTestAccountById
}

// GetTestAccountsGetTestAccountsTestAccount includes the requested fields of the GraphQL type TestAccount.
type GetTestAccountsGetTestAccountsTestAccount struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns GetTestAccountsGetTestAccountsTestAccount.Id, and is useful for accessing the field via an interface.
func (v *GetTestAccountsGetTestAccountsTestAccount) GetId() string { return v.Id }

// GetEmail returns GetTestAccountsGetTestAccountsTestAccount.Email, and is useful for accessing the field via an interface.
func (v *GetTestAccountsGetTestAccountsTestAccount) GetEmail() string { return v.Email }

// GetPassword returns GetTestAccountsGetTestAccountsTestAccount.Password, and is useful for accessing the field via an interface.
func (v *GetTestAccountsGetTestAccountsTestAccount) GetPassword() string { return v.Password }

// GetTestAccountsResponse is returned by GetTestAccounts on success.
type GetTestAccountsResponse struct {
	GetTestAccounts []GetTestAccountsGetTestAccountsTestAccount `json:"getTestAccounts"`
}

// GetGetTestAccounts returns GetTestAccountsResponse.GetTestAccounts, and is useful for accessing the field via an interface.
func (v *GetTestAccountsResponse) GetGetTestAccounts() []GetTestAccountsGetTestAccountsTestAccount {
	return v.GetTestAccounts
}

// GetTreatmentByIDGetTreatmentByIDTreatment includes the requested fields of the GraphQL type Treatment.
type GetTreatmentByIDGetTreatmentByIDTreatment struct {
	Id          string   `json:"id"`
	Period      []Period `json:"period"`
	Day         []Day    `json:"day"`
	Quantity    int      `json:"quantity"`
	Medicine_id string   `json:"medicine_id"`
}

// GetId returns GetTreatmentByIDGetTreatmentByIDTreatment.Id, and is useful for accessing the field via an interface.
func (v *GetTreatmentByIDGetTreatmentByIDTreatment) GetId() string { return v.Id }

// GetPeriod returns GetTreatmentByIDGetTreatmentByIDTreatment.Period, and is useful for accessing the field via an interface.
func (v *GetTreatmentByIDGetTreatmentByIDTreatment) GetPeriod() []Period { return v.Period }

// GetDay returns GetTreatmentByIDGetTreatmentByIDTreatment.Day, and is useful for accessing the field via an interface.
func (v *GetTreatmentByIDGetTreatmentByIDTreatment) GetDay() []Day { return v.Day }

// GetQuantity returns GetTreatmentByIDGetTreatmentByIDTreatment.Quantity, and is useful for accessing the field via an interface.
func (v *GetTreatmentByIDGetTreatmentByIDTreatment) GetQuantity() int { return v.Quantity }

// GetMedicine_id returns GetTreatmentByIDGetTreatmentByIDTreatment.Medicine_id, and is useful for accessing the field via an interface.
func (v *GetTreatmentByIDGetTreatmentByIDTreatment) GetMedicine_id() string { return v.Medicine_id }

// GetTreatmentByIDResponse is returned by GetTreatmentByID on success.
type GetTreatmentByIDResponse struct {
	GetTreatmentByID GetTreatmentByIDGetTreatmentByIDTreatment `json:"getTreatmentByID"`
}

// GetGetTreatmentByID returns GetTreatmentByIDResponse.GetTreatmentByID, and is useful for accessing the field via an interface.
func (v *GetTreatmentByIDResponse) GetGetTreatmentByID() GetTreatmentByIDGetTreatmentByIDTreatment {
	return v.GetTreatmentByID
}

// GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp includes the requested fields of the GraphQL type TreatmentsFollowUp.
type GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp struct {
	Id           string   `json:"id"`
	Treatment_id string   `json:"treatment_id"`
	Date         int      `json:"date"`
	Period       []Period `json:"period"`
}

// GetId returns GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp.Id, and is useful for accessing the field via an interface.
func (v *GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp) GetId() string {
	return v.Id
}

// GetTreatment_id returns GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp.Treatment_id, and is useful for accessing the field via an interface.
func (v *GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp) GetTreatment_id() string {
	return v.Treatment_id
}

// GetDate returns GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp.Date, and is useful for accessing the field via an interface.
func (v *GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp) GetDate() int {
	return v.Date
}

// GetPeriod returns GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp.Period, and is useful for accessing the field via an interface.
func (v *GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp) GetPeriod() []Period {
	return v.Period
}

// GetTreatmentsFollowUpByIDResponse is returned by GetTreatmentsFollowUpByID on success.
type GetTreatmentsFollowUpByIDResponse struct {
	GetTreatmentsFollowUpById GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp `json:"getTreatmentsFollowUpById"`
}

// GetGetTreatmentsFollowUpById returns GetTreatmentsFollowUpByIDResponse.GetTreatmentsFollowUpById, and is useful for accessing the field via an interface.
func (v *GetTreatmentsFollowUpByIDResponse) GetGetTreatmentsFollowUpById() GetTreatmentsFollowUpByIDGetTreatmentsFollowUpByIdTreatmentsFollowUp {
	return v.GetTreatmentsFollowUpById
}

// GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp includes the requested fields of the GraphQL type TreatmentsFollowUp.
type GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp struct {
	Id           string   `json:"id"`
	Treatment_id string   `json:"treatment_id"`
	Date         int      `json:"date"`
	Period       []Period `json:"period"`
}

// GetId returns GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp.Id, and is useful for accessing the field via an interface.
func (v *GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp) GetId() string { return v.Id }

// GetTreatment_id returns GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp.Treatment_id, and is useful for accessing the field via an interface.
func (v *GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp) GetTreatment_id() string {
	return v.Treatment_id
}

// GetDate returns GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp.Date, and is useful for accessing the field via an interface.
func (v *GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp) GetDate() int { return v.Date }

// GetPeriod returns GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp.Period, and is useful for accessing the field via an interface.
func (v *GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp) GetPeriod() []Period {
	return v.Period
}

// GetTreatmentsFollowUpResponse is returned by GetTreatmentsFollowUp on success.
type GetTreatmentsFollowUpResponse struct {
	GetTreatmentsFollowUps []GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp `json:"getTreatmentsFollowUps"`
}

// GetGetTreatmentsFollowUps returns GetTreatmentsFollowUpResponse.GetTreatmentsFollowUps, and is useful for accessing the field via an interface.
func (v *GetTreatmentsFollowUpResponse) GetGetTreatmentsFollowUps() []GetTreatmentsFollowUpGetTreatmentsFollowUpsTreatmentsFollowUp {
	return v.GetTreatmentsFollowUps
}

// GetTreatmentsGetTreatmentsTreatment includes the requested fields of the GraphQL type Treatment.
type GetTreatmentsGetTreatmentsTreatment struct {
	Id          string   `json:"id"`
	Period      []Period `json:"period"`
	Day         []Day    `json:"day"`
	Quantity    int      `json:"quantity"`
	Medicine_id string   `json:"medicine_id"`
}

// GetId returns GetTreatmentsGetTreatmentsTreatment.Id, and is useful for accessing the field via an interface.
func (v *GetTreatmentsGetTreatmentsTreatment) GetId() string { return v.Id }

// GetPeriod returns GetTreatmentsGetTreatmentsTreatment.Period, and is useful for accessing the field via an interface.
func (v *GetTreatmentsGetTreatmentsTreatment) GetPeriod() []Period { return v.Period }

// GetDay returns GetTreatmentsGetTreatmentsTreatment.Day, and is useful for accessing the field via an interface.
func (v *GetTreatmentsGetTreatmentsTreatment) GetDay() []Day { return v.Day }

// GetQuantity returns GetTreatmentsGetTreatmentsTreatment.Quantity, and is useful for accessing the field via an interface.
func (v *GetTreatmentsGetTreatmentsTreatment) GetQuantity() int { return v.Quantity }

// GetMedicine_id returns GetTreatmentsGetTreatmentsTreatment.Medicine_id, and is useful for accessing the field via an interface.
func (v *GetTreatmentsGetTreatmentsTreatment) GetMedicine_id() string { return v.Medicine_id }

// GetTreatmentsResponse is returned by GetTreatments on success.
type GetTreatmentsResponse struct {
	GetTreatments []GetTreatmentsGetTreatmentsTreatment `json:"getTreatments"`
}

// GetGetTreatments returns GetTreatmentsResponse.GetTreatments, and is useful for accessing the field via an interface.
func (v *GetTreatmentsResponse) GetGetTreatments() []GetTreatmentsGetTreatmentsTreatment {
	return v.GetTreatments
}

// GetWaitingRdvGetWaitingRdv includes the requested fields of the GraphQL type Rdv.
type GetWaitingRdvGetWaitingRdv struct {
	Id                 string            `json:"id"`
	Doctor_id          string            `json:"doctor_id"`
	Id_patient         string            `json:"id_patient"`
	Start_date         int               `json:"start_date"`
	End_date           int               `json:"end_date"`
	Cancelation_reason string            `json:"cancelation_reason"`
	Appointment_status AppointmentStatus `json:"appointment_status"`
	Session_id         string            `json:"session_id"`
	Health_method      string            `json:"health_method"`
}

// GetId returns GetWaitingRdvGetWaitingRdv.Id, and is useful for accessing the field via an interface.
func (v *GetWaitingRdvGetWaitingRdv) GetId() string { return v.Id }

// GetDoctor_id returns GetWaitingRdvGetWaitingRdv.Doctor_id, and is useful for accessing the field via an interface.
func (v *GetWaitingRdvGetWaitingRdv) GetDoctor_id() string { return v.Doctor_id }

// GetId_patient returns GetWaitingRdvGetWaitingRdv.Id_patient, and is useful for accessing the field via an interface.
func (v *GetWaitingRdvGetWaitingRdv) GetId_patient() string { return v.Id_patient }

// GetStart_date returns GetWaitingRdvGetWaitingRdv.Start_date, and is useful for accessing the field via an interface.
func (v *GetWaitingRdvGetWaitingRdv) GetStart_date() int { return v.Start_date }

// GetEnd_date returns GetWaitingRdvGetWaitingRdv.End_date, and is useful for accessing the field via an interface.
func (v *GetWaitingRdvGetWaitingRdv) GetEnd_date() int { return v.End_date }

// GetCancelation_reason returns GetWaitingRdvGetWaitingRdv.Cancelation_reason, and is useful for accessing the field via an interface.
func (v *GetWaitingRdvGetWaitingRdv) GetCancelation_reason() string { return v.Cancelation_reason }

// GetAppointment_status returns GetWaitingRdvGetWaitingRdv.Appointment_status, and is useful for accessing the field via an interface.
func (v *GetWaitingRdvGetWaitingRdv) GetAppointment_status() AppointmentStatus {
	return v.Appointment_status
}

// GetSession_id returns GetWaitingRdvGetWaitingRdv.Session_id, and is useful for accessing the field via an interface.
func (v *GetWaitingRdvGetWaitingRdv) GetSession_id() string { return v.Session_id }

// GetHealth_method returns GetWaitingRdvGetWaitingRdv.Health_method, and is useful for accessing the field via an interface.
func (v *GetWaitingRdvGetWaitingRdv) GetHealth_method() string { return v.Health_method }

// GetWaitingRdvResponse is returned by GetWaitingRdv on success.
type GetWaitingRdvResponse struct {
	GetWaitingRdv []GetWaitingRdvGetWaitingRdv `json:"getWaitingRdv"`
}

// GetGetWaitingRdv returns GetWaitingRdvResponse.GetWaitingRdv, and is useful for accessing the field via an interface.
func (v *GetWaitingRdvResponse) GetGetWaitingRdv() []GetWaitingRdvGetWaitingRdv {
	return v.GetWaitingRdv
}

type LogsInput struct {
	Question string `json:"question"`
	Answer   string `json:"answer"`
}

// GetQuestion returns LogsInput.Question, and is useful for accessing the field via an interface.
func (v *LogsInput) GetQuestion() string { return v.Question }

// GetAnswer returns LogsInput.Answer, and is useful for accessing the field via an interface.
func (v *LogsInput) GetAnswer() string { return v.Answer }

type MedicineUnit string

const (
	MedicineUnitApplication MedicineUnit = "APPLICATION"
	MedicineUnitTablet      MedicineUnit = "TABLET"
	MedicineUnitTablespoon  MedicineUnit = "TABLESPOON"
	MedicineUnitCoffeespoon MedicineUnit = "COFFEESPOON"
)

type NlpReportOutputInput struct {
	Symptom string `json:"symptom"`
	Present bool   `json:"present"`
	Days    int    `json:"days"`
}

// GetSymptom returns NlpReportOutputInput.Symptom, and is useful for accessing the field via an interface.
func (v *NlpReportOutputInput) GetSymptom() string { return v.Symptom }

// GetPresent returns NlpReportOutputInput.Present, and is useful for accessing the field via an interface.
func (v *NlpReportOutputInput) GetPresent() bool { return v.Present }

// GetDays returns NlpReportOutputInput.Days, and is useful for accessing the field via an interface.
func (v *NlpReportOutputInput) GetDays() int { return v.Days }

type OnboardingStatus string

const (
	OnboardingStatusNotStarted OnboardingStatus = "NOT_STARTED"
	OnboardingStatusInProgress OnboardingStatus = "IN_PROGRESS"
	OnboardingStatusDone       OnboardingStatus = "DONE"
)

type Period string

const (
	PeriodMorning Period = "MORNING"
	PeriodNoon    Period = "NOON"
	PeriodEvening Period = "EVENING"
	PeriodNight   Period = "NIGHT"
)

type SessionDiseasesInput struct {
	Name             string  `json:"name"`
	Presence         float64 `json:"presence"`
	Unknown_presence float64 `json:"unknown_presence"`
}

// GetName returns SessionDiseasesInput.Name, and is useful for accessing the field via an interface.
func (v *SessionDiseasesInput) GetName() string { return v.Name }

// GetPresence returns SessionDiseasesInput.Presence, and is useful for accessing the field via an interface.
func (v *SessionDiseasesInput) GetPresence() float64 { return v.Presence }

// GetUnknown_presence returns SessionDiseasesInput.Unknown_presence, and is useful for accessing the field via an interface.
func (v *SessionDiseasesInput) GetUnknown_presence() float64 { return v.Unknown_presence }

type SessionSymptomInput struct {
	Name     string   `json:"name"`
	Presence int      `json:"presence"`
	Duration int      `json:"duration"`
	Treated  []string `json:"treated"`
}

// GetName returns SessionSymptomInput.Name, and is useful for accessing the field via an interface.
func (v *SessionSymptomInput) GetName() string { return v.Name }

// GetPresence returns SessionSymptomInput.Presence, and is useful for accessing the field via an interface.
func (v *SessionSymptomInput) GetPresence() int { return v.Presence }

// GetDuration returns SessionSymptomInput.Duration, and is useful for accessing the field via an interface.
func (v *SessionSymptomInput) GetDuration() int { return v.Duration }

// GetTreated returns SessionSymptomInput.Treated, and is useful for accessing the field via an interface.
func (v *SessionSymptomInput) GetTreated() []string { return v.Treated }

type Sex string

const (
	SexMale   Sex = "MALE"
	SexFemale Sex = "FEMALE"
	SexOther  Sex = "OTHER"
)

type SymptomsWeightInput struct {
	Symptom string  `json:"symptom"`
	Value   float64 `json:"value"`
	Chronic bool    `json:"chronic"`
}

// GetSymptom returns SymptomsWeightInput.Symptom, and is useful for accessing the field via an interface.
func (v *SymptomsWeightInput) GetSymptom() string { return v.Symptom }

// GetValue returns SymptomsWeightInput.Value, and is useful for accessing the field via an interface.
func (v *SymptomsWeightInput) GetValue() float64 { return v.Value }

// GetChronic returns SymptomsWeightInput.Chronic, and is useful for accessing the field via an interface.
func (v *SymptomsWeightInput) GetChronic() bool { return v.Chronic }

// UpdateAdminResponse is returned by UpdateAdmin on success.
type UpdateAdminResponse struct {
	UpdateAdmin UpdateAdminUpdateAdmin `json:"updateAdmin"`
}

// GetUpdateAdmin returns UpdateAdminResponse.UpdateAdmin, and is useful for accessing the field via an interface.
func (v *UpdateAdminResponse) GetUpdateAdmin() UpdateAdminUpdateAdmin { return v.UpdateAdmin }

// UpdateAdminUpdateAdmin includes the requested fields of the GraphQL type Admin.
type UpdateAdminUpdateAdmin struct {
	Id        string `json:"id"`
	Email     string `json:"email"`
	Password  string `json:"password"`
	Name      string `json:"name"`
	Last_name string `json:"last_name"`
}

// GetId returns UpdateAdminUpdateAdmin.Id, and is useful for accessing the field via an interface.
func (v *UpdateAdminUpdateAdmin) GetId() string { return v.Id }

// GetEmail returns UpdateAdminUpdateAdmin.Email, and is useful for accessing the field via an interface.
func (v *UpdateAdminUpdateAdmin) GetEmail() string { return v.Email }

// GetPassword returns UpdateAdminUpdateAdmin.Password, and is useful for accessing the field via an interface.
func (v *UpdateAdminUpdateAdmin) GetPassword() string { return v.Password }

// GetName returns UpdateAdminUpdateAdmin.Name, and is useful for accessing the field via an interface.
func (v *UpdateAdminUpdateAdmin) GetName() string { return v.Name }

// GetLast_name returns UpdateAdminUpdateAdmin.Last_name, and is useful for accessing the field via an interface.
func (v *UpdateAdminUpdateAdmin) GetLast_name() string { return v.Last_name }

// UpdateAlertResponse is returned by UpdateAlert on success.
type UpdateAlertResponse struct {
	UpdateAlert UpdateAlertUpdateAlert `json:"updateAlert"`
}

// GetUpdateAlert returns UpdateAlertResponse.UpdateAlert, and is useful for accessing the field via an interface.
func (v *UpdateAlertResponse) GetUpdateAlert() UpdateAlertUpdateAlert { return v.UpdateAlert }

// UpdateAlertUpdateAlert includes the requested fields of the GraphQL type Alert.
type UpdateAlertUpdateAlert struct {
	Id       string   `json:"id"`
	Name     string   `json:"name"`
	Sex      string   `json:"sex"`
	Height   int      `json:"height"`
	Weight   int      `json:"weight"`
	Symptoms []string `json:"symptoms"`
	Comment  string   `json:"comment"`
}

// GetId returns UpdateAlertUpdateAlert.Id, and is useful for accessing the field via an interface.
func (v *UpdateAlertUpdateAlert) GetId() string { return v.Id }

// GetName returns UpdateAlertUpdateAlert.Name, and is useful for accessing the field via an interface.
func (v *UpdateAlertUpdateAlert) GetName() string { return v.Name }

// GetSex returns UpdateAlertUpdateAlert.Sex, and is useful for accessing the field via an interface.
func (v *UpdateAlertUpdateAlert) GetSex() string { return v.Sex }

// GetHeight returns UpdateAlertUpdateAlert.Height, and is useful for accessing the field via an interface.
func (v *UpdateAlertUpdateAlert) GetHeight() int { return v.Height }

// GetWeight returns UpdateAlertUpdateAlert.Weight, and is useful for accessing the field via an interface.
func (v *UpdateAlertUpdateAlert) GetWeight() int { return v.Weight }

// GetSymptoms returns UpdateAlertUpdateAlert.Symptoms, and is useful for accessing the field via an interface.
func (v *UpdateAlertUpdateAlert) GetSymptoms() []string { return v.Symptoms }

// GetComment returns UpdateAlertUpdateAlert.Comment, and is useful for accessing the field via an interface.
func (v *UpdateAlertUpdateAlert) GetComment() string { return v.Comment }

// UpdateAnteChirResponse is returned by UpdateAnteChir on success.
type UpdateAnteChirResponse struct {
	UpdateAnteChir UpdateAnteChirUpdateAnteChir `json:"updateAnteChir"`
}

// GetUpdateAnteChir returns UpdateAnteChirResponse.UpdateAnteChir, and is useful for accessing the field via an interface.
func (v *UpdateAnteChirResponse) GetUpdateAnteChir() UpdateAnteChirUpdateAnteChir {
	return v.UpdateAnteChir
}

// UpdateAnteChirUpdateAnteChir includes the requested fields of the GraphQL type AnteChir.
type UpdateAnteChirUpdateAnteChir struct {
	Id               string                                                           `json:"id"`
	Name             string                                                           `json:"name"`
	Induced_symptoms []UpdateAnteChirUpdateAnteChirInduced_symptomsChirInducedSymptom `json:"induced_symptoms"`
}

// GetId returns UpdateAnteChirUpdateAnteChir.Id, and is useful for accessing the field via an interface.
func (v *UpdateAnteChirUpdateAnteChir) GetId() string { return v.Id }

// GetName returns UpdateAnteChirUpdateAnteChir.Name, and is useful for accessing the field via an interface.
func (v *UpdateAnteChirUpdateAnteChir) GetName() string { return v.Name }

// GetInduced_symptoms returns UpdateAnteChirUpdateAnteChir.Induced_symptoms, and is useful for accessing the field via an interface.
func (v *UpdateAnteChirUpdateAnteChir) GetInduced_symptoms() []UpdateAnteChirUpdateAnteChirInduced_symptomsChirInducedSymptom {
	return v.Induced_symptoms
}

// UpdateAnteChirUpdateAnteChirInduced_symptomsChirInducedSymptom includes the requested fields of the GraphQL type ChirInducedSymptom.
type UpdateAnteChirUpdateAnteChirInduced_symptomsChirInducedSymptom struct {
	Symptom string  `json:"symptom"`
	Factor  float64 `json:"factor"`
}

// GetSymptom returns UpdateAnteChirUpdateAnteChirInduced_symptomsChirInducedSymptom.Symptom, and is useful for accessing the field via an interface.
func (v *UpdateAnteChirUpdateAnteChirInduced_symptomsChirInducedSymptom) GetSymptom() string {
	return v.Symptom
}

// GetFactor returns UpdateAnteChirUpdateAnteChirInduced_symptomsChirInducedSymptom.Factor, and is useful for accessing the field via an interface.
func (v *UpdateAnteChirUpdateAnteChirInduced_symptomsChirInducedSymptom) GetFactor() float64 {
	return v.Factor
}

// UpdateAnteDiseaseResponse is returned by UpdateAnteDisease on success.
type UpdateAnteDiseaseResponse struct {
	UpdateAnteDisease UpdateAnteDiseaseUpdateAnteDisease `json:"updateAnteDisease"`
}

// GetUpdateAnteDisease returns UpdateAnteDiseaseResponse.UpdateAnteDisease, and is useful for accessing the field via an interface.
func (v *UpdateAnteDiseaseResponse) GetUpdateAnteDisease() UpdateAnteDiseaseUpdateAnteDisease {
	return v.UpdateAnteDisease
}

// UpdateAnteDiseaseUpdateAnteDisease includes the requested fields of the GraphQL type AnteDisease.
type UpdateAnteDiseaseUpdateAnteDisease struct {
	Id             string   `json:"id"`
	Name           string   `json:"name"`
	Chronicity     float64  `json:"chronicity"`
	Surgery_ids    []string `json:"surgery_ids"`
	Symptoms       []string `json:"symptoms"`
	Treatment_ids  []string `json:"treatment_ids"`
	Still_relevant bool     `json:"still_relevant"`
}

// GetId returns UpdateAnteDiseaseUpdateAnteDisease.Id, and is useful for accessing the field via an interface.
func (v *UpdateAnteDiseaseUpdateAnteDisease) GetId() string { return v.Id }

// GetName returns UpdateAnteDiseaseUpdateAnteDisease.Name, and is useful for accessing the field via an interface.
func (v *UpdateAnteDiseaseUpdateAnteDisease) GetName() string { return v.Name }

// GetChronicity returns UpdateAnteDiseaseUpdateAnteDisease.Chronicity, and is useful for accessing the field via an interface.
func (v *UpdateAnteDiseaseUpdateAnteDisease) GetChronicity() float64 { return v.Chronicity }

// GetSurgery_ids returns UpdateAnteDiseaseUpdateAnteDisease.Surgery_ids, and is useful for accessing the field via an interface.
func (v *UpdateAnteDiseaseUpdateAnteDisease) GetSurgery_ids() []string { return v.Surgery_ids }

// GetSymptoms returns UpdateAnteDiseaseUpdateAnteDisease.Symptoms, and is useful for accessing the field via an interface.
func (v *UpdateAnteDiseaseUpdateAnteDisease) GetSymptoms() []string { return v.Symptoms }

// GetTreatment_ids returns UpdateAnteDiseaseUpdateAnteDisease.Treatment_ids, and is useful for accessing the field via an interface.
func (v *UpdateAnteDiseaseUpdateAnteDisease) GetTreatment_ids() []string { return v.Treatment_ids }

// GetStill_relevant returns UpdateAnteDiseaseUpdateAnteDisease.Still_relevant, and is useful for accessing the field via an interface.
func (v *UpdateAnteDiseaseUpdateAnteDisease) GetStill_relevant() bool { return v.Still_relevant }

// UpdateAnteFamilyResponse is returned by UpdateAnteFamily on success.
type UpdateAnteFamilyResponse struct {
	UpdateAnteFamily UpdateAnteFamilyUpdateAnteFamily `json:"updateAnteFamily"`
}

// GetUpdateAnteFamily returns UpdateAnteFamilyResponse.UpdateAnteFamily, and is useful for accessing the field via an interface.
func (v *UpdateAnteFamilyResponse) GetUpdateAnteFamily() UpdateAnteFamilyUpdateAnteFamily {
	return v.UpdateAnteFamily
}

// UpdateAnteFamilyUpdateAnteFamily includes the requested fields of the GraphQL type AnteFamily.
type UpdateAnteFamilyUpdateAnteFamily struct {
	Id      string   `json:"id"`
	Name    string   `json:"name"`
	Disease []string `json:"disease"`
}

// GetId returns UpdateAnteFamilyUpdateAnteFamily.Id, and is useful for accessing the field via an interface.
func (v *UpdateAnteFamilyUpdateAnteFamily) GetId() string { return v.Id }

// GetName returns UpdateAnteFamilyUpdateAnteFamily.Name, and is useful for accessing the field via an interface.
func (v *UpdateAnteFamilyUpdateAnteFamily) GetName() string { return v.Name }

// GetDisease returns UpdateAnteFamilyUpdateAnteFamily.Disease, and is useful for accessing the field via an interface.
func (v *UpdateAnteFamilyUpdateAnteFamily) GetDisease() []string { return v.Disease }

// UpdateBlackListResponse is returned by UpdateBlackList on success.
type UpdateBlackListResponse struct {
	UpdateBlackList UpdateBlackListUpdateBlackList `json:"updateBlackList"`
}

// GetUpdateBlackList returns UpdateBlackListResponse.UpdateBlackList, and is useful for accessing the field via an interface.
func (v *UpdateBlackListResponse) GetUpdateBlackList() UpdateBlackListUpdateBlackList {
	return v.UpdateBlackList
}

// UpdateBlackListUpdateBlackList includes the requested fields of the GraphQL type BlackList.
type UpdateBlackListUpdateBlackList struct {
	Id    string   `json:"id"`
	Token []string `json:"token"`
}

// GetId returns UpdateBlackListUpdateBlackList.Id, and is useful for accessing the field via an interface.
func (v *UpdateBlackListUpdateBlackList) GetId() string { return v.Id }

// GetToken returns UpdateBlackListUpdateBlackList.Token, and is useful for accessing the field via an interface.
func (v *UpdateBlackListUpdateBlackList) GetToken() []string { return v.Token }

// UpdateChatResponse is returned by UpdateChat on success.
type UpdateChatResponse struct {
	UpdateChat UpdateChatUpdateChat `json:"updateChat"`
}

// GetUpdateChat returns UpdateChatResponse.UpdateChat, and is useful for accessing the field via an interface.
func (v *UpdateChatResponse) GetUpdateChat() UpdateChatUpdateChat { return v.UpdateChat }

// UpdateChatUpdateChat includes the requested fields of the GraphQL type Chat.
type UpdateChatUpdateChat struct {
	Id           string                             `json:"id"`
	Participants []UpdateChatUpdateChatParticipants `json:"participants"`
	Messages     []UpdateChatUpdateChatMessages     `json:"messages"`
}

// GetId returns UpdateChatUpdateChat.Id, and is useful for accessing the field via an interface.
func (v *UpdateChatUpdateChat) GetId() string { return v.Id }

// GetParticipants returns UpdateChatUpdateChat.Participants, and is useful for accessing the field via an interface.
func (v *UpdateChatUpdateChat) GetParticipants() []UpdateChatUpdateChatParticipants {
	return v.Participants
}

// GetMessages returns UpdateChatUpdateChat.Messages, and is useful for accessing the field via an interface.
func (v *UpdateChatUpdateChat) GetMessages() []UpdateChatUpdateChatMessages { return v.Messages }

// UpdateChatUpdateChatMessages includes the requested fields of the GraphQL type ChatMessages.
type UpdateChatUpdateChatMessages struct {
	Owner_id    string `json:"owner_id"`
	Message     string `json:"message"`
	Sended_time int    `json:"sended_time"`
}

// GetOwner_id returns UpdateChatUpdateChatMessages.Owner_id, and is useful for accessing the field via an interface.
func (v *UpdateChatUpdateChatMessages) GetOwner_id() string { return v.Owner_id }

// GetMessage returns UpdateChatUpdateChatMessages.Message, and is useful for accessing the field via an interface.
func (v *UpdateChatUpdateChatMessages) GetMessage() string { return v.Message }

// GetSended_time returns UpdateChatUpdateChatMessages.Sended_time, and is useful for accessing the field via an interface.
func (v *UpdateChatUpdateChatMessages) GetSended_time() int { return v.Sended_time }

// UpdateChatUpdateChatParticipants includes the requested fields of the GraphQL type ChatParticipants.
type UpdateChatUpdateChatParticipants struct {
	Participant_id string `json:"participant_id"`
	Last_seen      int    `json:"last_seen"`
}

// GetParticipant_id returns UpdateChatUpdateChatParticipants.Participant_id, and is useful for accessing the field via an interface.
func (v *UpdateChatUpdateChatParticipants) GetParticipant_id() string { return v.Participant_id }

// GetLast_seen returns UpdateChatUpdateChatParticipants.Last_seen, and is useful for accessing the field via an interface.
func (v *UpdateChatUpdateChatParticipants) GetLast_seen() int { return v.Last_seen }

// UpdateDemoAccountResponse is returned by UpdateDemoAccount on success.
type UpdateDemoAccountResponse struct {
	UpdateDemoAccount UpdateDemoAccountUpdateDemoAccount `json:"updateDemoAccount"`
}

// GetUpdateDemoAccount returns UpdateDemoAccountResponse.UpdateDemoAccount, and is useful for accessing the field via an interface.
func (v *UpdateDemoAccountResponse) GetUpdateDemoAccount() UpdateDemoAccountUpdateDemoAccount {
	return v.UpdateDemoAccount
}

// UpdateDemoAccountUpdateDemoAccount includes the requested fields of the GraphQL type DemoAccount.
type UpdateDemoAccountUpdateDemoAccount struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns UpdateDemoAccountUpdateDemoAccount.Id, and is useful for accessing the field via an interface.
func (v *UpdateDemoAccountUpdateDemoAccount) GetId() string { return v.Id }

// GetEmail returns UpdateDemoAccountUpdateDemoAccount.Email, and is useful for accessing the field via an interface.
func (v *UpdateDemoAccountUpdateDemoAccount) GetEmail() string { return v.Email }

// GetPassword returns UpdateDemoAccountUpdateDemoAccount.Password, and is useful for accessing the field via an interface.
func (v *UpdateDemoAccountUpdateDemoAccount) GetPassword() string { return v.Password }

// UpdateDeviceConnectResponse is returned by UpdateDeviceConnect on success.
type UpdateDeviceConnectResponse struct {
	UpdateDeviceConnect UpdateDeviceConnectUpdateDeviceConnect `json:"updateDeviceConnect"`
}

// GetUpdateDeviceConnect returns UpdateDeviceConnectResponse.UpdateDeviceConnect, and is useful for accessing the field via an interface.
func (v *UpdateDeviceConnectResponse) GetUpdateDeviceConnect() UpdateDeviceConnectUpdateDeviceConnect {
	return v.UpdateDeviceConnect
}

// UpdateDeviceConnectUpdateDeviceConnect includes the requested fields of the GraphQL type DeviceConnect.
type UpdateDeviceConnectUpdateDeviceConnect struct {
	Id           string  `json:"id"`
	Device_name  string  `json:"device_name"`
	Ip_address   string  `json:"ip_address"`
	Latitude     float64 `json:"latitude"`
	Longitude    float64 `json:"longitude"`
	Date         int     `json:"date"`
	Trust_device bool    `json:"trust_device"`
}

// GetId returns UpdateDeviceConnectUpdateDeviceConnect.Id, and is useful for accessing the field via an interface.
func (v *UpdateDeviceConnectUpdateDeviceConnect) GetId() string { return v.Id }

// GetDevice_name returns UpdateDeviceConnectUpdateDeviceConnect.Device_name, and is useful for accessing the field via an interface.
func (v *UpdateDeviceConnectUpdateDeviceConnect) GetDevice_name() string { return v.Device_name }

// GetIp_address returns UpdateDeviceConnectUpdateDeviceConnect.Ip_address, and is useful for accessing the field via an interface.
func (v *UpdateDeviceConnectUpdateDeviceConnect) GetIp_address() string { return v.Ip_address }

// GetLatitude returns UpdateDeviceConnectUpdateDeviceConnect.Latitude, and is useful for accessing the field via an interface.
func (v *UpdateDeviceConnectUpdateDeviceConnect) GetLatitude() float64 { return v.Latitude }

// GetLongitude returns UpdateDeviceConnectUpdateDeviceConnect.Longitude, and is useful for accessing the field via an interface.
func (v *UpdateDeviceConnectUpdateDeviceConnect) GetLongitude() float64 { return v.Longitude }

// GetDate returns UpdateDeviceConnectUpdateDeviceConnect.Date, and is useful for accessing the field via an interface.
func (v *UpdateDeviceConnectUpdateDeviceConnect) GetDate() int { return v.Date }

// GetTrust_device returns UpdateDeviceConnectUpdateDeviceConnect.Trust_device, and is useful for accessing the field via an interface.
func (v *UpdateDeviceConnectUpdateDeviceConnect) GetTrust_device() bool { return v.Trust_device }

// UpdateDiseaseResponse is returned by UpdateDisease on success.
type UpdateDiseaseResponse struct {
	UpdateDisease UpdateDiseaseUpdateDisease `json:"updateDisease"`
}

// GetUpdateDisease returns UpdateDiseaseResponse.UpdateDisease, and is useful for accessing the field via an interface.
func (v *UpdateDiseaseResponse) GetUpdateDisease() UpdateDiseaseUpdateDisease { return v.UpdateDisease }

// UpdateDiseaseUpdateDisease includes the requested fields of the GraphQL type Disease.
type UpdateDiseaseUpdateDisease struct {
	Id                string                                                    `json:"id"`
	Code              string                                                    `json:"code"`
	Name              string                                                    `json:"name"`
	Symptoms          []string                                                  `json:"symptoms"`
	Symptoms_weight   []UpdateDiseaseUpdateDiseaseSymptoms_weightSymptomsWeight `json:"symptoms_weight"`
	Overweight_factor float64                                                   `json:"overweight_factor"`
	Advice            string                                                    `json:"advice"`
}

// GetId returns UpdateDiseaseUpdateDisease.Id, and is useful for accessing the field via an interface.
func (v *UpdateDiseaseUpdateDisease) GetId() string { return v.Id }

// GetCode returns UpdateDiseaseUpdateDisease.Code, and is useful for accessing the field via an interface.
func (v *UpdateDiseaseUpdateDisease) GetCode() string { return v.Code }

// GetName returns UpdateDiseaseUpdateDisease.Name, and is useful for accessing the field via an interface.
func (v *UpdateDiseaseUpdateDisease) GetName() string { return v.Name }

// GetSymptoms returns UpdateDiseaseUpdateDisease.Symptoms, and is useful for accessing the field via an interface.
func (v *UpdateDiseaseUpdateDisease) GetSymptoms() []string { return v.Symptoms }

// GetSymptoms_weight returns UpdateDiseaseUpdateDisease.Symptoms_weight, and is useful for accessing the field via an interface.
func (v *UpdateDiseaseUpdateDisease) GetSymptoms_weight() []UpdateDiseaseUpdateDiseaseSymptoms_weightSymptomsWeight {
	return v.Symptoms_weight
}

// GetOverweight_factor returns UpdateDiseaseUpdateDisease.Overweight_factor, and is useful for accessing the field via an interface.
func (v *UpdateDiseaseUpdateDisease) GetOverweight_factor() float64 { return v.Overweight_factor }

// GetAdvice returns UpdateDiseaseUpdateDisease.Advice, and is useful for accessing the field via an interface.
func (v *UpdateDiseaseUpdateDisease) GetAdvice() string { return v.Advice }

// UpdateDiseaseUpdateDiseaseSymptoms_weightSymptomsWeight includes the requested fields of the GraphQL type SymptomsWeight.
type UpdateDiseaseUpdateDiseaseSymptoms_weightSymptomsWeight struct {
	Symptom string  `json:"symptom"`
	Value   float64 `json:"value"`
	Chronic bool    `json:"chronic"`
}

// GetSymptom returns UpdateDiseaseUpdateDiseaseSymptoms_weightSymptomsWeight.Symptom, and is useful for accessing the field via an interface.
func (v *UpdateDiseaseUpdateDiseaseSymptoms_weightSymptomsWeight) GetSymptom() string {
	return v.Symptom
}

// GetValue returns UpdateDiseaseUpdateDiseaseSymptoms_weightSymptomsWeight.Value, and is useful for accessing the field via an interface.
func (v *UpdateDiseaseUpdateDiseaseSymptoms_weightSymptomsWeight) GetValue() float64 { return v.Value }

// GetChronic returns UpdateDiseaseUpdateDiseaseSymptoms_weightSymptomsWeight.Chronic, and is useful for accessing the field via an interface.
func (v *UpdateDiseaseUpdateDiseaseSymptoms_weightSymptomsWeight) GetChronic() bool { return v.Chronic }

// UpdateDoctorResponse is returned by UpdateDoctor on success.
type UpdateDoctorResponse struct {
	UpdateDoctor UpdateDoctorUpdateDoctor `json:"updateDoctor"`
}

// GetUpdateDoctor returns UpdateDoctorResponse.UpdateDoctor, and is useful for accessing the field via an interface.
func (v *UpdateDoctorResponse) GetUpdateDoctor() UpdateDoctorUpdateDoctor { return v.UpdateDoctor }

// UpdateDoctorUpdateDoctor includes the requested fields of the GraphQL type Doctor.
type UpdateDoctorUpdateDoctor struct {
	Id              string                          `json:"id"`
	Email           string                          `json:"email"`
	Password        string                          `json:"password"`
	Name            string                          `json:"name"`
	Firstname       string                          `json:"firstname"`
	Rendez_vous_ids []string                        `json:"rendez_vous_ids"`
	Patient_ids     []string                        `json:"patient_ids"`
	Chat_ids        []string                        `json:"chat_ids"`
	Address         UpdateDoctorUpdateDoctorAddress `json:"address"`
}

// GetId returns UpdateDoctorUpdateDoctor.Id, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctor) GetId() string { return v.Id }

// GetEmail returns UpdateDoctorUpdateDoctor.Email, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctor) GetEmail() string { return v.Email }

// GetPassword returns UpdateDoctorUpdateDoctor.Password, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctor) GetPassword() string { return v.Password }

// GetName returns UpdateDoctorUpdateDoctor.Name, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctor) GetName() string { return v.Name }

// GetFirstname returns UpdateDoctorUpdateDoctor.Firstname, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctor) GetFirstname() string { return v.Firstname }

// GetRendez_vous_ids returns UpdateDoctorUpdateDoctor.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctor) GetRendez_vous_ids() []string { return v.Rendez_vous_ids }

// GetPatient_ids returns UpdateDoctorUpdateDoctor.Patient_ids, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctor) GetPatient_ids() []string { return v.Patient_ids }

// GetChat_ids returns UpdateDoctorUpdateDoctor.Chat_ids, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctor) GetChat_ids() []string { return v.Chat_ids }

// GetAddress returns UpdateDoctorUpdateDoctor.Address, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctor) GetAddress() UpdateDoctorUpdateDoctorAddress { return v.Address }

// UpdateDoctorUpdateDoctorAddress includes the requested fields of the GraphQL type Address.
type UpdateDoctorUpdateDoctorAddress struct {
	Street   string `json:"street"`
	Zip_code string `json:"zip_code"`
	Country  string `json:"country"`
}

// GetStreet returns UpdateDoctorUpdateDoctorAddress.Street, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctorAddress) GetStreet() string { return v.Street }

// GetZip_code returns UpdateDoctorUpdateDoctorAddress.Zip_code, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctorAddress) GetZip_code() string { return v.Zip_code }

// GetCountry returns UpdateDoctorUpdateDoctorAddress.Country, and is useful for accessing the field via an interface.
func (v *UpdateDoctorUpdateDoctorAddress) GetCountry() string { return v.Country }

// UpdateDocumentResponse is returned by UpdateDocument on success.
type UpdateDocumentResponse struct {
	UpdateDocument UpdateDocumentUpdateDocument `json:"updateDocument"`
}

// GetUpdateDocument returns UpdateDocumentResponse.UpdateDocument, and is useful for accessing the field via an interface.
func (v *UpdateDocumentResponse) GetUpdateDocument() UpdateDocumentUpdateDocument {
	return v.UpdateDocument
}

// UpdateDocumentUpdateDocument includes the requested fields of the GraphQL type Document.
type UpdateDocumentUpdateDocument struct {
	Id            string       `json:"id"`
	Owner_id      string       `json:"owner_id"`
	Name          string       `json:"name"`
	Document_type DocumentType `json:"document_type"`
	Category      Category     `json:"category"`
	Is_favorite   bool         `json:"is_favorite"`
	Download_url  string       `json:"download_url"`
}

// GetId returns UpdateDocumentUpdateDocument.Id, and is useful for accessing the field via an interface.
func (v *UpdateDocumentUpdateDocument) GetId() string { return v.Id }

// GetOwner_id returns UpdateDocumentUpdateDocument.Owner_id, and is useful for accessing the field via an interface.
func (v *UpdateDocumentUpdateDocument) GetOwner_id() string { return v.Owner_id }

// GetName returns UpdateDocumentUpdateDocument.Name, and is useful for accessing the field via an interface.
func (v *UpdateDocumentUpdateDocument) GetName() string { return v.Name }

// GetDocument_type returns UpdateDocumentUpdateDocument.Document_type, and is useful for accessing the field via an interface.
func (v *UpdateDocumentUpdateDocument) GetDocument_type() DocumentType { return v.Document_type }

// GetCategory returns UpdateDocumentUpdateDocument.Category, and is useful for accessing the field via an interface.
func (v *UpdateDocumentUpdateDocument) GetCategory() Category { return v.Category }

// GetIs_favorite returns UpdateDocumentUpdateDocument.Is_favorite, and is useful for accessing the field via an interface.
func (v *UpdateDocumentUpdateDocument) GetIs_favorite() bool { return v.Is_favorite }

// GetDownload_url returns UpdateDocumentUpdateDocument.Download_url, and is useful for accessing the field via an interface.
func (v *UpdateDocumentUpdateDocument) GetDownload_url() string { return v.Download_url }

// UpdateDoubleAuthResponse is returned by UpdateDoubleAuth on success.
type UpdateDoubleAuthResponse struct {
	UpdateDoubleAuth UpdateDoubleAuthUpdateDoubleAuth `json:"updateDoubleAuth"`
}

// GetUpdateDoubleAuth returns UpdateDoubleAuthResponse.UpdateDoubleAuth, and is useful for accessing the field via an interface.
func (v *UpdateDoubleAuthResponse) GetUpdateDoubleAuth() UpdateDoubleAuthUpdateDoubleAuth {
	return v.UpdateDoubleAuth
}

// UpdateDoubleAuthUpdateDoubleAuth includes the requested fields of the GraphQL type DoubleAuth.
type UpdateDoubleAuthUpdateDoubleAuth struct {
	Id              string   `json:"id"`
	Methods         []string `json:"methods"`
	Secret          string   `json:"secret"`
	Url             string   `json:"url"`
	Trust_device_id string   `json:"trust_device_id"`
}

// GetId returns UpdateDoubleAuthUpdateDoubleAuth.Id, and is useful for accessing the field via an interface.
func (v *UpdateDoubleAuthUpdateDoubleAuth) GetId() string { return v.Id }

// GetMethods returns UpdateDoubleAuthUpdateDoubleAuth.Methods, and is useful for accessing the field via an interface.
func (v *UpdateDoubleAuthUpdateDoubleAuth) GetMethods() []string { return v.Methods }

// GetSecret returns UpdateDoubleAuthUpdateDoubleAuth.Secret, and is useful for accessing the field via an interface.
func (v *UpdateDoubleAuthUpdateDoubleAuth) GetSecret() string { return v.Secret }

// GetUrl returns UpdateDoubleAuthUpdateDoubleAuth.Url, and is useful for accessing the field via an interface.
func (v *UpdateDoubleAuthUpdateDoubleAuth) GetUrl() string { return v.Url }

// GetTrust_device_id returns UpdateDoubleAuthUpdateDoubleAuth.Trust_device_id, and is useful for accessing the field via an interface.
func (v *UpdateDoubleAuthUpdateDoubleAuth) GetTrust_device_id() string { return v.Trust_device_id }

// UpdateMedicalFolderResponse is returned by UpdateMedicalFolder on success.
type UpdateMedicalFolderResponse struct {
	UpdateMedicalFolder UpdateMedicalFolderUpdateMedicalFolderMedicalInfo `json:"updateMedicalFolder"`
}

// GetUpdateMedicalFolder returns UpdateMedicalFolderResponse.UpdateMedicalFolder, and is useful for accessing the field via an interface.
func (v *UpdateMedicalFolderResponse) GetUpdateMedicalFolder() UpdateMedicalFolderUpdateMedicalFolderMedicalInfo {
	return v.UpdateMedicalFolder
}

// UpdateMedicalFolderUpdateMedicalFolderMedicalInfo includes the requested fields of the GraphQL type MedicalInfo.
type UpdateMedicalFolderUpdateMedicalFolderMedicalInfo struct {
	Id                     string           `json:"id"`
	Name                   string           `json:"name"`
	Firstname              string           `json:"firstname"`
	Birthdate              int              `json:"birthdate"`
	Sex                    Sex              `json:"sex"`
	Height                 int              `json:"height"`
	Weight                 int              `json:"weight"`
	Primary_doctor_id      string           `json:"primary_doctor_id"`
	Antecedent_disease_ids []string         `json:"antecedent_disease_ids"`
	Onboarding_status      OnboardingStatus `json:"onboarding_status"`
}

// GetId returns UpdateMedicalFolderUpdateMedicalFolderMedicalInfo.Id, and is useful for accessing the field via an interface.
func (v *UpdateMedicalFolderUpdateMedicalFolderMedicalInfo) GetId() string { return v.Id }

// GetName returns UpdateMedicalFolderUpdateMedicalFolderMedicalInfo.Name, and is useful for accessing the field via an interface.
func (v *UpdateMedicalFolderUpdateMedicalFolderMedicalInfo) GetName() string { return v.Name }

// GetFirstname returns UpdateMedicalFolderUpdateMedicalFolderMedicalInfo.Firstname, and is useful for accessing the field via an interface.
func (v *UpdateMedicalFolderUpdateMedicalFolderMedicalInfo) GetFirstname() string { return v.Firstname }

// GetBirthdate returns UpdateMedicalFolderUpdateMedicalFolderMedicalInfo.Birthdate, and is useful for accessing the field via an interface.
func (v *UpdateMedicalFolderUpdateMedicalFolderMedicalInfo) GetBirthdate() int { return v.Birthdate }

// GetSex returns UpdateMedicalFolderUpdateMedicalFolderMedicalInfo.Sex, and is useful for accessing the field via an interface.
func (v *UpdateMedicalFolderUpdateMedicalFolderMedicalInfo) GetSex() Sex { return v.Sex }

// GetHeight returns UpdateMedicalFolderUpdateMedicalFolderMedicalInfo.Height, and is useful for accessing the field via an interface.
func (v *UpdateMedicalFolderUpdateMedicalFolderMedicalInfo) GetHeight() int { return v.Height }

// GetWeight returns UpdateMedicalFolderUpdateMedicalFolderMedicalInfo.Weight, and is useful for accessing the field via an interface.
func (v *UpdateMedicalFolderUpdateMedicalFolderMedicalInfo) GetWeight() int { return v.Weight }

// GetPrimary_doctor_id returns UpdateMedicalFolderUpdateMedicalFolderMedicalInfo.Primary_doctor_id, and is useful for accessing the field via an interface.
func (v *UpdateMedicalFolderUpdateMedicalFolderMedicalInfo) GetPrimary_doctor_id() string {
	return v.Primary_doctor_id
}

// GetAntecedent_disease_ids returns UpdateMedicalFolderUpdateMedicalFolderMedicalInfo.Antecedent_disease_ids, and is useful for accessing the field via an interface.
func (v *UpdateMedicalFolderUpdateMedicalFolderMedicalInfo) GetAntecedent_disease_ids() []string {
	return v.Antecedent_disease_ids
}

// GetOnboarding_status returns UpdateMedicalFolderUpdateMedicalFolderMedicalInfo.Onboarding_status, and is useful for accessing the field via an interface.
func (v *UpdateMedicalFolderUpdateMedicalFolderMedicalInfo) GetOnboarding_status() OnboardingStatus {
	return v.Onboarding_status
}

// UpdateNotificationResponse is returned by UpdateNotification on success.
type UpdateNotificationResponse struct {
	UpdateNotification UpdateNotificationUpdateNotification `json:"updateNotification"`
}

// GetUpdateNotification returns UpdateNotificationResponse.UpdateNotification, and is useful for accessing the field via an interface.
func (v *UpdateNotificationResponse) GetUpdateNotification() UpdateNotificationUpdateNotification {
	return v.UpdateNotification
}

// UpdateNotificationUpdateNotification includes the requested fields of the GraphQL type Notification.
type UpdateNotificationUpdateNotification struct {
	Id      string `json:"id"`
	Token   string `json:"token"`
	Title   string `json:"title"`
	Message string `json:"message"`
}

// GetId returns UpdateNotificationUpdateNotification.Id, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotification) GetId() string { return v.Id }

// GetToken returns UpdateNotificationUpdateNotification.Token, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotification) GetToken() string { return v.Token }

// GetTitle returns UpdateNotificationUpdateNotification.Title, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotification) GetTitle() string { return v.Title }

// GetMessage returns UpdateNotificationUpdateNotification.Message, and is useful for accessing the field via an interface.
func (v *UpdateNotificationUpdateNotification) GetMessage() string { return v.Message }

// UpdatePatientResponse is returned by UpdatePatient on success.
type UpdatePatientResponse struct {
	UpdatePatient UpdatePatientUpdatePatient `json:"updatePatient"`
}

// GetUpdatePatient returns UpdatePatientResponse.UpdatePatient, and is useful for accessing the field via an interface.
func (v *UpdatePatientResponse) GetUpdatePatient() UpdatePatientUpdatePatient { return v.UpdatePatient }

// UpdatePatientUpdatePatient includes the requested fields of the GraphQL type Patient.
type UpdatePatientUpdatePatient struct {
	Id                      string   `json:"id"`
	Email                   string   `json:"email"`
	Password                string   `json:"password"`
	Rendez_vous_ids         []string `json:"rendez_vous_ids"`
	Medical_info_id         string   `json:"medical_info_id"`
	Document_ids            []string `json:"document_ids"`
	Treatment_follow_up_ids []string `json:"treatment_follow_up_ids"`
	Chat_ids                []string `json:"chat_ids"`
	Device_connect          []string `json:"device_connect"`
	Double_auth_methods_id  string   `json:"double_auth_methods_id"`
}

// GetId returns UpdatePatientUpdatePatient.Id, and is useful for accessing the field via an interface.
func (v *UpdatePatientUpdatePatient) GetId() string { return v.Id }

// GetEmail returns UpdatePatientUpdatePatient.Email, and is useful for accessing the field via an interface.
func (v *UpdatePatientUpdatePatient) GetEmail() string { return v.Email }

// GetPassword returns UpdatePatientUpdatePatient.Password, and is useful for accessing the field via an interface.
func (v *UpdatePatientUpdatePatient) GetPassword() string { return v.Password }

// GetRendez_vous_ids returns UpdatePatientUpdatePatient.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *UpdatePatientUpdatePatient) GetRendez_vous_ids() []string { return v.Rendez_vous_ids }

// GetMedical_info_id returns UpdatePatientUpdatePatient.Medical_info_id, and is useful for accessing the field via an interface.
func (v *UpdatePatientUpdatePatient) GetMedical_info_id() string { return v.Medical_info_id }

// GetDocument_ids returns UpdatePatientUpdatePatient.Document_ids, and is useful for accessing the field via an interface.
func (v *UpdatePatientUpdatePatient) GetDocument_ids() []string { return v.Document_ids }

// GetTreatment_follow_up_ids returns UpdatePatientUpdatePatient.Treatment_follow_up_ids, and is useful for accessing the field via an interface.
func (v *UpdatePatientUpdatePatient) GetTreatment_follow_up_ids() []string {
	return v.Treatment_follow_up_ids
}

// GetChat_ids returns UpdatePatientUpdatePatient.Chat_ids, and is useful for accessing the field via an interface.
func (v *UpdatePatientUpdatePatient) GetChat_ids() []string { return v.Chat_ids }

// GetDevice_connect returns UpdatePatientUpdatePatient.Device_connect, and is useful for accessing the field via an interface.
func (v *UpdatePatientUpdatePatient) GetDevice_connect() []string { return v.Device_connect }

// GetDouble_auth_methods_id returns UpdatePatientUpdatePatient.Double_auth_methods_id, and is useful for accessing the field via an interface.
func (v *UpdatePatientUpdatePatient) GetDouble_auth_methods_id() string {
	return v.Double_auth_methods_id
}

// UpdateRdvResponse is returned by UpdateRdv on success.
type UpdateRdvResponse struct {
	UpdateRdv UpdateRdvUpdateRdv `json:"updateRdv"`
}

// GetUpdateRdv returns UpdateRdvResponse.UpdateRdv, and is useful for accessing the field via an interface.
func (v *UpdateRdvResponse) GetUpdateRdv() UpdateRdvUpdateRdv { return v.UpdateRdv }

// UpdateRdvUpdateRdv includes the requested fields of the GraphQL type Rdv.
type UpdateRdvUpdateRdv struct {
	Id                 string            `json:"id"`
	Doctor_id          string            `json:"doctor_id"`
	Id_patient         string            `json:"id_patient"`
	Start_date         int               `json:"start_date"`
	End_date           int               `json:"end_date"`
	Cancelation_reason string            `json:"cancelation_reason"`
	Appointment_status AppointmentStatus `json:"appointment_status"`
	Session_id         string            `json:"session_id"`
	Health_method      string            `json:"health_method"`
}

// GetId returns UpdateRdvUpdateRdv.Id, and is useful for accessing the field via an interface.
func (v *UpdateRdvUpdateRdv) GetId() string { return v.Id }

// GetDoctor_id returns UpdateRdvUpdateRdv.Doctor_id, and is useful for accessing the field via an interface.
func (v *UpdateRdvUpdateRdv) GetDoctor_id() string { return v.Doctor_id }

// GetId_patient returns UpdateRdvUpdateRdv.Id_patient, and is useful for accessing the field via an interface.
func (v *UpdateRdvUpdateRdv) GetId_patient() string { return v.Id_patient }

// GetStart_date returns UpdateRdvUpdateRdv.Start_date, and is useful for accessing the field via an interface.
func (v *UpdateRdvUpdateRdv) GetStart_date() int { return v.Start_date }

// GetEnd_date returns UpdateRdvUpdateRdv.End_date, and is useful for accessing the field via an interface.
func (v *UpdateRdvUpdateRdv) GetEnd_date() int { return v.End_date }

// GetCancelation_reason returns UpdateRdvUpdateRdv.Cancelation_reason, and is useful for accessing the field via an interface.
func (v *UpdateRdvUpdateRdv) GetCancelation_reason() string { return v.Cancelation_reason }

// GetAppointment_status returns UpdateRdvUpdateRdv.Appointment_status, and is useful for accessing the field via an interface.
func (v *UpdateRdvUpdateRdv) GetAppointment_status() AppointmentStatus { return v.Appointment_status }

// GetSession_id returns UpdateRdvUpdateRdv.Session_id, and is useful for accessing the field via an interface.
func (v *UpdateRdvUpdateRdv) GetSession_id() string { return v.Session_id }

// GetHealth_method returns UpdateRdvUpdateRdv.Health_method, and is useful for accessing the field via an interface.
func (v *UpdateRdvUpdateRdv) GetHealth_method() string { return v.Health_method }

// UpdateSessionResponse is returned by UpdateSession on success.
type UpdateSessionResponse struct {
	UpdateSession UpdateSessionUpdateSession `json:"updateSession"`
}

// GetUpdateSession returns UpdateSessionResponse.UpdateSession, and is useful for accessing the field via an interface.
func (v *UpdateSessionResponse) GetUpdateSession() UpdateSessionUpdateSession { return v.UpdateSession }

// UpdateSessionUpdateSession includes the requested fields of the GraphQL type Session.
type UpdateSessionUpdateSession struct {
	Id            string                                             `json:"id"`
	Diseases      []UpdateSessionUpdateSessionDiseases               `json:"diseases"`
	Symptoms      []UpdateSessionUpdateSessionSymptomsSessionSymptom `json:"symptoms"`
	Age           int                                                `json:"age"`
	Height        int                                                `json:"height"`
	Weight        int                                                `json:"weight"`
	Sex           string                                             `json:"sex"`
	Ante_chirs    []string                                           `json:"ante_chirs"`
	Ante_diseases []string                                           `json:"ante_diseases"`
	Medicine      []string                                           `json:"medicine"`
	Last_question string                                             `json:"last_question"`
	Logs          []UpdateSessionUpdateSessionLogs                   `json:"logs"`
	Alerts        []string                                           `json:"alerts"`
}

// GetId returns UpdateSessionUpdateSession.Id, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetId() string { return v.Id }

// GetDiseases returns UpdateSessionUpdateSession.Diseases, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetDiseases() []UpdateSessionUpdateSessionDiseases {
	return v.Diseases
}

// GetSymptoms returns UpdateSessionUpdateSession.Symptoms, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetSymptoms() []UpdateSessionUpdateSessionSymptomsSessionSymptom {
	return v.Symptoms
}

// GetAge returns UpdateSessionUpdateSession.Age, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetAge() int { return v.Age }

// GetHeight returns UpdateSessionUpdateSession.Height, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetHeight() int { return v.Height }

// GetWeight returns UpdateSessionUpdateSession.Weight, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetWeight() int { return v.Weight }

// GetSex returns UpdateSessionUpdateSession.Sex, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetSex() string { return v.Sex }

// GetAnte_chirs returns UpdateSessionUpdateSession.Ante_chirs, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetAnte_chirs() []string { return v.Ante_chirs }

// GetAnte_diseases returns UpdateSessionUpdateSession.Ante_diseases, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetAnte_diseases() []string { return v.Ante_diseases }

// GetMedicine returns UpdateSessionUpdateSession.Medicine, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetMedicine() []string { return v.Medicine }

// GetLast_question returns UpdateSessionUpdateSession.Last_question, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetLast_question() string { return v.Last_question }

// GetLogs returns UpdateSessionUpdateSession.Logs, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetLogs() []UpdateSessionUpdateSessionLogs { return v.Logs }

// GetAlerts returns UpdateSessionUpdateSession.Alerts, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSession) GetAlerts() []string { return v.Alerts }

// UpdateSessionUpdateSessionDiseases includes the requested fields of the GraphQL type SessionDiseases.
type UpdateSessionUpdateSessionDiseases struct {
	Name             string  `json:"name"`
	Presence         float64 `json:"presence"`
	Unknown_presence float64 `json:"unknown_presence"`
}

// GetName returns UpdateSessionUpdateSessionDiseases.Name, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSessionDiseases) GetName() string { return v.Name }

// GetPresence returns UpdateSessionUpdateSessionDiseases.Presence, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSessionDiseases) GetPresence() float64 { return v.Presence }

// GetUnknown_presence returns UpdateSessionUpdateSessionDiseases.Unknown_presence, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSessionDiseases) GetUnknown_presence() float64 { return v.Unknown_presence }

// UpdateSessionUpdateSessionLogs includes the requested fields of the GraphQL type Logs.
type UpdateSessionUpdateSessionLogs struct {
	Question string `json:"question"`
	Answer   string `json:"answer"`
}

// GetQuestion returns UpdateSessionUpdateSessionLogs.Question, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSessionLogs) GetQuestion() string { return v.Question }

// GetAnswer returns UpdateSessionUpdateSessionLogs.Answer, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSessionLogs) GetAnswer() string { return v.Answer }

// UpdateSessionUpdateSessionSymptomsSessionSymptom includes the requested fields of the GraphQL type SessionSymptom.
type UpdateSessionUpdateSessionSymptomsSessionSymptom struct {
	Name     string   `json:"name"`
	Presence int      `json:"presence"`
	Duration int      `json:"duration"`
	Treated  []string `json:"treated"`
}

// GetName returns UpdateSessionUpdateSessionSymptomsSessionSymptom.Name, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSessionSymptomsSessionSymptom) GetName() string { return v.Name }

// GetPresence returns UpdateSessionUpdateSessionSymptomsSessionSymptom.Presence, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSessionSymptomsSessionSymptom) GetPresence() int { return v.Presence }

// GetDuration returns UpdateSessionUpdateSessionSymptomsSessionSymptom.Duration, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSessionSymptomsSessionSymptom) GetDuration() int { return v.Duration }

// GetTreated returns UpdateSessionUpdateSessionSymptomsSessionSymptom.Treated, and is useful for accessing the field via an interface.
func (v *UpdateSessionUpdateSessionSymptomsSessionSymptom) GetTreated() []string { return v.Treated }

// UpdateSymptomResponse is returned by UpdateSymptom on success.
type UpdateSymptomResponse struct {
	UpdateSymptom UpdateSymptomUpdateSymptom `json:"updateSymptom"`
}

// GetUpdateSymptom returns UpdateSymptomResponse.UpdateSymptom, and is useful for accessing the field via an interface.
func (v *UpdateSymptomResponse) GetUpdateSymptom() UpdateSymptomUpdateSymptom { return v.UpdateSymptom }

// UpdateSymptomUpdateSymptom includes the requested fields of the GraphQL type Symptom.
type UpdateSymptomUpdateSymptom struct {
	Id                string   `json:"id"`
	Code              string   `json:"code"`
	Name              string   `json:"name"`
	Chronic           int      `json:"chronic"`
	Symptom           []string `json:"symptom"`
	Advice            string   `json:"advice"`
	Question          string   `json:"question"`
	Question_basic    string   `json:"question_basic"`
	Question_duration string   `json:"question_duration"`
	Question_ante     string   `json:"question_ante"`
}

// GetId returns UpdateSymptomUpdateSymptom.Id, and is useful for accessing the field via an interface.
func (v *UpdateSymptomUpdateSymptom) GetId() string { return v.Id }

// GetCode returns UpdateSymptomUpdateSymptom.Code, and is useful for accessing the field via an interface.
func (v *UpdateSymptomUpdateSymptom) GetCode() string { return v.Code }

// GetName returns UpdateSymptomUpdateSymptom.Name, and is useful for accessing the field via an interface.
func (v *UpdateSymptomUpdateSymptom) GetName() string { return v.Name }

// GetChronic returns UpdateSymptomUpdateSymptom.Chronic, and is useful for accessing the field via an interface.
func (v *UpdateSymptomUpdateSymptom) GetChronic() int { return v.Chronic }

// GetSymptom returns UpdateSymptomUpdateSymptom.Symptom, and is useful for accessing the field via an interface.
func (v *UpdateSymptomUpdateSymptom) GetSymptom() []string { return v.Symptom }

// GetAdvice returns UpdateSymptomUpdateSymptom.Advice, and is useful for accessing the field via an interface.
func (v *UpdateSymptomUpdateSymptom) GetAdvice() string { return v.Advice }

// GetQuestion returns UpdateSymptomUpdateSymptom.Question, and is useful for accessing the field via an interface.
func (v *UpdateSymptomUpdateSymptom) GetQuestion() string { return v.Question }

// GetQuestion_basic returns UpdateSymptomUpdateSymptom.Question_basic, and is useful for accessing the field via an interface.
func (v *UpdateSymptomUpdateSymptom) GetQuestion_basic() string { return v.Question_basic }

// GetQuestion_duration returns UpdateSymptomUpdateSymptom.Question_duration, and is useful for accessing the field via an interface.
func (v *UpdateSymptomUpdateSymptom) GetQuestion_duration() string { return v.Question_duration }

// GetQuestion_ante returns UpdateSymptomUpdateSymptom.Question_ante, and is useful for accessing the field via an interface.
func (v *UpdateSymptomUpdateSymptom) GetQuestion_ante() string { return v.Question_ante }

// UpdateTestAccountResponse is returned by UpdateTestAccount on success.
type UpdateTestAccountResponse struct {
	UpdateTestAccount UpdateTestAccountUpdateTestAccount `json:"updateTestAccount"`
}

// GetUpdateTestAccount returns UpdateTestAccountResponse.UpdateTestAccount, and is useful for accessing the field via an interface.
func (v *UpdateTestAccountResponse) GetUpdateTestAccount() UpdateTestAccountUpdateTestAccount {
	return v.UpdateTestAccount
}

// UpdateTestAccountUpdateTestAccount includes the requested fields of the GraphQL type TestAccount.
type UpdateTestAccountUpdateTestAccount struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns UpdateTestAccountUpdateTestAccount.Id, and is useful for accessing the field via an interface.
func (v *UpdateTestAccountUpdateTestAccount) GetId() string { return v.Id }

// GetEmail returns UpdateTestAccountUpdateTestAccount.Email, and is useful for accessing the field via an interface.
func (v *UpdateTestAccountUpdateTestAccount) GetEmail() string { return v.Email }

// GetPassword returns UpdateTestAccountUpdateTestAccount.Password, and is useful for accessing the field via an interface.
func (v *UpdateTestAccountUpdateTestAccount) GetPassword() string { return v.Password }

// UpdateTreatmentResponse is returned by UpdateTreatment on success.
type UpdateTreatmentResponse struct {
	UpdateTreatment UpdateTreatmentUpdateTreatment `json:"updateTreatment"`
}

// GetUpdateTreatment returns UpdateTreatmentResponse.UpdateTreatment, and is useful for accessing the field via an interface.
func (v *UpdateTreatmentResponse) GetUpdateTreatment() UpdateTreatmentUpdateTreatment {
	return v.UpdateTreatment
}

// UpdateTreatmentUpdateTreatment includes the requested fields of the GraphQL type Treatment.
type UpdateTreatmentUpdateTreatment struct {
	Id          string   `json:"id"`
	Period      []Period `json:"period"`
	Day         []Day    `json:"day"`
	Quantity    int      `json:"quantity"`
	Medicine_id string   `json:"medicine_id"`
}

// GetId returns UpdateTreatmentUpdateTreatment.Id, and is useful for accessing the field via an interface.
func (v *UpdateTreatmentUpdateTreatment) GetId() string { return v.Id }

// GetPeriod returns UpdateTreatmentUpdateTreatment.Period, and is useful for accessing the field via an interface.
func (v *UpdateTreatmentUpdateTreatment) GetPeriod() []Period { return v.Period }

// GetDay returns UpdateTreatmentUpdateTreatment.Day, and is useful for accessing the field via an interface.
func (v *UpdateTreatmentUpdateTreatment) GetDay() []Day { return v.Day }

// GetQuantity returns UpdateTreatmentUpdateTreatment.Quantity, and is useful for accessing the field via an interface.
func (v *UpdateTreatmentUpdateTreatment) GetQuantity() int { return v.Quantity }

// GetMedicine_id returns UpdateTreatmentUpdateTreatment.Medicine_id, and is useful for accessing the field via an interface.
func (v *UpdateTreatmentUpdateTreatment) GetMedicine_id() string { return v.Medicine_id }

// UpdateTreatmentsFollowUpResponse is returned by UpdateTreatmentsFollowUp on success.
type UpdateTreatmentsFollowUpResponse struct {
	UpdateTreatmentsFollowUp UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp `json:"updateTreatmentsFollowUp"`
}

// GetUpdateTreatmentsFollowUp returns UpdateTreatmentsFollowUpResponse.UpdateTreatmentsFollowUp, and is useful for accessing the field via an interface.
func (v *UpdateTreatmentsFollowUpResponse) GetUpdateTreatmentsFollowUp() UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp {
	return v.UpdateTreatmentsFollowUp
}

// UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp includes the requested fields of the GraphQL type TreatmentsFollowUp.
type UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp struct {
	Id           string   `json:"id"`
	Treatment_id string   `json:"treatment_id"`
	Date         int      `json:"date"`
	Period       []Period `json:"period"`
}

// GetId returns UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp.Id, and is useful for accessing the field via an interface.
func (v *UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp) GetId() string { return v.Id }

// GetTreatment_id returns UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp.Treatment_id, and is useful for accessing the field via an interface.
func (v *UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp) GetTreatment_id() string {
	return v.Treatment_id
}

// GetDate returns UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp.Date, and is useful for accessing the field via an interface.
func (v *UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp) GetDate() int { return v.Date }

// GetPeriod returns UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp.Period, and is useful for accessing the field via an interface.
func (v *UpdateTreatmentsFollowUpUpdateTreatmentsFollowUp) GetPeriod() []Period { return v.Period }

// __CreateAdminInput is used internally by genqlient
type __CreateAdminInput struct {
	Email     string `json:"email"`
	Password  string `json:"password"`
	Name      string `json:"name"`
	Last_name string `json:"last_name"`
}

// GetEmail returns __CreateAdminInput.Email, and is useful for accessing the field via an interface.
func (v *__CreateAdminInput) GetEmail() string { return v.Email }

// GetPassword returns __CreateAdminInput.Password, and is useful for accessing the field via an interface.
func (v *__CreateAdminInput) GetPassword() string { return v.Password }

// GetName returns __CreateAdminInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateAdminInput) GetName() string { return v.Name }

// GetLast_name returns __CreateAdminInput.Last_name, and is useful for accessing the field via an interface.
func (v *__CreateAdminInput) GetLast_name() string { return v.Last_name }

// __CreateAlertInput is used internally by genqlient
type __CreateAlertInput struct {
	Name     string   `json:"name"`
	Sex      string   `json:"sex"`
	Height   int      `json:"height"`
	Weight   int      `json:"weight"`
	Symptoms []string `json:"symptoms"`
	Comment  string   `json:"comment"`
}

// GetName returns __CreateAlertInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateAlertInput) GetName() string { return v.Name }

// GetSex returns __CreateAlertInput.Sex, and is useful for accessing the field via an interface.
func (v *__CreateAlertInput) GetSex() string { return v.Sex }

// GetHeight returns __CreateAlertInput.Height, and is useful for accessing the field via an interface.
func (v *__CreateAlertInput) GetHeight() int { return v.Height }

// GetWeight returns __CreateAlertInput.Weight, and is useful for accessing the field via an interface.
func (v *__CreateAlertInput) GetWeight() int { return v.Weight }

// GetSymptoms returns __CreateAlertInput.Symptoms, and is useful for accessing the field via an interface.
func (v *__CreateAlertInput) GetSymptoms() []string { return v.Symptoms }

// GetComment returns __CreateAlertInput.Comment, and is useful for accessing the field via an interface.
func (v *__CreateAlertInput) GetComment() string { return v.Comment }

// __CreateAnteChirInput is used internally by genqlient
type __CreateAnteChirInput struct {
	Name             string                    `json:"name"`
	Induced_symptoms []ChirInducedSymptomInput `json:"induced_symptoms"`
}

// GetName returns __CreateAnteChirInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateAnteChirInput) GetName() string { return v.Name }

// GetInduced_symptoms returns __CreateAnteChirInput.Induced_symptoms, and is useful for accessing the field via an interface.
func (v *__CreateAnteChirInput) GetInduced_symptoms() []ChirInducedSymptomInput {
	return v.Induced_symptoms
}

// __CreateAnteDiseaseInput is used internally by genqlient
type __CreateAnteDiseaseInput struct {
	Name           string   `json:"name"`
	Chronicity     float64  `json:"chronicity"`
	Surgery_ids    []string `json:"surgery_ids"`
	Symptoms       []string `json:"symptoms"`
	Treatment_ids  []string `json:"treatment_ids"`
	Still_relevant bool     `json:"still_relevant"`
}

// GetName returns __CreateAnteDiseaseInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateAnteDiseaseInput) GetName() string { return v.Name }

// GetChronicity returns __CreateAnteDiseaseInput.Chronicity, and is useful for accessing the field via an interface.
func (v *__CreateAnteDiseaseInput) GetChronicity() float64 { return v.Chronicity }

// GetSurgery_ids returns __CreateAnteDiseaseInput.Surgery_ids, and is useful for accessing the field via an interface.
func (v *__CreateAnteDiseaseInput) GetSurgery_ids() []string { return v.Surgery_ids }

// GetSymptoms returns __CreateAnteDiseaseInput.Symptoms, and is useful for accessing the field via an interface.
func (v *__CreateAnteDiseaseInput) GetSymptoms() []string { return v.Symptoms }

// GetTreatment_ids returns __CreateAnteDiseaseInput.Treatment_ids, and is useful for accessing the field via an interface.
func (v *__CreateAnteDiseaseInput) GetTreatment_ids() []string { return v.Treatment_ids }

// GetStill_relevant returns __CreateAnteDiseaseInput.Still_relevant, and is useful for accessing the field via an interface.
func (v *__CreateAnteDiseaseInput) GetStill_relevant() bool { return v.Still_relevant }

// __CreateAnteFamilyInput is used internally by genqlient
type __CreateAnteFamilyInput struct {
	Name    string   `json:"name"`
	Disease []string `json:"disease"`
}

// GetName returns __CreateAnteFamilyInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateAnteFamilyInput) GetName() string { return v.Name }

// GetDisease returns __CreateAnteFamilyInput.Disease, and is useful for accessing the field via an interface.
func (v *__CreateAnteFamilyInput) GetDisease() []string { return v.Disease }

// __CreateBlackListInput is used internally by genqlient
type __CreateBlackListInput struct {
	Token []string `json:"token"`
}

// GetToken returns __CreateBlackListInput.Token, and is useful for accessing the field via an interface.
func (v *__CreateBlackListInput) GetToken() []string { return v.Token }

// __CreateChatInput is used internally by genqlient
type __CreateChatInput struct {
	Participants []ChatParticipantsInput `json:"participants"`
	Messages     []ChatMessagesInput     `json:"messages"`
}

// GetParticipants returns __CreateChatInput.Participants, and is useful for accessing the field via an interface.
func (v *__CreateChatInput) GetParticipants() []ChatParticipantsInput { return v.Participants }

// GetMessages returns __CreateChatInput.Messages, and is useful for accessing the field via an interface.
func (v *__CreateChatInput) GetMessages() []ChatMessagesInput { return v.Messages }

// __CreateDemoAccountInput is used internally by genqlient
type __CreateDemoAccountInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetEmail returns __CreateDemoAccountInput.Email, and is useful for accessing the field via an interface.
func (v *__CreateDemoAccountInput) GetEmail() string { return v.Email }

// GetPassword returns __CreateDemoAccountInput.Password, and is useful for accessing the field via an interface.
func (v *__CreateDemoAccountInput) GetPassword() string { return v.Password }

// __CreateDeviceConnectInput is used internally by genqlient
type __CreateDeviceConnectInput struct {
	Device_name  string  `json:"device_name"`
	Ip_address   string  `json:"ip_address"`
	Latitude     float64 `json:"latitude"`
	Longitude    float64 `json:"longitude"`
	Date         int     `json:"date"`
	Trust_device bool    `json:"trust_device"`
}

// GetDevice_name returns __CreateDeviceConnectInput.Device_name, and is useful for accessing the field via an interface.
func (v *__CreateDeviceConnectInput) GetDevice_name() string { return v.Device_name }

// GetIp_address returns __CreateDeviceConnectInput.Ip_address, and is useful for accessing the field via an interface.
func (v *__CreateDeviceConnectInput) GetIp_address() string { return v.Ip_address }

// GetLatitude returns __CreateDeviceConnectInput.Latitude, and is useful for accessing the field via an interface.
func (v *__CreateDeviceConnectInput) GetLatitude() float64 { return v.Latitude }

// GetLongitude returns __CreateDeviceConnectInput.Longitude, and is useful for accessing the field via an interface.
func (v *__CreateDeviceConnectInput) GetLongitude() float64 { return v.Longitude }

// GetDate returns __CreateDeviceConnectInput.Date, and is useful for accessing the field via an interface.
func (v *__CreateDeviceConnectInput) GetDate() int { return v.Date }

// GetTrust_device returns __CreateDeviceConnectInput.Trust_device, and is useful for accessing the field via an interface.
func (v *__CreateDeviceConnectInput) GetTrust_device() bool { return v.Trust_device }

// __CreateDiseaseInput is used internally by genqlient
type __CreateDiseaseInput struct {
	Code              string                `json:"code"`
	Name              string                `json:"name"`
	Symptoms          []string              `json:"symptoms"`
	Symptoms_weight   []SymptomsWeightInput `json:"symptoms_weight"`
	Overweight_factor float64               `json:"overweight_factor"`
	Advice            string                `json:"advice"`
}

// GetCode returns __CreateDiseaseInput.Code, and is useful for accessing the field via an interface.
func (v *__CreateDiseaseInput) GetCode() string { return v.Code }

// GetName returns __CreateDiseaseInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateDiseaseInput) GetName() string { return v.Name }

// GetSymptoms returns __CreateDiseaseInput.Symptoms, and is useful for accessing the field via an interface.
func (v *__CreateDiseaseInput) GetSymptoms() []string { return v.Symptoms }

// GetSymptoms_weight returns __CreateDiseaseInput.Symptoms_weight, and is useful for accessing the field via an interface.
func (v *__CreateDiseaseInput) GetSymptoms_weight() []SymptomsWeightInput { return v.Symptoms_weight }

// GetOverweight_factor returns __CreateDiseaseInput.Overweight_factor, and is useful for accessing the field via an interface.
func (v *__CreateDiseaseInput) GetOverweight_factor() float64 { return v.Overweight_factor }

// GetAdvice returns __CreateDiseaseInput.Advice, and is useful for accessing the field via an interface.
func (v *__CreateDiseaseInput) GetAdvice() string { return v.Advice }

// __CreateDoctorInput is used internally by genqlient
type __CreateDoctorInput struct {
	Email     string       `json:"email"`
	Password  string       `json:"password"`
	Name      string       `json:"name"`
	Firstname string       `json:"firstname"`
	Address   AddressInput `json:"address"`
}

// GetEmail returns __CreateDoctorInput.Email, and is useful for accessing the field via an interface.
func (v *__CreateDoctorInput) GetEmail() string { return v.Email }

// GetPassword returns __CreateDoctorInput.Password, and is useful for accessing the field via an interface.
func (v *__CreateDoctorInput) GetPassword() string { return v.Password }

// GetName returns __CreateDoctorInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateDoctorInput) GetName() string { return v.Name }

// GetFirstname returns __CreateDoctorInput.Firstname, and is useful for accessing the field via an interface.
func (v *__CreateDoctorInput) GetFirstname() string { return v.Firstname }

// GetAddress returns __CreateDoctorInput.Address, and is useful for accessing the field via an interface.
func (v *__CreateDoctorInput) GetAddress() AddressInput { return v.Address }

// __CreateDocumentInput is used internally by genqlient
type __CreateDocumentInput struct {
	Owner_id      string `json:"owner_id"`
	Name          string `json:"name"`
	Document_type string `json:"document_type"`
	Category      string `json:"category"`
	Is_favorite   bool   `json:"is_favorite"`
	Download_url  string `json:"download_url"`
}

// GetOwner_id returns __CreateDocumentInput.Owner_id, and is useful for accessing the field via an interface.
func (v *__CreateDocumentInput) GetOwner_id() string { return v.Owner_id }

// GetName returns __CreateDocumentInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateDocumentInput) GetName() string { return v.Name }

// GetDocument_type returns __CreateDocumentInput.Document_type, and is useful for accessing the field via an interface.
func (v *__CreateDocumentInput) GetDocument_type() string { return v.Document_type }

// GetCategory returns __CreateDocumentInput.Category, and is useful for accessing the field via an interface.
func (v *__CreateDocumentInput) GetCategory() string { return v.Category }

// GetIs_favorite returns __CreateDocumentInput.Is_favorite, and is useful for accessing the field via an interface.
func (v *__CreateDocumentInput) GetIs_favorite() bool { return v.Is_favorite }

// GetDownload_url returns __CreateDocumentInput.Download_url, and is useful for accessing the field via an interface.
func (v *__CreateDocumentInput) GetDownload_url() string { return v.Download_url }

// __CreateDoubleAuthInput is used internally by genqlient
type __CreateDoubleAuthInput struct {
	Methods         []string `json:"methods"`
	Secret          string   `json:"secret"`
	Url             string   `json:"url"`
	Trust_device_id string   `json:"trust_device_id"`
}

// GetMethods returns __CreateDoubleAuthInput.Methods, and is useful for accessing the field via an interface.
func (v *__CreateDoubleAuthInput) GetMethods() []string { return v.Methods }

// GetSecret returns __CreateDoubleAuthInput.Secret, and is useful for accessing the field via an interface.
func (v *__CreateDoubleAuthInput) GetSecret() string { return v.Secret }

// GetUrl returns __CreateDoubleAuthInput.Url, and is useful for accessing the field via an interface.
func (v *__CreateDoubleAuthInput) GetUrl() string { return v.Url }

// GetTrust_device_id returns __CreateDoubleAuthInput.Trust_device_id, and is useful for accessing the field via an interface.
func (v *__CreateDoubleAuthInput) GetTrust_device_id() string { return v.Trust_device_id }

// __CreateMedicalFolderInput is used internally by genqlient
type __CreateMedicalFolderInput struct {
	Name                   string   `json:"name"`
	Firstname              string   `json:"firstname"`
	Birthdate              int      `json:"birthdate"`
	Sex                    string   `json:"sex"`
	Height                 int      `json:"height"`
	Weight                 int      `json:"weight"`
	Primary_doctor_id      string   `json:"primary_doctor_id"`
	Antecedent_disease_ids []string `json:"antecedent_disease_ids"`
	Onboarding_status      string   `json:"onboarding_status"`
}

// GetName returns __CreateMedicalFolderInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateMedicalFolderInput) GetName() string { return v.Name }

// GetFirstname returns __CreateMedicalFolderInput.Firstname, and is useful for accessing the field via an interface.
func (v *__CreateMedicalFolderInput) GetFirstname() string { return v.Firstname }

// GetBirthdate returns __CreateMedicalFolderInput.Birthdate, and is useful for accessing the field via an interface.
func (v *__CreateMedicalFolderInput) GetBirthdate() int { return v.Birthdate }

// GetSex returns __CreateMedicalFolderInput.Sex, and is useful for accessing the field via an interface.
func (v *__CreateMedicalFolderInput) GetSex() string { return v.Sex }

// GetHeight returns __CreateMedicalFolderInput.Height, and is useful for accessing the field via an interface.
func (v *__CreateMedicalFolderInput) GetHeight() int { return v.Height }

// GetWeight returns __CreateMedicalFolderInput.Weight, and is useful for accessing the field via an interface.
func (v *__CreateMedicalFolderInput) GetWeight() int { return v.Weight }

// GetPrimary_doctor_id returns __CreateMedicalFolderInput.Primary_doctor_id, and is useful for accessing the field via an interface.
func (v *__CreateMedicalFolderInput) GetPrimary_doctor_id() string { return v.Primary_doctor_id }

// GetAntecedent_disease_ids returns __CreateMedicalFolderInput.Antecedent_disease_ids, and is useful for accessing the field via an interface.
func (v *__CreateMedicalFolderInput) GetAntecedent_disease_ids() []string {
	return v.Antecedent_disease_ids
}

// GetOnboarding_status returns __CreateMedicalFolderInput.Onboarding_status, and is useful for accessing the field via an interface.
func (v *__CreateMedicalFolderInput) GetOnboarding_status() string { return v.Onboarding_status }

// __CreateMedicineInput is used internally by genqlient
type __CreateMedicineInput struct {
	Name             string   `json:"name"`
	Unit             string   `json:"unit"`
	Target_diseases  []string `json:"target_diseases"`
	Treated_symptoms []string `json:"treated_symptoms"`
	Side_effects     []string `json:"side_effects"`
}

// GetName returns __CreateMedicineInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateMedicineInput) GetName() string { return v.Name }

// GetUnit returns __CreateMedicineInput.Unit, and is useful for accessing the field via an interface.
func (v *__CreateMedicineInput) GetUnit() string { return v.Unit }

// GetTarget_diseases returns __CreateMedicineInput.Target_diseases, and is useful for accessing the field via an interface.
func (v *__CreateMedicineInput) GetTarget_diseases() []string { return v.Target_diseases }

// GetTreated_symptoms returns __CreateMedicineInput.Treated_symptoms, and is useful for accessing the field via an interface.
func (v *__CreateMedicineInput) GetTreated_symptoms() []string { return v.Treated_symptoms }

// GetSide_effects returns __CreateMedicineInput.Side_effects, and is useful for accessing the field via an interface.
func (v *__CreateMedicineInput) GetSide_effects() []string { return v.Side_effects }

// __CreateNotificationInput is used internally by genqlient
type __CreateNotificationInput struct {
	Token   string `json:"token"`
	Message string `json:"message"`
	Title   string `json:"title"`
}

// GetToken returns __CreateNotificationInput.Token, and is useful for accessing the field via an interface.
func (v *__CreateNotificationInput) GetToken() string { return v.Token }

// GetMessage returns __CreateNotificationInput.Message, and is useful for accessing the field via an interface.
func (v *__CreateNotificationInput) GetMessage() string { return v.Message }

// GetTitle returns __CreateNotificationInput.Title, and is useful for accessing the field via an interface.
func (v *__CreateNotificationInput) GetTitle() string { return v.Title }

// __CreatePatientInput is used internally by genqlient
type __CreatePatientInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetEmail returns __CreatePatientInput.Email, and is useful for accessing the field via an interface.
func (v *__CreatePatientInput) GetEmail() string { return v.Email }

// GetPassword returns __CreatePatientInput.Password, and is useful for accessing the field via an interface.
func (v *__CreatePatientInput) GetPassword() string { return v.Password }

// __CreateRdvInput is used internally by genqlient
type __CreateRdvInput struct {
	Id_patient         string            `json:"id_patient"`
	Doctor_id          string            `json:"doctor_id"`
	Start_date         int               `json:"start_date"`
	End_date           int               `json:"end_date"`
	Appointment_status AppointmentStatus `json:"appointment_status"`
	Session_id         string            `json:"session_id"`
}

// GetId_patient returns __CreateRdvInput.Id_patient, and is useful for accessing the field via an interface.
func (v *__CreateRdvInput) GetId_patient() string { return v.Id_patient }

// GetDoctor_id returns __CreateRdvInput.Doctor_id, and is useful for accessing the field via an interface.
func (v *__CreateRdvInput) GetDoctor_id() string { return v.Doctor_id }

// GetStart_date returns __CreateRdvInput.Start_date, and is useful for accessing the field via an interface.
func (v *__CreateRdvInput) GetStart_date() int { return v.Start_date }

// GetEnd_date returns __CreateRdvInput.End_date, and is useful for accessing the field via an interface.
func (v *__CreateRdvInput) GetEnd_date() int { return v.End_date }

// GetAppointment_status returns __CreateRdvInput.Appointment_status, and is useful for accessing the field via an interface.
func (v *__CreateRdvInput) GetAppointment_status() AppointmentStatus { return v.Appointment_status }

// GetSession_id returns __CreateRdvInput.Session_id, and is useful for accessing the field via an interface.
func (v *__CreateRdvInput) GetSession_id() string { return v.Session_id }

// __CreateSessionInput is used internally by genqlient
type __CreateSessionInput struct {
	Diseases      []SessionDiseasesInput `json:"diseases"`
	Symptoms      []SessionSymptomInput  `json:"symptoms"`
	Age           int                    `json:"age"`
	Height        int                    `json:"height"`
	Weight        int                    `json:"weight"`
	Sex           string                 `json:"sex"`
	Ante_chirs    []string               `json:"ante_chirs"`
	Ante_diseases []string               `json:"ante_diseases"`
	Medicine      []string               `json:"medicine"`
	Last_question string                 `json:"last_question"`
	Logs          []LogsInput            `json:"logs"`
	Alerts        []string               `json:"alerts"`
}

// GetDiseases returns __CreateSessionInput.Diseases, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetDiseases() []SessionDiseasesInput { return v.Diseases }

// GetSymptoms returns __CreateSessionInput.Symptoms, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetSymptoms() []SessionSymptomInput { return v.Symptoms }

// GetAge returns __CreateSessionInput.Age, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetAge() int { return v.Age }

// GetHeight returns __CreateSessionInput.Height, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetHeight() int { return v.Height }

// GetWeight returns __CreateSessionInput.Weight, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetWeight() int { return v.Weight }

// GetSex returns __CreateSessionInput.Sex, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetSex() string { return v.Sex }

// GetAnte_chirs returns __CreateSessionInput.Ante_chirs, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetAnte_chirs() []string { return v.Ante_chirs }

// GetAnte_diseases returns __CreateSessionInput.Ante_diseases, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetAnte_diseases() []string { return v.Ante_diseases }

// GetMedicine returns __CreateSessionInput.Medicine, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetMedicine() []string { return v.Medicine }

// GetLast_question returns __CreateSessionInput.Last_question, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetLast_question() string { return v.Last_question }

// GetLogs returns __CreateSessionInput.Logs, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetLogs() []LogsInput { return v.Logs }

// GetAlerts returns __CreateSessionInput.Alerts, and is useful for accessing the field via an interface.
func (v *__CreateSessionInput) GetAlerts() []string { return v.Alerts }

// __CreateSymptomInput is used internally by genqlient
type __CreateSymptomInput struct {
	Code              string   `json:"code"`
	Name              string   `json:"name"`
	Chronic           int      `json:"chronic"`
	Symptom           []string `json:"symptom"`
	Advice            string   `json:"advice"`
	Question          string   `json:"question"`
	Question_basic    string   `json:"question_basic"`
	Question_duration string   `json:"question_duration"`
	Question_ante     string   `json:"question_ante"`
}

// GetCode returns __CreateSymptomInput.Code, and is useful for accessing the field via an interface.
func (v *__CreateSymptomInput) GetCode() string { return v.Code }

// GetName returns __CreateSymptomInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateSymptomInput) GetName() string { return v.Name }

// GetChronic returns __CreateSymptomInput.Chronic, and is useful for accessing the field via an interface.
func (v *__CreateSymptomInput) GetChronic() int { return v.Chronic }

// GetSymptom returns __CreateSymptomInput.Symptom, and is useful for accessing the field via an interface.
func (v *__CreateSymptomInput) GetSymptom() []string { return v.Symptom }

// GetAdvice returns __CreateSymptomInput.Advice, and is useful for accessing the field via an interface.
func (v *__CreateSymptomInput) GetAdvice() string { return v.Advice }

// GetQuestion returns __CreateSymptomInput.Question, and is useful for accessing the field via an interface.
func (v *__CreateSymptomInput) GetQuestion() string { return v.Question }

// GetQuestion_basic returns __CreateSymptomInput.Question_basic, and is useful for accessing the field via an interface.
func (v *__CreateSymptomInput) GetQuestion_basic() string { return v.Question_basic }

// GetQuestion_duration returns __CreateSymptomInput.Question_duration, and is useful for accessing the field via an interface.
func (v *__CreateSymptomInput) GetQuestion_duration() string { return v.Question_duration }

// GetQuestion_ante returns __CreateSymptomInput.Question_ante, and is useful for accessing the field via an interface.
func (v *__CreateSymptomInput) GetQuestion_ante() string { return v.Question_ante }

// __CreateTestAccountInput is used internally by genqlient
type __CreateTestAccountInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetEmail returns __CreateTestAccountInput.Email, and is useful for accessing the field via an interface.
func (v *__CreateTestAccountInput) GetEmail() string { return v.Email }

// GetPassword returns __CreateTestAccountInput.Password, and is useful for accessing the field via an interface.
func (v *__CreateTestAccountInput) GetPassword() string { return v.Password }

// __CreateTreatmentInput is used internally by genqlient
type __CreateTreatmentInput struct {
	Periods     []Period `json:"periods"`
	Day         []Day    `json:"day"`
	Quantity    int      `json:"quantity"`
	Medicine_id string   `json:"medicine_id"`
}

// GetPeriods returns __CreateTreatmentInput.Periods, and is useful for accessing the field via an interface.
func (v *__CreateTreatmentInput) GetPeriods() []Period { return v.Periods }

// GetDay returns __CreateTreatmentInput.Day, and is useful for accessing the field via an interface.
func (v *__CreateTreatmentInput) GetDay() []Day { return v.Day }

// GetQuantity returns __CreateTreatmentInput.Quantity, and is useful for accessing the field via an interface.
func (v *__CreateTreatmentInput) GetQuantity() int { return v.Quantity }

// GetMedicine_id returns __CreateTreatmentInput.Medicine_id, and is useful for accessing the field via an interface.
func (v *__CreateTreatmentInput) GetMedicine_id() string { return v.Medicine_id }

// __CreateTreatmentsFollowUpInput is used internally by genqlient
type __CreateTreatmentsFollowUpInput struct {
	Treatment_id string   `json:"treatment_id"`
	Date         int      `json:"date"`
	Period       []Period `json:"period"`
}

// GetTreatment_id returns __CreateTreatmentsFollowUpInput.Treatment_id, and is useful for accessing the field via an interface.
func (v *__CreateTreatmentsFollowUpInput) GetTreatment_id() string { return v.Treatment_id }

// GetDate returns __CreateTreatmentsFollowUpInput.Date, and is useful for accessing the field via an interface.
func (v *__CreateTreatmentsFollowUpInput) GetDate() int { return v.Date }

// GetPeriod returns __CreateTreatmentsFollowUpInput.Period, and is useful for accessing the field via an interface.
func (v *__CreateTreatmentsFollowUpInput) GetPeriod() []Period { return v.Period }

// __DeleteAdminInput is used internally by genqlient
type __DeleteAdminInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteAdminInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteAdminInput) GetId() string { return v.Id }

// __DeleteAlertInput is used internally by genqlient
type __DeleteAlertInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteAlertInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteAlertInput) GetId() string { return v.Id }

// __DeleteAnteChirInput is used internally by genqlient
type __DeleteAnteChirInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteAnteChirInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteAnteChirInput) GetId() string { return v.Id }

// __DeleteAnteDiseaseInput is used internally by genqlient
type __DeleteAnteDiseaseInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteAnteDiseaseInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteAnteDiseaseInput) GetId() string { return v.Id }

// __DeleteAnteFamilyInput is used internally by genqlient
type __DeleteAnteFamilyInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteAnteFamilyInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteAnteFamilyInput) GetId() string { return v.Id }

// __DeleteBlackListInput is used internally by genqlient
type __DeleteBlackListInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteBlackListInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteBlackListInput) GetId() string { return v.Id }

// __DeleteChatInput is used internally by genqlient
type __DeleteChatInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteChatInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteChatInput) GetId() string { return v.Id }

// __DeleteDemoAccountInput is used internally by genqlient
type __DeleteDemoAccountInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteDemoAccountInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteDemoAccountInput) GetId() string { return v.Id }

// __DeleteDeviceConnectInput is used internally by genqlient
type __DeleteDeviceConnectInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteDeviceConnectInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteDeviceConnectInput) GetId() string { return v.Id }

// __DeleteDiseaseInput is used internally by genqlient
type __DeleteDiseaseInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteDiseaseInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteDiseaseInput) GetId() string { return v.Id }

// __DeleteDoctorInput is used internally by genqlient
type __DeleteDoctorInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteDoctorInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteDoctorInput) GetId() string { return v.Id }

// __DeleteDocumentInput is used internally by genqlient
type __DeleteDocumentInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteDocumentInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteDocumentInput) GetId() string { return v.Id }

// __DeleteDoubleAuthInput is used internally by genqlient
type __DeleteDoubleAuthInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteDoubleAuthInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteDoubleAuthInput) GetId() string { return v.Id }

// __DeleteMedicalFolderInput is used internally by genqlient
type __DeleteMedicalFolderInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteMedicalFolderInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteMedicalFolderInput) GetId() string { return v.Id }

// __DeleteMedicineInput is used internally by genqlient
type __DeleteMedicineInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteMedicineInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteMedicineInput) GetId() string { return v.Id }

// __DeleteNotificationInput is used internally by genqlient
type __DeleteNotificationInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteNotificationInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteNotificationInput) GetId() string { return v.Id }

// __DeletePatientInput is used internally by genqlient
type __DeletePatientInput struct {
	Id string `json:"id"`
}

// GetId returns __DeletePatientInput.Id, and is useful for accessing the field via an interface.
func (v *__DeletePatientInput) GetId() string { return v.Id }

// __DeleteRdvInput is used internally by genqlient
type __DeleteRdvInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteRdvInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteRdvInput) GetId() string { return v.Id }

// __DeleteSessionInput is used internally by genqlient
type __DeleteSessionInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteSessionInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteSessionInput) GetId() string { return v.Id }

// __DeleteSlotInput is used internally by genqlient
type __DeleteSlotInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteSlotInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteSlotInput) GetId() string { return v.Id }

// __DeleteSymptomInput is used internally by genqlient
type __DeleteSymptomInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteSymptomInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteSymptomInput) GetId() string { return v.Id }

// __DeleteTestAccountInput is used internally by genqlient
type __DeleteTestAccountInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteTestAccountInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteTestAccountInput) GetId() string { return v.Id }

// __DeleteTreatmentInput is used internally by genqlient
type __DeleteTreatmentInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteTreatmentInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteTreatmentInput) GetId() string { return v.Id }

// __DeleteTreatmentsFollowUpInput is used internally by genqlient
type __DeleteTreatmentsFollowUpInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteTreatmentsFollowUpInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteTreatmentsFollowUpInput) GetId() string { return v.Id }

// __GetAdminByEmailInput is used internally by genqlient
type __GetAdminByEmailInput struct {
	Email string `json:"email"`
}

// GetEmail returns __GetAdminByEmailInput.Email, and is useful for accessing the field via an interface.
func (v *__GetAdminByEmailInput) GetEmail() string { return v.Email }

// __GetAdminByIdInput is used internally by genqlient
type __GetAdminByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetAdminByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetAdminByIdInput) GetId() string { return v.Id }

// __GetAlertByIdInput is used internally by genqlient
type __GetAlertByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetAlertByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetAlertByIdInput) GetId() string { return v.Id }

// __GetAnteChirByIDInput is used internally by genqlient
type __GetAnteChirByIDInput struct {
	Id string `json:"id"`
}

// GetId returns __GetAnteChirByIDInput.Id, and is useful for accessing the field via an interface.
func (v *__GetAnteChirByIDInput) GetId() string { return v.Id }

// __GetAnteDiseaseByIDInput is used internally by genqlient
type __GetAnteDiseaseByIDInput struct {
	Id string `json:"id"`
}

// GetId returns __GetAnteDiseaseByIDInput.Id, and is useful for accessing the field via an interface.
func (v *__GetAnteDiseaseByIDInput) GetId() string { return v.Id }

// __GetAnteFamilyByIDInput is used internally by genqlient
type __GetAnteFamilyByIDInput struct {
	Id string `json:"id"`
}

// GetId returns __GetAnteFamilyByIDInput.Id, and is useful for accessing the field via an interface.
func (v *__GetAnteFamilyByIDInput) GetId() string { return v.Id }

// __GetBlackListByIdInput is used internally by genqlient
type __GetBlackListByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetBlackListByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetBlackListByIdInput) GetId() string { return v.Id }

// __GetChatByIdInput is used internally by genqlient
type __GetChatByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetChatByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetChatByIdInput) GetId() string { return v.Id }

// __GetChatsInput is used internally by genqlient
type __GetChatsInput struct {
	Id string `json:"id"`
}

// GetId returns __GetChatsInput.Id, and is useful for accessing the field via an interface.
func (v *__GetChatsInput) GetId() string { return v.Id }

// __GetDemoAccountByEmailInput is used internally by genqlient
type __GetDemoAccountByEmailInput struct {
	Email string `json:"email"`
}

// GetEmail returns __GetDemoAccountByEmailInput.Email, and is useful for accessing the field via an interface.
func (v *__GetDemoAccountByEmailInput) GetEmail() string { return v.Email }

// __GetDemoAccountByIdInput is used internally by genqlient
type __GetDemoAccountByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetDemoAccountByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetDemoAccountByIdInput) GetId() string { return v.Id }

// __GetDeviceConnectByIdInput is used internally by genqlient
type __GetDeviceConnectByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetDeviceConnectByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetDeviceConnectByIdInput) GetId() string { return v.Id }

// __GetDiseaseByIdInput is used internally by genqlient
type __GetDiseaseByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetDiseaseByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetDiseaseByIdInput) GetId() string { return v.Id }

// __GetDoctorByEmailInput is used internally by genqlient
type __GetDoctorByEmailInput struct {
	Email string `json:"email"`
}

// GetEmail returns __GetDoctorByEmailInput.Email, and is useful for accessing the field via an interface.
func (v *__GetDoctorByEmailInput) GetEmail() string { return v.Email }

// __GetDoctorByIdInput is used internally by genqlient
type __GetDoctorByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetDoctorByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetDoctorByIdInput) GetId() string { return v.Id }

// __GetDoctorRdvInput is used internally by genqlient
type __GetDoctorRdvInput struct {
	Doctor_id string `json:"doctor_id"`
}

// GetDoctor_id returns __GetDoctorRdvInput.Doctor_id, and is useful for accessing the field via an interface.
func (v *__GetDoctorRdvInput) GetDoctor_id() string { return v.Doctor_id }

// __GetDocumentByIdInput is used internally by genqlient
type __GetDocumentByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetDocumentByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetDocumentByIdInput) GetId() string { return v.Id }

// __GetDoubleAuthByIdInput is used internally by genqlient
type __GetDoubleAuthByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetDoubleAuthByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetDoubleAuthByIdInput) GetId() string { return v.Id }

// __GetMedicalFolderByIDInput is used internally by genqlient
type __GetMedicalFolderByIDInput struct {
	Id string `json:"id"`
}

// GetId returns __GetMedicalFolderByIDInput.Id, and is useful for accessing the field via an interface.
func (v *__GetMedicalFolderByIDInput) GetId() string { return v.Id }

// __GetMedicineByIDInput is used internally by genqlient
type __GetMedicineByIDInput struct {
	Id string `json:"id"`
}

// GetId returns __GetMedicineByIDInput.Id, and is useful for accessing the field via an interface.
func (v *__GetMedicineByIDInput) GetId() string { return v.Id }

// __GetNlpReportsByVersionInput is used internally by genqlient
type __GetNlpReportsByVersionInput struct {
	Version int `json:"version"`
}

// GetVersion returns __GetNlpReportsByVersionInput.Version, and is useful for accessing the field via an interface.
func (v *__GetNlpReportsByVersionInput) GetVersion() int { return v.Version }

// __GetNotificationByIdInput is used internally by genqlient
type __GetNotificationByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetNotificationByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetNotificationByIdInput) GetId() string { return v.Id }

// __GetPatientByEmailInput is used internally by genqlient
type __GetPatientByEmailInput struct {
	Email string `json:"email"`
}

// GetEmail returns __GetPatientByEmailInput.Email, and is useful for accessing the field via an interface.
func (v *__GetPatientByEmailInput) GetEmail() string { return v.Email }

// __GetPatientByIdInput is used internally by genqlient
type __GetPatientByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetPatientByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetPatientByIdInput) GetId() string { return v.Id }

// __GetPatientDocumentInput is used internally by genqlient
type __GetPatientDocumentInput struct {
	Id string `json:"id"`
}

// GetId returns __GetPatientDocumentInput.Id, and is useful for accessing the field via an interface.
func (v *__GetPatientDocumentInput) GetId() string { return v.Id }

// __GetPatientRdvInput is used internally by genqlient
type __GetPatientRdvInput struct {
	Id_patient string `json:"id_patient"`
}

// GetId_patient returns __GetPatientRdvInput.Id_patient, and is useful for accessing the field via an interface.
func (v *__GetPatientRdvInput) GetId_patient() string { return v.Id_patient }

// __GetPatientsFromDoctorByIdInput is used internally by genqlient
type __GetPatientsFromDoctorByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetPatientsFromDoctorByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetPatientsFromDoctorByIdInput) GetId() string { return v.Id }

// __GetRdvByIdInput is used internally by genqlient
type __GetRdvByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetRdvByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetRdvByIdInput) GetId() string { return v.Id }

// __GetSessionByIdInput is used internally by genqlient
type __GetSessionByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetSessionByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetSessionByIdInput) GetId() string { return v.Id }

// __GetSlotByIdInput is used internally by genqlient
type __GetSlotByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetSlotByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetSlotByIdInput) GetId() string { return v.Id }

// __GetSlotsInput is used internally by genqlient
type __GetSlotsInput struct {
	Id string `json:"id"`
}

// GetId returns __GetSlotsInput.Id, and is useful for accessing the field via an interface.
func (v *__GetSlotsInput) GetId() string { return v.Id }

// __GetSymptomByIdInput is used internally by genqlient
type __GetSymptomByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetSymptomByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetSymptomByIdInput) GetId() string { return v.Id }

// __GetTestAccountByEmailInput is used internally by genqlient
type __GetTestAccountByEmailInput struct {
	Email string `json:"email"`
}

// GetEmail returns __GetTestAccountByEmailInput.Email, and is useful for accessing the field via an interface.
func (v *__GetTestAccountByEmailInput) GetEmail() string { return v.Email }

// __GetTestAccountByIdInput is used internally by genqlient
type __GetTestAccountByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetTestAccountByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetTestAccountByIdInput) GetId() string { return v.Id }

// __GetTreatmentByIDInput is used internally by genqlient
type __GetTreatmentByIDInput struct {
	Id string `json:"id"`
}

// GetId returns __GetTreatmentByIDInput.Id, and is useful for accessing the field via an interface.
func (v *__GetTreatmentByIDInput) GetId() string { return v.Id }

// __GetTreatmentsFollowUpByIDInput is used internally by genqlient
type __GetTreatmentsFollowUpByIDInput struct {
	Id string `json:"id"`
}

// GetId returns __GetTreatmentsFollowUpByIDInput.Id, and is useful for accessing the field via an interface.
func (v *__GetTreatmentsFollowUpByIDInput) GetId() string { return v.Id }

// __GetTreatmentsFollowUpInput is used internally by genqlient
type __GetTreatmentsFollowUpInput struct {
	Id string `json:"id"`
}

// GetId returns __GetTreatmentsFollowUpInput.Id, and is useful for accessing the field via an interface.
func (v *__GetTreatmentsFollowUpInput) GetId() string { return v.Id }

// __GetWaitingRdvInput is used internally by genqlient
type __GetWaitingRdvInput struct {
	Doctor_id string `json:"doctor_id"`
}

// GetDoctor_id returns __GetWaitingRdvInput.Doctor_id, and is useful for accessing the field via an interface.
func (v *__GetWaitingRdvInput) GetDoctor_id() string { return v.Doctor_id }

// __UpdateAdminInput is used internally by genqlient
type __UpdateAdminInput struct {
	Id        string `json:"id"`
	Email     string `json:"email"`
	Password  string `json:"password"`
	Name      string `json:"name"`
	Last_name string `json:"last_name"`
}

// GetId returns __UpdateAdminInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateAdminInput) GetId() string { return v.Id }

// GetEmail returns __UpdateAdminInput.Email, and is useful for accessing the field via an interface.
func (v *__UpdateAdminInput) GetEmail() string { return v.Email }

// GetPassword returns __UpdateAdminInput.Password, and is useful for accessing the field via an interface.
func (v *__UpdateAdminInput) GetPassword() string { return v.Password }

// GetName returns __UpdateAdminInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateAdminInput) GetName() string { return v.Name }

// GetLast_name returns __UpdateAdminInput.Last_name, and is useful for accessing the field via an interface.
func (v *__UpdateAdminInput) GetLast_name() string { return v.Last_name }

// __UpdateAlertInput is used internally by genqlient
type __UpdateAlertInput struct {
	Id       string   `json:"id"`
	Name     string   `json:"name"`
	Sex      string   `json:"sex"`
	Height   int      `json:"height"`
	Weight   int      `json:"weight"`
	Symptoms []string `json:"symptoms"`
	Comment  string   `json:"comment"`
}

// GetId returns __UpdateAlertInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateAlertInput) GetId() string { return v.Id }

// GetName returns __UpdateAlertInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateAlertInput) GetName() string { return v.Name }

// GetSex returns __UpdateAlertInput.Sex, and is useful for accessing the field via an interface.
func (v *__UpdateAlertInput) GetSex() string { return v.Sex }

// GetHeight returns __UpdateAlertInput.Height, and is useful for accessing the field via an interface.
func (v *__UpdateAlertInput) GetHeight() int { return v.Height }

// GetWeight returns __UpdateAlertInput.Weight, and is useful for accessing the field via an interface.
func (v *__UpdateAlertInput) GetWeight() int { return v.Weight }

// GetSymptoms returns __UpdateAlertInput.Symptoms, and is useful for accessing the field via an interface.
func (v *__UpdateAlertInput) GetSymptoms() []string { return v.Symptoms }

// GetComment returns __UpdateAlertInput.Comment, and is useful for accessing the field via an interface.
func (v *__UpdateAlertInput) GetComment() string { return v.Comment }

// __UpdateAnteChirInput is used internally by genqlient
type __UpdateAnteChirInput struct {
	Id               string                    `json:"id"`
	Name             string                    `json:"name"`
	Induced_symptoms []ChirInducedSymptomInput `json:"induced_symptoms"`
}

// GetId returns __UpdateAnteChirInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateAnteChirInput) GetId() string { return v.Id }

// GetName returns __UpdateAnteChirInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateAnteChirInput) GetName() string { return v.Name }

// GetInduced_symptoms returns __UpdateAnteChirInput.Induced_symptoms, and is useful for accessing the field via an interface.
func (v *__UpdateAnteChirInput) GetInduced_symptoms() []ChirInducedSymptomInput {
	return v.Induced_symptoms
}

// __UpdateAnteDiseaseInput is used internally by genqlient
type __UpdateAnteDiseaseInput struct {
	Id             string   `json:"id"`
	Name           string   `json:"name"`
	Chronicity     float64  `json:"chronicity"`
	Surgery_ids    []string `json:"surgery_ids"`
	Symptoms       []string `json:"symptoms"`
	Treatment_ids  []string `json:"treatment_ids"`
	Still_relevant bool     `json:"still_relevant"`
}

// GetId returns __UpdateAnteDiseaseInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateAnteDiseaseInput) GetId() string { return v.Id }

// GetName returns __UpdateAnteDiseaseInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateAnteDiseaseInput) GetName() string { return v.Name }

// GetChronicity returns __UpdateAnteDiseaseInput.Chronicity, and is useful for accessing the field via an interface.
func (v *__UpdateAnteDiseaseInput) GetChronicity() float64 { return v.Chronicity }

// GetSurgery_ids returns __UpdateAnteDiseaseInput.Surgery_ids, and is useful for accessing the field via an interface.
func (v *__UpdateAnteDiseaseInput) GetSurgery_ids() []string { return v.Surgery_ids }

// GetSymptoms returns __UpdateAnteDiseaseInput.Symptoms, and is useful for accessing the field via an interface.
func (v *__UpdateAnteDiseaseInput) GetSymptoms() []string { return v.Symptoms }

// GetTreatment_ids returns __UpdateAnteDiseaseInput.Treatment_ids, and is useful for accessing the field via an interface.
func (v *__UpdateAnteDiseaseInput) GetTreatment_ids() []string { return v.Treatment_ids }

// GetStill_relevant returns __UpdateAnteDiseaseInput.Still_relevant, and is useful for accessing the field via an interface.
func (v *__UpdateAnteDiseaseInput) GetStill_relevant() bool { return v.Still_relevant }

// __UpdateAnteFamilyInput is used internally by genqlient
type __UpdateAnteFamilyInput struct {
	Id      string   `json:"id"`
	Name    string   `json:"name"`
	Disease []string `json:"disease"`
}

// GetId returns __UpdateAnteFamilyInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateAnteFamilyInput) GetId() string { return v.Id }

// GetName returns __UpdateAnteFamilyInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateAnteFamilyInput) GetName() string { return v.Name }

// GetDisease returns __UpdateAnteFamilyInput.Disease, and is useful for accessing the field via an interface.
func (v *__UpdateAnteFamilyInput) GetDisease() []string { return v.Disease }

// __UpdateBlackListInput is used internally by genqlient
type __UpdateBlackListInput struct {
	Id    string   `json:"id"`
	Token []string `json:"token"`
}

// GetId returns __UpdateBlackListInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateBlackListInput) GetId() string { return v.Id }

// GetToken returns __UpdateBlackListInput.Token, and is useful for accessing the field via an interface.
func (v *__UpdateBlackListInput) GetToken() []string { return v.Token }

// __UpdateChatInput is used internally by genqlient
type __UpdateChatInput struct {
	Id           string                  `json:"id"`
	Participants []ChatParticipantsInput `json:"participants"`
	Messages     []ChatMessagesInput     `json:"messages"`
}

// GetId returns __UpdateChatInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateChatInput) GetId() string { return v.Id }

// GetParticipants returns __UpdateChatInput.Participants, and is useful for accessing the field via an interface.
func (v *__UpdateChatInput) GetParticipants() []ChatParticipantsInput { return v.Participants }

// GetMessages returns __UpdateChatInput.Messages, and is useful for accessing the field via an interface.
func (v *__UpdateChatInput) GetMessages() []ChatMessagesInput { return v.Messages }

// __UpdateDemoAccountInput is used internally by genqlient
type __UpdateDemoAccountInput struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns __UpdateDemoAccountInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateDemoAccountInput) GetId() string { return v.Id }

// GetEmail returns __UpdateDemoAccountInput.Email, and is useful for accessing the field via an interface.
func (v *__UpdateDemoAccountInput) GetEmail() string { return v.Email }

// GetPassword returns __UpdateDemoAccountInput.Password, and is useful for accessing the field via an interface.
func (v *__UpdateDemoAccountInput) GetPassword() string { return v.Password }

// __UpdateDeviceConnectInput is used internally by genqlient
type __UpdateDeviceConnectInput struct {
	Id           string  `json:"id"`
	Device_name  string  `json:"device_name"`
	Ip_address   string  `json:"ip_address"`
	Latitude     float64 `json:"latitude"`
	Longitude    float64 `json:"longitude"`
	Date         int     `json:"date"`
	Trust_device bool    `json:"trust_device"`
}

// GetId returns __UpdateDeviceConnectInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateDeviceConnectInput) GetId() string { return v.Id }

// GetDevice_name returns __UpdateDeviceConnectInput.Device_name, and is useful for accessing the field via an interface.
func (v *__UpdateDeviceConnectInput) GetDevice_name() string { return v.Device_name }

// GetIp_address returns __UpdateDeviceConnectInput.Ip_address, and is useful for accessing the field via an interface.
func (v *__UpdateDeviceConnectInput) GetIp_address() string { return v.Ip_address }

// GetLatitude returns __UpdateDeviceConnectInput.Latitude, and is useful for accessing the field via an interface.
func (v *__UpdateDeviceConnectInput) GetLatitude() float64 { return v.Latitude }

// GetLongitude returns __UpdateDeviceConnectInput.Longitude, and is useful for accessing the field via an interface.
func (v *__UpdateDeviceConnectInput) GetLongitude() float64 { return v.Longitude }

// GetDate returns __UpdateDeviceConnectInput.Date, and is useful for accessing the field via an interface.
func (v *__UpdateDeviceConnectInput) GetDate() int { return v.Date }

// GetTrust_device returns __UpdateDeviceConnectInput.Trust_device, and is useful for accessing the field via an interface.
func (v *__UpdateDeviceConnectInput) GetTrust_device() bool { return v.Trust_device }

// __UpdateDiseaseInput is used internally by genqlient
type __UpdateDiseaseInput struct {
	Id                string                `json:"id"`
	Code              string                `json:"code"`
	Name              string                `json:"name"`
	Symptoms          []string              `json:"symptoms"`
	Symptoms_weight   []SymptomsWeightInput `json:"symptoms_weight"`
	Overweight_factor float64               `json:"overweight_factor"`
	Advice            string                `json:"advice"`
}

// GetId returns __UpdateDiseaseInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateDiseaseInput) GetId() string { return v.Id }

// GetCode returns __UpdateDiseaseInput.Code, and is useful for accessing the field via an interface.
func (v *__UpdateDiseaseInput) GetCode() string { return v.Code }

// GetName returns __UpdateDiseaseInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateDiseaseInput) GetName() string { return v.Name }

// GetSymptoms returns __UpdateDiseaseInput.Symptoms, and is useful for accessing the field via an interface.
func (v *__UpdateDiseaseInput) GetSymptoms() []string { return v.Symptoms }

// GetSymptoms_weight returns __UpdateDiseaseInput.Symptoms_weight, and is useful for accessing the field via an interface.
func (v *__UpdateDiseaseInput) GetSymptoms_weight() []SymptomsWeightInput { return v.Symptoms_weight }

// GetOverweight_factor returns __UpdateDiseaseInput.Overweight_factor, and is useful for accessing the field via an interface.
func (v *__UpdateDiseaseInput) GetOverweight_factor() float64 { return v.Overweight_factor }

// GetAdvice returns __UpdateDiseaseInput.Advice, and is useful for accessing the field via an interface.
func (v *__UpdateDiseaseInput) GetAdvice() string { return v.Advice }

// __UpdateDoctorInput is used internally by genqlient
type __UpdateDoctorInput struct {
	Id              string       `json:"id"`
	Email           string       `json:"email"`
	Password        string       `json:"password"`
	Name            string       `json:"name"`
	Firstname       string       `json:"firstname"`
	Rendez_vous_ids []string     `json:"rendez_vous_ids"`
	Patient_ids     []string     `json:"patient_ids"`
	Address         AddressInput `json:"address"`
	Chat_ids        []string     `json:"chat_ids"`
}

// GetId returns __UpdateDoctorInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateDoctorInput) GetId() string { return v.Id }

// GetEmail returns __UpdateDoctorInput.Email, and is useful for accessing the field via an interface.
func (v *__UpdateDoctorInput) GetEmail() string { return v.Email }

// GetPassword returns __UpdateDoctorInput.Password, and is useful for accessing the field via an interface.
func (v *__UpdateDoctorInput) GetPassword() string { return v.Password }

// GetName returns __UpdateDoctorInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateDoctorInput) GetName() string { return v.Name }

// GetFirstname returns __UpdateDoctorInput.Firstname, and is useful for accessing the field via an interface.
func (v *__UpdateDoctorInput) GetFirstname() string { return v.Firstname }

// GetRendez_vous_ids returns __UpdateDoctorInput.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *__UpdateDoctorInput) GetRendez_vous_ids() []string { return v.Rendez_vous_ids }

// GetPatient_ids returns __UpdateDoctorInput.Patient_ids, and is useful for accessing the field via an interface.
func (v *__UpdateDoctorInput) GetPatient_ids() []string { return v.Patient_ids }

// GetAddress returns __UpdateDoctorInput.Address, and is useful for accessing the field via an interface.
func (v *__UpdateDoctorInput) GetAddress() AddressInput { return v.Address }

// GetChat_ids returns __UpdateDoctorInput.Chat_ids, and is useful for accessing the field via an interface.
func (v *__UpdateDoctorInput) GetChat_ids() []string { return v.Chat_ids }

// __UpdateDocumentInput is used internally by genqlient
type __UpdateDocumentInput struct {
	Id          string `json:"id"`
	Name        string `json:"name"`
	Is_favorite bool   `json:"is_favorite"`
}

// GetId returns __UpdateDocumentInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateDocumentInput) GetId() string { return v.Id }

// GetName returns __UpdateDocumentInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateDocumentInput) GetName() string { return v.Name }

// GetIs_favorite returns __UpdateDocumentInput.Is_favorite, and is useful for accessing the field via an interface.
func (v *__UpdateDocumentInput) GetIs_favorite() bool { return v.Is_favorite }

// __UpdateDoubleAuthInput is used internally by genqlient
type __UpdateDoubleAuthInput struct {
	Id              string   `json:"id"`
	Methods         []string `json:"methods"`
	Secret          string   `json:"secret"`
	Url             string   `json:"url"`
	Trust_device_id string   `json:"trust_device_id"`
}

// GetId returns __UpdateDoubleAuthInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateDoubleAuthInput) GetId() string { return v.Id }

// GetMethods returns __UpdateDoubleAuthInput.Methods, and is useful for accessing the field via an interface.
func (v *__UpdateDoubleAuthInput) GetMethods() []string { return v.Methods }

// GetSecret returns __UpdateDoubleAuthInput.Secret, and is useful for accessing the field via an interface.
func (v *__UpdateDoubleAuthInput) GetSecret() string { return v.Secret }

// GetUrl returns __UpdateDoubleAuthInput.Url, and is useful for accessing the field via an interface.
func (v *__UpdateDoubleAuthInput) GetUrl() string { return v.Url }

// GetTrust_device_id returns __UpdateDoubleAuthInput.Trust_device_id, and is useful for accessing the field via an interface.
func (v *__UpdateDoubleAuthInput) GetTrust_device_id() string { return v.Trust_device_id }

// __UpdateMedicalFolderInput is used internally by genqlient
type __UpdateMedicalFolderInput struct {
	Id                     string           `json:"id"`
	Name                   string           `json:"name"`
	Firstname              string           `json:"firstname"`
	Birthdate              int              `json:"birthdate"`
	Sex                    string           `json:"sex"`
	Height                 int              `json:"height"`
	Weight                 int              `json:"weight"`
	Primary_doctor_id      string           `json:"primary_doctor_id"`
	Antecedent_disease_ids []string         `json:"antecedent_disease_ids"`
	Onboarding_status      OnboardingStatus `json:"onboarding_status"`
}

// GetId returns __UpdateMedicalFolderInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateMedicalFolderInput) GetId() string { return v.Id }

// GetName returns __UpdateMedicalFolderInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateMedicalFolderInput) GetName() string { return v.Name }

// GetFirstname returns __UpdateMedicalFolderInput.Firstname, and is useful for accessing the field via an interface.
func (v *__UpdateMedicalFolderInput) GetFirstname() string { return v.Firstname }

// GetBirthdate returns __UpdateMedicalFolderInput.Birthdate, and is useful for accessing the field via an interface.
func (v *__UpdateMedicalFolderInput) GetBirthdate() int { return v.Birthdate }

// GetSex returns __UpdateMedicalFolderInput.Sex, and is useful for accessing the field via an interface.
func (v *__UpdateMedicalFolderInput) GetSex() string { return v.Sex }

// GetHeight returns __UpdateMedicalFolderInput.Height, and is useful for accessing the field via an interface.
func (v *__UpdateMedicalFolderInput) GetHeight() int { return v.Height }

// GetWeight returns __UpdateMedicalFolderInput.Weight, and is useful for accessing the field via an interface.
func (v *__UpdateMedicalFolderInput) GetWeight() int { return v.Weight }

// GetPrimary_doctor_id returns __UpdateMedicalFolderInput.Primary_doctor_id, and is useful for accessing the field via an interface.
func (v *__UpdateMedicalFolderInput) GetPrimary_doctor_id() string { return v.Primary_doctor_id }

// GetAntecedent_disease_ids returns __UpdateMedicalFolderInput.Antecedent_disease_ids, and is useful for accessing the field via an interface.
func (v *__UpdateMedicalFolderInput) GetAntecedent_disease_ids() []string {
	return v.Antecedent_disease_ids
}

// GetOnboarding_status returns __UpdateMedicalFolderInput.Onboarding_status, and is useful for accessing the field via an interface.
func (v *__UpdateMedicalFolderInput) GetOnboarding_status() OnboardingStatus {
	return v.Onboarding_status
}

// __UpdateNotificationInput is used internally by genqlient
type __UpdateNotificationInput struct {
	Id      string `json:"id"`
	Token   string `json:"token"`
	Message string `json:"message"`
	Title   string `json:"title"`
}

// GetId returns __UpdateNotificationInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateNotificationInput) GetId() string { return v.Id }

// GetToken returns __UpdateNotificationInput.Token, and is useful for accessing the field via an interface.
func (v *__UpdateNotificationInput) GetToken() string { return v.Token }

// GetMessage returns __UpdateNotificationInput.Message, and is useful for accessing the field via an interface.
func (v *__UpdateNotificationInput) GetMessage() string { return v.Message }

// GetTitle returns __UpdateNotificationInput.Title, and is useful for accessing the field via an interface.
func (v *__UpdateNotificationInput) GetTitle() string { return v.Title }

// __UpdatePatientInput is used internally by genqlient
type __UpdatePatientInput struct {
	Id                      string   `json:"id"`
	Email                   string   `json:"email"`
	Password                string   `json:"password"`
	Medical_info_id         string   `json:"medical_info_id"`
	Rendez_vous_ids         []string `json:"rendez_vous_ids"`
	Document_ids            []string `json:"document_ids"`
	Treatment_follow_up_ids []string `json:"treatment_follow_up_ids"`
	Chat_ids                []string `json:"chat_ids"`
	Device_connect          []string `json:"device_connect"`
	Double_auth_methods_id  string   `json:"double_auth_methods_id"`
}

// GetId returns __UpdatePatientInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdatePatientInput) GetId() string { return v.Id }

// GetEmail returns __UpdatePatientInput.Email, and is useful for accessing the field via an interface.
func (v *__UpdatePatientInput) GetEmail() string { return v.Email }

// GetPassword returns __UpdatePatientInput.Password, and is useful for accessing the field via an interface.
func (v *__UpdatePatientInput) GetPassword() string { return v.Password }

// GetMedical_info_id returns __UpdatePatientInput.Medical_info_id, and is useful for accessing the field via an interface.
func (v *__UpdatePatientInput) GetMedical_info_id() string { return v.Medical_info_id }

// GetRendez_vous_ids returns __UpdatePatientInput.Rendez_vous_ids, and is useful for accessing the field via an interface.
func (v *__UpdatePatientInput) GetRendez_vous_ids() []string { return v.Rendez_vous_ids }

// GetDocument_ids returns __UpdatePatientInput.Document_ids, and is useful for accessing the field via an interface.
func (v *__UpdatePatientInput) GetDocument_ids() []string { return v.Document_ids }

// GetTreatment_follow_up_ids returns __UpdatePatientInput.Treatment_follow_up_ids, and is useful for accessing the field via an interface.
func (v *__UpdatePatientInput) GetTreatment_follow_up_ids() []string {
	return v.Treatment_follow_up_ids
}

// GetChat_ids returns __UpdatePatientInput.Chat_ids, and is useful for accessing the field via an interface.
func (v *__UpdatePatientInput) GetChat_ids() []string { return v.Chat_ids }

// GetDevice_connect returns __UpdatePatientInput.Device_connect, and is useful for accessing the field via an interface.
func (v *__UpdatePatientInput) GetDevice_connect() []string { return v.Device_connect }

// GetDouble_auth_methods_id returns __UpdatePatientInput.Double_auth_methods_id, and is useful for accessing the field via an interface.
func (v *__UpdatePatientInput) GetDouble_auth_methods_id() string { return v.Double_auth_methods_id }

// __UpdateRdvInput is used internally by genqlient
type __UpdateRdvInput struct {
	Id                 string            `json:"id"`
	Id_patient         string            `json:"id_patient"`
	Doctor_id          string            `json:"doctor_id"`
	Start_date         int               `json:"start_date"`
	End_date           int               `json:"end_date"`
	Cancelation_reason string            `json:"cancelation_reason"`
	Appointment_status AppointmentStatus `json:"appointment_status"`
	Session_id         string            `json:"session_id"`
	Health_method      string            `json:"health_method"`
}

// GetId returns __UpdateRdvInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateRdvInput) GetId() string { return v.Id }

// GetId_patient returns __UpdateRdvInput.Id_patient, and is useful for accessing the field via an interface.
func (v *__UpdateRdvInput) GetId_patient() string { return v.Id_patient }

// GetDoctor_id returns __UpdateRdvInput.Doctor_id, and is useful for accessing the field via an interface.
func (v *__UpdateRdvInput) GetDoctor_id() string { return v.Doctor_id }

// GetStart_date returns __UpdateRdvInput.Start_date, and is useful for accessing the field via an interface.
func (v *__UpdateRdvInput) GetStart_date() int { return v.Start_date }

// GetEnd_date returns __UpdateRdvInput.End_date, and is useful for accessing the field via an interface.
func (v *__UpdateRdvInput) GetEnd_date() int { return v.End_date }

// GetCancelation_reason returns __UpdateRdvInput.Cancelation_reason, and is useful for accessing the field via an interface.
func (v *__UpdateRdvInput) GetCancelation_reason() string { return v.Cancelation_reason }

// GetAppointment_status returns __UpdateRdvInput.Appointment_status, and is useful for accessing the field via an interface.
func (v *__UpdateRdvInput) GetAppointment_status() AppointmentStatus { return v.Appointment_status }

// GetSession_id returns __UpdateRdvInput.Session_id, and is useful for accessing the field via an interface.
func (v *__UpdateRdvInput) GetSession_id() string { return v.Session_id }

// GetHealth_method returns __UpdateRdvInput.Health_method, and is useful for accessing the field via an interface.
func (v *__UpdateRdvInput) GetHealth_method() string { return v.Health_method }

// __UpdateSessionInput is used internally by genqlient
type __UpdateSessionInput struct {
	Id            string                 `json:"id"`
	Diseases      []SessionDiseasesInput `json:"diseases"`
	Symptoms      []SessionSymptomInput  `json:"symptoms"`
	Age           int                    `json:"age"`
	Height        int                    `json:"height"`
	Weight        int                    `json:"weight"`
	Sex           string                 `json:"sex"`
	Ante_chirs    []string               `json:"ante_chirs"`
	Ante_diseases []string               `json:"ante_diseases"`
	Medicine      []string               `json:"medicine"`
	Last_question string                 `json:"last_question"`
	Logs          []LogsInput            `json:"logs"`
	Alerts        []string               `json:"alerts"`
}

// GetId returns __UpdateSessionInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetId() string { return v.Id }

// GetDiseases returns __UpdateSessionInput.Diseases, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetDiseases() []SessionDiseasesInput { return v.Diseases }

// GetSymptoms returns __UpdateSessionInput.Symptoms, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetSymptoms() []SessionSymptomInput { return v.Symptoms }

// GetAge returns __UpdateSessionInput.Age, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetAge() int { return v.Age }

// GetHeight returns __UpdateSessionInput.Height, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetHeight() int { return v.Height }

// GetWeight returns __UpdateSessionInput.Weight, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetWeight() int { return v.Weight }

// GetSex returns __UpdateSessionInput.Sex, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetSex() string { return v.Sex }

// GetAnte_chirs returns __UpdateSessionInput.Ante_chirs, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetAnte_chirs() []string { return v.Ante_chirs }

// GetAnte_diseases returns __UpdateSessionInput.Ante_diseases, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetAnte_diseases() []string { return v.Ante_diseases }

// GetMedicine returns __UpdateSessionInput.Medicine, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetMedicine() []string { return v.Medicine }

// GetLast_question returns __UpdateSessionInput.Last_question, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetLast_question() string { return v.Last_question }

// GetLogs returns __UpdateSessionInput.Logs, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetLogs() []LogsInput { return v.Logs }

// GetAlerts returns __UpdateSessionInput.Alerts, and is useful for accessing the field via an interface.
func (v *__UpdateSessionInput) GetAlerts() []string { return v.Alerts }

// __UpdateSymptomInput is used internally by genqlient
type __UpdateSymptomInput struct {
	Id                string   `json:"id"`
	Code              string   `json:"code"`
	Name              string   `json:"name"`
	Chronic           int      `json:"chronic"`
	Symptom           []string `json:"symptom"`
	Advice            string   `json:"advice"`
	Question          string   `json:"question"`
	Question_basic    string   `json:"question_basic"`
	Question_duration string   `json:"question_duration"`
	Question_ante     string   `json:"question_ante"`
}

// GetId returns __UpdateSymptomInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateSymptomInput) GetId() string { return v.Id }

// GetCode returns __UpdateSymptomInput.Code, and is useful for accessing the field via an interface.
func (v *__UpdateSymptomInput) GetCode() string { return v.Code }

// GetName returns __UpdateSymptomInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateSymptomInput) GetName() string { return v.Name }

// GetChronic returns __UpdateSymptomInput.Chronic, and is useful for accessing the field via an interface.
func (v *__UpdateSymptomInput) GetChronic() int { return v.Chronic }

// GetSymptom returns __UpdateSymptomInput.Symptom, and is useful for accessing the field via an interface.
func (v *__UpdateSymptomInput) GetSymptom() []string { return v.Symptom }

// GetAdvice returns __UpdateSymptomInput.Advice, and is useful for accessing the field via an interface.
func (v *__UpdateSymptomInput) GetAdvice() string { return v.Advice }

// GetQuestion returns __UpdateSymptomInput.Question, and is useful for accessing the field via an interface.
func (v *__UpdateSymptomInput) GetQuestion() string { return v.Question }

// GetQuestion_basic returns __UpdateSymptomInput.Question_basic, and is useful for accessing the field via an interface.
func (v *__UpdateSymptomInput) GetQuestion_basic() string { return v.Question_basic }

// GetQuestion_duration returns __UpdateSymptomInput.Question_duration, and is useful for accessing the field via an interface.
func (v *__UpdateSymptomInput) GetQuestion_duration() string { return v.Question_duration }

// GetQuestion_ante returns __UpdateSymptomInput.Question_ante, and is useful for accessing the field via an interface.
func (v *__UpdateSymptomInput) GetQuestion_ante() string { return v.Question_ante }

// __UpdateTestAccountInput is used internally by genqlient
type __UpdateTestAccountInput struct {
	Id       string `json:"id"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetId returns __UpdateTestAccountInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateTestAccountInput) GetId() string { return v.Id }

// GetEmail returns __UpdateTestAccountInput.Email, and is useful for accessing the field via an interface.
func (v *__UpdateTestAccountInput) GetEmail() string { return v.Email }

// GetPassword returns __UpdateTestAccountInput.Password, and is useful for accessing the field via an interface.
func (v *__UpdateTestAccountInput) GetPassword() string { return v.Password }

// __UpdateTreatmentInput is used internally by genqlient
type __UpdateTreatmentInput struct {
	Id          string   `json:"id"`
	Period      []Period `json:"period"`
	Day         []Day    `json:"day"`
	Quantity    int      `json:"quantity"`
	Medicine_id string   `json:"medicine_id"`
}

// GetId returns __UpdateTreatmentInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateTreatmentInput) GetId() string { return v.Id }

// GetPeriod returns __UpdateTreatmentInput.Period, and is useful for accessing the field via an interface.
func (v *__UpdateTreatmentInput) GetPeriod() []Period { return v.Period }

// GetDay returns __UpdateTreatmentInput.Day, and is useful for accessing the field via an interface.
func (v *__UpdateTreatmentInput) GetDay() []Day { return v.Day }

// GetQuantity returns __UpdateTreatmentInput.Quantity, and is useful for accessing the field via an interface.
func (v *__UpdateTreatmentInput) GetQuantity() int { return v.Quantity }

// GetMedicine_id returns __UpdateTreatmentInput.Medicine_id, and is useful for accessing the field via an interface.
func (v *__UpdateTreatmentInput) GetMedicine_id() string { return v.Medicine_id }

// __UpdateTreatmentsFollowUpInput is used internally by genqlient
type __UpdateTreatmentsFollowUpInput struct {
	Id           string   `json:"id"`
	Treatment_id string   `json:"treatment_id"`
	Date         int      `json:"date"`
	Period       []Period `json:"period"`
}

// GetId returns __UpdateTreatmentsFollowUpInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateTreatmentsFollowUpInput) GetId() string { return v.Id }

// GetTreatment_id returns __UpdateTreatmentsFollowUpInput.Treatment_id, and is useful for accessing the field via an interface.
func (v *__UpdateTreatmentsFollowUpInput) GetTreatment_id() string { return v.Treatment_id }

// GetDate returns __UpdateTreatmentsFollowUpInput.Date, and is useful for accessing the field via an interface.
func (v *__UpdateTreatmentsFollowUpInput) GetDate() int { return v.Date }

// GetPeriod returns __UpdateTreatmentsFollowUpInput.Period, and is useful for accessing the field via an interface.
func (v *__UpdateTreatmentsFollowUpInput) GetPeriod() []Period { return v.Period }

// __createNlpReportInput is used internally by genqlient
type __createNlpReportInput struct {
	Version          int                    `json:"version"`
	Input_symptoms   []string               `json:"input_symptoms"`
	Input_sentence   string                 `json:"input_sentence"`
	Output           []NlpReportOutputInput `json:"output"`
	Computation_time int                    `json:"computation_time"`
}

// GetVersion returns __createNlpReportInput.Version, and is useful for accessing the field via an interface.
func (v *__createNlpReportInput) GetVersion() int { return v.Version }

// GetInput_symptoms returns __createNlpReportInput.Input_symptoms, and is useful for accessing the field via an interface.
func (v *__createNlpReportInput) GetInput_symptoms() []string { return v.Input_symptoms }

// GetInput_sentence returns __createNlpReportInput.Input_sentence, and is useful for accessing the field via an interface.
func (v *__createNlpReportInput) GetInput_sentence() string { return v.Input_sentence }

// GetOutput returns __createNlpReportInput.Output, and is useful for accessing the field via an interface.
func (v *__createNlpReportInput) GetOutput() []NlpReportOutputInput { return v.Output }

// GetComputation_time returns __createNlpReportInput.Computation_time, and is useful for accessing the field via an interface.
func (v *__createNlpReportInput) GetComputation_time() int { return v.Computation_time }

// createNlpReportCreateNlpReport includes the requested fields of the GraphQL type NlpReport.
type createNlpReportCreateNlpReport struct {
	Id               string                                 `json:"id"`
	Version          int                                    `json:"version"`
	Input_symptoms   []string                               `json:"input_symptoms"`
	Input_sentence   string                                 `json:"input_sentence"`
	Output           []createNlpReportCreateNlpReportOutput `json:"output"`
	Computation_time int                                    `json:"computation_time"`
}

// GetId returns createNlpReportCreateNlpReport.Id, and is useful for accessing the field via an interface.
func (v *createNlpReportCreateNlpReport) GetId() string { return v.Id }

// GetVersion returns createNlpReportCreateNlpReport.Version, and is useful for accessing the field via an interface.
func (v *createNlpReportCreateNlpReport) GetVersion() int { return v.Version }

// GetInput_symptoms returns createNlpReportCreateNlpReport.Input_symptoms, and is useful for accessing the field via an interface.
func (v *createNlpReportCreateNlpReport) GetInput_symptoms() []string { return v.Input_symptoms }

// GetInput_sentence returns createNlpReportCreateNlpReport.Input_sentence, and is useful for accessing the field via an interface.
func (v *createNlpReportCreateNlpReport) GetInput_sentence() string { return v.Input_sentence }

// GetOutput returns createNlpReportCreateNlpReport.Output, and is useful for accessing the field via an interface.
func (v *createNlpReportCreateNlpReport) GetOutput() []createNlpReportCreateNlpReportOutput {
	return v.Output
}

// GetComputation_time returns createNlpReportCreateNlpReport.Computation_time, and is useful for accessing the field via an interface.
func (v *createNlpReportCreateNlpReport) GetComputation_time() int { return v.Computation_time }

// createNlpReportCreateNlpReportOutput includes the requested fields of the GraphQL type NlpReportOutput.
type createNlpReportCreateNlpReportOutput struct {
	Symptom string `json:"symptom"`
	Present bool   `json:"present"`
}

// GetSymptom returns createNlpReportCreateNlpReportOutput.Symptom, and is useful for accessing the field via an interface.
func (v *createNlpReportCreateNlpReportOutput) GetSymptom() string { return v.Symptom }

// GetPresent returns createNlpReportCreateNlpReportOutput.Present, and is useful for accessing the field via an interface.
func (v *createNlpReportCreateNlpReportOutput) GetPresent() bool { return v.Present }

// createNlpReportResponse is returned by createNlpReport on success.
type createNlpReportResponse struct {
	CreateNlpReport createNlpReportCreateNlpReport `json:"createNlpReport"`
}

// GetCreateNlpReport returns createNlpReportResponse.CreateNlpReport, and is useful for accessing the field via an interface.
func (v *createNlpReportResponse) GetCreateNlpReport() createNlpReportCreateNlpReport {
	return v.CreateNlpReport
}

// The query or mutation executed by CreateAdmin.
const CreateAdmin_Operation = `
mutation CreateAdmin ($email: String!, $password: String!, $name: String!, $last_name: String!) {
	createAdmin(email: $email, password: $password, name: $name, last_name: $last_name) {
		id
		email
		password
		name
		last_name
	}
}
`

func CreateAdmin(
	ctx context.Context,
	client graphql.Client,
	email string,
	password string,
	name string,
	last_name string,
) (*CreateAdminResponse, error) {
	req := &graphql.Request{
		OpName: "CreateAdmin",
		Query:  CreateAdmin_Operation,
		Variables: &__CreateAdminInput{
			Email:     email,
			Password:  password,
			Name:      name,
			Last_name: last_name,
		},
	}
	var err error

	var data CreateAdminResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateAlert.
const CreateAlert_Operation = `
mutation CreateAlert ($name: String!, $sex: String, $height: Int, $weight: Int, $symptoms: [String!]!, $comment: String!) {
	createAlert(name: $name, sex: $sex, height: $height, weight: $weight, symptoms: $symptoms, comment: $comment) {
		id
		name
		sex
		height
		weight
		symptoms
		comment
	}
}
`

func CreateAlert(
	ctx context.Context,
	client graphql.Client,
	name string,
	sex string,
	height int,
	weight int,
	symptoms []string,
	comment string,
) (*CreateAlertResponse, error) {
	req := &graphql.Request{
		OpName: "CreateAlert",
		Query:  CreateAlert_Operation,
		Variables: &__CreateAlertInput{
			Name:     name,
			Sex:      sex,
			Height:   height,
			Weight:   weight,
			Symptoms: symptoms,
			Comment:  comment,
		},
	}
	var err error

	var data CreateAlertResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateAnteChir.
const CreateAnteChir_Operation = `
mutation CreateAnteChir ($name: String!, $induced_symptoms: [ChirInducedSymptomInput!]) {
	createAnteChir(name: $name, induced_symptoms: $induced_symptoms) {
		id
		name
		induced_symptoms {
			symptom
			factor
		}
	}
}
`

func CreateAnteChir(
	ctx context.Context,
	client graphql.Client,
	name string,
	induced_symptoms []ChirInducedSymptomInput,
) (*CreateAnteChirResponse, error) {
	req := &graphql.Request{
		OpName: "CreateAnteChir",
		Query:  CreateAnteChir_Operation,
		Variables: &__CreateAnteChirInput{
			Name:             name,
			Induced_symptoms: induced_symptoms,
		},
	}
	var err error

	var data CreateAnteChirResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateAnteDisease.
const CreateAnteDisease_Operation = `
mutation CreateAnteDisease ($name: String!, $chronicity: Float!, $surgery_ids: [String!], $symptoms: [String!], $treatment_ids: [String!], $still_relevant: Boolean!) {
	createAnteDisease(name: $name, chronicity: $chronicity, surgery_ids: $surgery_ids, symptoms: $symptoms, treatment_ids: $treatment_ids, still_relevant: $still_relevant) {
		id
		name
		chronicity
		surgery_ids
		symptoms
		treatment_ids
		still_relevant
	}
}
`

func CreateAnteDisease(
	ctx context.Context,
	client graphql.Client,
	name string,
	chronicity float64,
	surgery_ids []string,
	symptoms []string,
	treatment_ids []string,
	still_relevant bool,
) (*CreateAnteDiseaseResponse, error) {
	req := &graphql.Request{
		OpName: "CreateAnteDisease",
		Query:  CreateAnteDisease_Operation,
		Variables: &__CreateAnteDiseaseInput{
			Name:           name,
			Chronicity:     chronicity,
			Surgery_ids:    surgery_ids,
			Symptoms:       symptoms,
			Treatment_ids:  treatment_ids,
			Still_relevant: still_relevant,
		},
	}
	var err error

	var data CreateAnteDiseaseResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateAnteFamily.
const CreateAnteFamily_Operation = `
mutation CreateAnteFamily ($name: String!, $disease: [String!]!) {
	createAnteFamily(name: $name, disease: $disease) {
		id
		name
		disease
	}
}
`

func CreateAnteFamily(
	ctx context.Context,
	client graphql.Client,
	name string,
	disease []string,
) (*CreateAnteFamilyResponse, error) {
	req := &graphql.Request{
		OpName: "CreateAnteFamily",
		Query:  CreateAnteFamily_Operation,
		Variables: &__CreateAnteFamilyInput{
			Name:    name,
			Disease: disease,
		},
	}
	var err error

	var data CreateAnteFamilyResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateBlackList.
const CreateBlackList_Operation = `
mutation CreateBlackList ($token: [String!]!) {
	createBlackList(token: $token) {
		id
		token
	}
}
`

func CreateBlackList(
	ctx context.Context,
	client graphql.Client,
	token []string,
) (*CreateBlackListResponse, error) {
	req := &graphql.Request{
		OpName: "CreateBlackList",
		Query:  CreateBlackList_Operation,
		Variables: &__CreateBlackListInput{
			Token: token,
		},
	}
	var err error

	var data CreateBlackListResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateChat.
const CreateChat_Operation = `
mutation CreateChat ($participants: [ChatParticipantsInput!]!, $messages: [ChatMessagesInput!]!) {
	createChat(participants: $participants, messages: $messages) {
		id
		participants {
			participant_id
			last_seen
		}
		messages {
			owner_id
			message
			sended_time
		}
	}
}
`

func CreateChat(
	ctx context.Context,
	client graphql.Client,
	participants []ChatParticipantsInput,
	messages []ChatMessagesInput,
) (*CreateChatResponse, error) {
	req := &graphql.Request{
		OpName: "CreateChat",
		Query:  CreateChat_Operation,
		Variables: &__CreateChatInput{
			Participants: participants,
			Messages:     messages,
		},
	}
	var err error

	var data CreateChatResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateDemoAccount.
const CreateDemoAccount_Operation = `
mutation CreateDemoAccount ($email: String!, $password: String!) {
	createDemoAccount(email: $email, password: $password) {
		id
		email
		password
	}
}
`

func CreateDemoAccount(
	ctx context.Context,
	client graphql.Client,
	email string,
	password string,
) (*CreateDemoAccountResponse, error) {
	req := &graphql.Request{
		OpName: "CreateDemoAccount",
		Query:  CreateDemoAccount_Operation,
		Variables: &__CreateDemoAccountInput{
			Email:    email,
			Password: password,
		},
	}
	var err error

	var data CreateDemoAccountResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateDeviceConnect.
const CreateDeviceConnect_Operation = `
mutation CreateDeviceConnect ($device_name: String!, $ip_address: String!, $latitude: Float!, $longitude: Float!, $date: Int!, $trust_device: Boolean!) {
	createDeviceConnect(device_name: $device_name, ip_address: $ip_address, latitude: $latitude, longitude: $longitude, date: $date, trust_device: $trust_device) {
		id
		device_name
		ip_address
		latitude
		longitude
		date
		trust_device
	}
}
`

func CreateDeviceConnect(
	ctx context.Context,
	client graphql.Client,
	device_name string,
	ip_address string,
	latitude float64,
	longitude float64,
	date int,
	trust_device bool,
) (*CreateDeviceConnectResponse, error) {
	req := &graphql.Request{
		OpName: "CreateDeviceConnect",
		Query:  CreateDeviceConnect_Operation,
		Variables: &__CreateDeviceConnectInput{
			Device_name:  device_name,
			Ip_address:   ip_address,
			Latitude:     latitude,
			Longitude:    longitude,
			Date:         date,
			Trust_device: trust_device,
		},
	}
	var err error

	var data CreateDeviceConnectResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateDisease.
const CreateDisease_Operation = `
mutation CreateDisease ($code: String!, $name: String!, $symptoms: [String!]!, $symptoms_weight: [SymptomsWeightInput!], $overweight_factor: Float!, $advice: String) {
	createDisease(code: $code, name: $name, symptoms: $symptoms, symptoms_weight: $symptoms_weight, overweight_factor: $overweight_factor, advice: $advice) {
		id
		code
		name
		symptoms
		symptoms_weight {
			symptom
			value
			chronic
		}
		overweight_factor
		advice
	}
}
`

func CreateDisease(
	ctx context.Context,
	client graphql.Client,
	code string,
	name string,
	symptoms []string,
	symptoms_weight []SymptomsWeightInput,
	overweight_factor float64,
	advice string,
) (*CreateDiseaseResponse, error) {
	req := &graphql.Request{
		OpName: "CreateDisease",
		Query:  CreateDisease_Operation,
		Variables: &__CreateDiseaseInput{
			Code:              code,
			Name:              name,
			Symptoms:          symptoms,
			Symptoms_weight:   symptoms_weight,
			Overweight_factor: overweight_factor,
			Advice:            advice,
		},
	}
	var err error

	var data CreateDiseaseResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateDoctor.
const CreateDoctor_Operation = `
mutation CreateDoctor ($email: String!, $password: String!, $name: String!, $firstname: String!, $address: AddressInput!) {
	createDoctor(email: $email, password: $password, name: $name, firstname: $firstname, address: $address) {
		id
		email
		password
		name
		firstname
		address {
			street
			zip_code
			country
		}
		rendez_vous_ids
		patient_ids
		chat_ids
	}
}
`

func CreateDoctor(
	ctx context.Context,
	client graphql.Client,
	email string,
	password string,
	name string,
	firstname string,
	address AddressInput,
) (*CreateDoctorResponse, error) {
	req := &graphql.Request{
		OpName: "CreateDoctor",
		Query:  CreateDoctor_Operation,
		Variables: &__CreateDoctorInput{
			Email:     email,
			Password:  password,
			Name:      name,
			Firstname: firstname,
			Address:   address,
		},
	}
	var err error

	var data CreateDoctorResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateDocument.
const CreateDocument_Operation = `
mutation CreateDocument ($owner_id: String!, $name: String!, $document_type: String!, $category: String!, $is_favorite: Boolean!, $download_url: String!) {
	createDocument(owner_id: $owner_id, name: $name, document_type: $document_type, category: $category, is_favorite: $is_favorite, download_url: $download_url) {
		id
		owner_id
		name
		document_type
		category
		is_favorite
		download_url
	}
}
`

func CreateDocument(
	ctx context.Context,
	client graphql.Client,
	owner_id string,
	name string,
	document_type string,
	category string,
	is_favorite bool,
	download_url string,
) (*CreateDocumentResponse, error) {
	req := &graphql.Request{
		OpName: "CreateDocument",
		Query:  CreateDocument_Operation,
		Variables: &__CreateDocumentInput{
			Owner_id:      owner_id,
			Name:          name,
			Document_type: document_type,
			Category:      category,
			Is_favorite:   is_favorite,
			Download_url:  download_url,
		},
	}
	var err error

	var data CreateDocumentResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateDoubleAuth.
const CreateDoubleAuth_Operation = `
mutation CreateDoubleAuth ($methods: [String!]!, $secret: String!, $url: String!, $trust_device_id: String!) {
	createDoubleAuth(methods: $methods, secret: $secret, url: $url, trust_device_id: $trust_device_id) {
		id
		methods
		secret
		url
		trust_device_id
	}
}
`

func CreateDoubleAuth(
	ctx context.Context,
	client graphql.Client,
	methods []string,
	secret string,
	url string,
	trust_device_id string,
) (*CreateDoubleAuthResponse, error) {
	req := &graphql.Request{
		OpName: "CreateDoubleAuth",
		Query:  CreateDoubleAuth_Operation,
		Variables: &__CreateDoubleAuthInput{
			Methods:         methods,
			Secret:          secret,
			Url:             url,
			Trust_device_id: trust_device_id,
		},
	}
	var err error

	var data CreateDoubleAuthResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateMedicalFolder.
const CreateMedicalFolder_Operation = `
mutation CreateMedicalFolder ($name: String!, $firstname: String!, $birthdate: Int!, $sex: String!, $height: Int!, $weight: Int!, $primary_doctor_id: String!, $antecedent_disease_ids: [String!]!, $onboarding_status: String!) {
	createMedicalFolder(name: $name, firstname: $firstname, birthdate: $birthdate, sex: $sex, height: $height, weight: $weight, primary_doctor_id: $primary_doctor_id, antecedent_disease_ids: $antecedent_disease_ids, onboarding_status: $onboarding_status) {
		id
		name
		firstname
		birthdate
		sex
		height
		weight
		primary_doctor_id
		antecedent_disease_ids
		onboarding_status
	}
}
`

func CreateMedicalFolder(
	ctx context.Context,
	client graphql.Client,
	name string,
	firstname string,
	birthdate int,
	sex string,
	height int,
	weight int,
	primary_doctor_id string,
	antecedent_disease_ids []string,
	onboarding_status string,
) (*CreateMedicalFolderResponse, error) {
	req := &graphql.Request{
		OpName: "CreateMedicalFolder",
		Query:  CreateMedicalFolder_Operation,
		Variables: &__CreateMedicalFolderInput{
			Name:                   name,
			Firstname:              firstname,
			Birthdate:              birthdate,
			Sex:                    sex,
			Height:                 height,
			Weight:                 weight,
			Primary_doctor_id:      primary_doctor_id,
			Antecedent_disease_ids: antecedent_disease_ids,
			Onboarding_status:      onboarding_status,
		},
	}
	var err error

	var data CreateMedicalFolderResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateMedicine.
const CreateMedicine_Operation = `
mutation CreateMedicine ($name: String!, $unit: String, $target_diseases: [String!]!, $treated_symptoms: [String!]!, $side_effects: [String!]!) {
	createMedicine(name: $name, unit: $unit, target_diseases: $target_diseases, treated_symptoms: $treated_symptoms, side_effects: $side_effects) {
		id
		name
		unit
		target_diseases
		treated_symptoms
		side_effects
	}
}
`

func CreateMedicine(
	ctx context.Context,
	client graphql.Client,
	name string,
	unit string,
	target_diseases []string,
	treated_symptoms []string,
	side_effects []string,
) (*CreateMedicineResponse, error) {
	req := &graphql.Request{
		OpName: "CreateMedicine",
		Query:  CreateMedicine_Operation,
		Variables: &__CreateMedicineInput{
			Name:             name,
			Unit:             unit,
			Target_diseases:  target_diseases,
			Treated_symptoms: treated_symptoms,
			Side_effects:     side_effects,
		},
	}
	var err error

	var data CreateMedicineResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateNotification.
const CreateNotification_Operation = `
mutation CreateNotification ($token: String!, $message: String!, $title: String!) {
	createNotification(token: $token, message: $message, title: $title) {
		id
		token
		title
		message
	}
}
`

func CreateNotification(
	ctx context.Context,
	client graphql.Client,
	token string,
	message string,
	title string,
) (*CreateNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "CreateNotification",
		Query:  CreateNotification_Operation,
		Variables: &__CreateNotificationInput{
			Token:   token,
			Message: message,
			Title:   title,
		},
	}
	var err error

	var data CreateNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreatePatient.
const CreatePatient_Operation = `
mutation CreatePatient ($email: String!, $password: String!) {
	createPatient(email: $email, password: $password) {
		id
		email
		password
		rendez_vous_ids
		medical_info_id
		document_ids
		treatment_follow_up_ids
		chat_ids
		device_connect
		double_auth_methods_id
	}
}
`

func CreatePatient(
	ctx context.Context,
	client graphql.Client,
	email string,
	password string,
) (*CreatePatientResponse, error) {
	req := &graphql.Request{
		OpName: "CreatePatient",
		Query:  CreatePatient_Operation,
		Variables: &__CreatePatientInput{
			Email:    email,
			Password: password,
		},
	}
	var err error

	var data CreatePatientResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateRdv.
const CreateRdv_Operation = `
mutation CreateRdv ($id_patient: String!, $doctor_id: String!, $start_date: Int!, $end_date: Int!, $appointment_status: AppointmentStatus!, $session_id: String!) {
	createRdv(id_patient: $id_patient, doctor_id: $doctor_id, start_date: $start_date, end_date: $end_date, appointment_status: $appointment_status, session_id: $session_id) {
		id
		doctor_id
		id_patient
		start_date
		end_date
		cancelation_reason
		appointment_status
		session_id
		health_method
	}
}
`

func CreateRdv(
	ctx context.Context,
	client graphql.Client,
	id_patient string,
	doctor_id string,
	start_date int,
	end_date int,
	appointment_status AppointmentStatus,
	session_id string,
) (*CreateRdvResponse, error) {
	req := &graphql.Request{
		OpName: "CreateRdv",
		Query:  CreateRdv_Operation,
		Variables: &__CreateRdvInput{
			Id_patient:         id_patient,
			Doctor_id:          doctor_id,
			Start_date:         start_date,
			End_date:           end_date,
			Appointment_status: appointment_status,
			Session_id:         session_id,
		},
	}
	var err error

	var data CreateRdvResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateSession.
const CreateSession_Operation = `
mutation CreateSession ($diseases: [SessionDiseasesInput!]!, $symptoms: [SessionSymptomInput!]!, $age: Int!, $height: Int!, $weight: Int!, $sex: String!, $ante_chirs: [String!]!, $ante_diseases: [String!]!, $medicine: [String!]!, $last_question: String!, $logs: [LogsInput!]!, $alerts: [String!]!) {
	createSession(diseases: $diseases, symptoms: $symptoms, age: $age, height: $height, weight: $weight, sex: $sex, ante_chirs: $ante_chirs, ante_diseases: $ante_diseases, medicine: $medicine, last_question: $last_question, logs: $logs, alerts: $alerts) {
		id
		diseases {
			name
			presence
			unknown_presence
		}
		symptoms {
			name
			presence
			duration
			treated
		}
		age
		height
		weight
		sex
		ante_chirs
		ante_diseases
		medicine
		last_question
		logs {
			question
			answer
		}
		alerts
	}
}
`

func CreateSession(
	ctx context.Context,
	client graphql.Client,
	diseases []SessionDiseasesInput,
	symptoms []SessionSymptomInput,
	age int,
	height int,
	weight int,
	sex string,
	ante_chirs []string,
	ante_diseases []string,
	medicine []string,
	last_question string,
	logs []LogsInput,
	alerts []string,
) (*CreateSessionResponse, error) {
	req := &graphql.Request{
		OpName: "CreateSession",
		Query:  CreateSession_Operation,
		Variables: &__CreateSessionInput{
			Diseases:      diseases,
			Symptoms:      symptoms,
			Age:           age,
			Height:        height,
			Weight:        weight,
			Sex:           sex,
			Ante_chirs:    ante_chirs,
			Ante_diseases: ante_diseases,
			Medicine:      medicine,
			Last_question: last_question,
			Logs:          logs,
			Alerts:        alerts,
		},
	}
	var err error

	var data CreateSessionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateSymptom.
const CreateSymptom_Operation = `
mutation CreateSymptom ($code: String!, $name: String!, $chronic: Int, $symptom: [String!]!, $advice: String, $question: String!, $question_basic: String!, $question_duration: String!, $question_ante: String!) {
	createSymptom(code: $code, name: $name, chronic: $chronic, symptom: $symptom, advice: $advice, question: $question, question_basic: $question_basic, question_duration: $question_duration, question_ante: $question_ante) {
		id
		code
		name
		chronic
		symptom
		advice
		question
		question_basic
		question_duration
		question_ante
	}
}
`

func CreateSymptom(
	ctx context.Context,
	client graphql.Client,
	code string,
	name string,
	chronic int,
	symptom []string,
	advice string,
	question string,
	question_basic string,
	question_duration string,
	question_ante string,
) (*CreateSymptomResponse, error) {
	req := &graphql.Request{
		OpName: "CreateSymptom",
		Query:  CreateSymptom_Operation,
		Variables: &__CreateSymptomInput{
			Code:              code,
			Name:              name,
			Chronic:           chronic,
			Symptom:           symptom,
			Advice:            advice,
			Question:          question,
			Question_basic:    question_basic,
			Question_duration: question_duration,
			Question_ante:     question_ante,
		},
	}
	var err error

	var data CreateSymptomResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateTestAccount.
const CreateTestAccount_Operation = `
mutation CreateTestAccount ($email: String!, $password: String!) {
	createTestAccount(email: $email, password: $password) {
		id
		email
		password
	}
}
`

func CreateTestAccount(
	ctx context.Context,
	client graphql.Client,
	email string,
	password string,
) (*CreateTestAccountResponse, error) {
	req := &graphql.Request{
		OpName: "CreateTestAccount",
		Query:  CreateTestAccount_Operation,
		Variables: &__CreateTestAccountInput{
			Email:    email,
			Password: password,
		},
	}
	var err error

	var data CreateTestAccountResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateTreatment.
const CreateTreatment_Operation = `
mutation CreateTreatment ($periods: [Period!]!, $day: [Day!]!, $quantity: Int!, $medicine_id: String!) {
	createTreatment(period: $periods, day: $day, quantity: $quantity, medicine_id: $medicine_id) {
		id
		period
		day
		quantity
		medicine_id
	}
}
`

func CreateTreatment(
	ctx context.Context,
	client graphql.Client,
	periods []Period,
	day []Day,
	quantity int,
	medicine_id string,
) (*CreateTreatmentResponse, error) {
	req := &graphql.Request{
		OpName: "CreateTreatment",
		Query:  CreateTreatment_Operation,
		Variables: &__CreateTreatmentInput{
			Periods:     periods,
			Day:         day,
			Quantity:    quantity,
			Medicine_id: medicine_id,
		},
	}
	var err error

	var data CreateTreatmentResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CreateTreatmentsFollowUp.
const CreateTreatmentsFollowUp_Operation = `
mutation CreateTreatmentsFollowUp ($treatment_id: String!, $date: Int!, $period: [Period!]!) {
	createTreatmentsFollowUp(treatment_id: $treatment_id, date: $date, period: $period) {
		id
		treatment_id
		date
		period
	}
}
`

func CreateTreatmentsFollowUp(
	ctx context.Context,
	client graphql.Client,
	treatment_id string,
	date int,
	period []Period,
) (*CreateTreatmentsFollowUpResponse, error) {
	req := &graphql.Request{
		OpName: "CreateTreatmentsFollowUp",
		Query:  CreateTreatmentsFollowUp_Operation,
		Variables: &__CreateTreatmentsFollowUpInput{
			Treatment_id: treatment_id,
			Date:         date,
			Period:       period,
		},
	}
	var err error

	var data CreateTreatmentsFollowUpResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteAdmin.
const DeleteAdmin_Operation = `
mutation DeleteAdmin ($id: String!) {
	deleteAdmin(id: $id)
}
`

func DeleteAdmin(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteAdminResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteAdmin",
		Query:  DeleteAdmin_Operation,
		Variables: &__DeleteAdminInput{
			Id: id,
		},
	}
	var err error

	var data DeleteAdminResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteAlert.
const DeleteAlert_Operation = `
mutation DeleteAlert ($id: String!) {
	deleteAlert(id: $id)
}
`

func DeleteAlert(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteAlertResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteAlert",
		Query:  DeleteAlert_Operation,
		Variables: &__DeleteAlertInput{
			Id: id,
		},
	}
	var err error

	var data DeleteAlertResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteAnteChir.
const DeleteAnteChir_Operation = `
mutation DeleteAnteChir ($id: String!) {
	deleteAnteChir(id: $id)
}
`

func DeleteAnteChir(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteAnteChirResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteAnteChir",
		Query:  DeleteAnteChir_Operation,
		Variables: &__DeleteAnteChirInput{
			Id: id,
		},
	}
	var err error

	var data DeleteAnteChirResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteAnteDisease.
const DeleteAnteDisease_Operation = `
mutation DeleteAnteDisease ($id: String!) {
	deleteAnteDisease(id: $id)
}
`

func DeleteAnteDisease(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteAnteDiseaseResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteAnteDisease",
		Query:  DeleteAnteDisease_Operation,
		Variables: &__DeleteAnteDiseaseInput{
			Id: id,
		},
	}
	var err error

	var data DeleteAnteDiseaseResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteAnteFamily.
const DeleteAnteFamily_Operation = `
mutation DeleteAnteFamily ($id: String!) {
	deleteAnteFamily(id: $id)
}
`

func DeleteAnteFamily(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteAnteFamilyResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteAnteFamily",
		Query:  DeleteAnteFamily_Operation,
		Variables: &__DeleteAnteFamilyInput{
			Id: id,
		},
	}
	var err error

	var data DeleteAnteFamilyResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteBlackList.
const DeleteBlackList_Operation = `
mutation DeleteBlackList ($id: String!) {
	deleteDoubleAuth(id: $id)
}
`

func DeleteBlackList(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteBlackListResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteBlackList",
		Query:  DeleteBlackList_Operation,
		Variables: &__DeleteBlackListInput{
			Id: id,
		},
	}
	var err error

	var data DeleteBlackListResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteChat.
const DeleteChat_Operation = `
mutation DeleteChat ($id: String!) {
	deleteChat(id: $id)
}
`

func DeleteChat(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteChatResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteChat",
		Query:  DeleteChat_Operation,
		Variables: &__DeleteChatInput{
			Id: id,
		},
	}
	var err error

	var data DeleteChatResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteDemoAccount.
const DeleteDemoAccount_Operation = `
mutation DeleteDemoAccount ($id: String!) {
	deleteDemoAccount(id: $id)
}
`

func DeleteDemoAccount(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteDemoAccountResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteDemoAccount",
		Query:  DeleteDemoAccount_Operation,
		Variables: &__DeleteDemoAccountInput{
			Id: id,
		},
	}
	var err error

	var data DeleteDemoAccountResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteDeviceConnect.
const DeleteDeviceConnect_Operation = `
mutation DeleteDeviceConnect ($id: String!) {
	deleteDeviceConnect(id: $id)
}
`

func DeleteDeviceConnect(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteDeviceConnectResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteDeviceConnect",
		Query:  DeleteDeviceConnect_Operation,
		Variables: &__DeleteDeviceConnectInput{
			Id: id,
		},
	}
	var err error

	var data DeleteDeviceConnectResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteDisease.
const DeleteDisease_Operation = `
mutation DeleteDisease ($id: String!) {
	deleteDisease(id: $id)
}
`

func DeleteDisease(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteDiseaseResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteDisease",
		Query:  DeleteDisease_Operation,
		Variables: &__DeleteDiseaseInput{
			Id: id,
		},
	}
	var err error

	var data DeleteDiseaseResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteDoctor.
const DeleteDoctor_Operation = `
mutation DeleteDoctor ($id: String!) {
	deleteDoctor(id: $id)
}
`

func DeleteDoctor(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteDoctorResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteDoctor",
		Query:  DeleteDoctor_Operation,
		Variables: &__DeleteDoctorInput{
			Id: id,
		},
	}
	var err error

	var data DeleteDoctorResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteDocument.
const DeleteDocument_Operation = `
mutation DeleteDocument ($id: String!) {
	deleteDocument(id: $id)
}
`

func DeleteDocument(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteDocumentResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteDocument",
		Query:  DeleteDocument_Operation,
		Variables: &__DeleteDocumentInput{
			Id: id,
		},
	}
	var err error

	var data DeleteDocumentResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteDoubleAuth.
const DeleteDoubleAuth_Operation = `
mutation DeleteDoubleAuth ($id: String!) {
	deleteDoubleAuth(id: $id)
}
`

func DeleteDoubleAuth(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteDoubleAuthResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteDoubleAuth",
		Query:  DeleteDoubleAuth_Operation,
		Variables: &__DeleteDoubleAuthInput{
			Id: id,
		},
	}
	var err error

	var data DeleteDoubleAuthResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteMedicalFolder.
const DeleteMedicalFolder_Operation = `
mutation DeleteMedicalFolder ($id: String!) {
	deleteMedicalFolder(id: $id)
}
`

func DeleteMedicalFolder(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteMedicalFolderResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteMedicalFolder",
		Query:  DeleteMedicalFolder_Operation,
		Variables: &__DeleteMedicalFolderInput{
			Id: id,
		},
	}
	var err error

	var data DeleteMedicalFolderResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteMedicine.
const DeleteMedicine_Operation = `
mutation DeleteMedicine ($id: String!) {
	deleteMedicine(id: $id)
}
`

func DeleteMedicine(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteMedicineResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteMedicine",
		Query:  DeleteMedicine_Operation,
		Variables: &__DeleteMedicineInput{
			Id: id,
		},
	}
	var err error

	var data DeleteMedicineResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteNotification.
const DeleteNotification_Operation = `
mutation DeleteNotification ($id: String!) {
	deleteNotification(id: $id)
}
`

func DeleteNotification(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteNotification",
		Query:  DeleteNotification_Operation,
		Variables: &__DeleteNotificationInput{
			Id: id,
		},
	}
	var err error

	var data DeleteNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeletePatient.
const DeletePatient_Operation = `
mutation DeletePatient ($id: String!) {
	deletePatient(id: $id)
}
`

func DeletePatient(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeletePatientResponse, error) {
	req := &graphql.Request{
		OpName: "DeletePatient",
		Query:  DeletePatient_Operation,
		Variables: &__DeletePatientInput{
			Id: id,
		},
	}
	var err error

	var data DeletePatientResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteRdv.
const DeleteRdv_Operation = `
mutation DeleteRdv ($id: String!) {
	deleteRdv(id: $id)
}
`

func DeleteRdv(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteRdvResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteRdv",
		Query:  DeleteRdv_Operation,
		Variables: &__DeleteRdvInput{
			Id: id,
		},
	}
	var err error

	var data DeleteRdvResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteSession.
const DeleteSession_Operation = `
mutation DeleteSession ($id: String!) {
	deleteSession(id: $id)
}
`

func DeleteSession(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteSessionResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteSession",
		Query:  DeleteSession_Operation,
		Variables: &__DeleteSessionInput{
			Id: id,
		},
	}
	var err error

	var data DeleteSessionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteSlot.
const DeleteSlot_Operation = `
mutation DeleteSlot ($id: String!) {
	deleteSlot(id: $id)
}
`

func DeleteSlot(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteSlotResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteSlot",
		Query:  DeleteSlot_Operation,
		Variables: &__DeleteSlotInput{
			Id: id,
		},
	}
	var err error

	var data DeleteSlotResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteSymptom.
const DeleteSymptom_Operation = `
mutation DeleteSymptom ($id: String!) {
	deleteSymptom(id: $id)
}
`

func DeleteSymptom(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteSymptomResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteSymptom",
		Query:  DeleteSymptom_Operation,
		Variables: &__DeleteSymptomInput{
			Id: id,
		},
	}
	var err error

	var data DeleteSymptomResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteTestAccount.
const DeleteTestAccount_Operation = `
mutation DeleteTestAccount ($id: String!) {
	deleteTestAccount(id: $id)
}
`

func DeleteTestAccount(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteTestAccountResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteTestAccount",
		Query:  DeleteTestAccount_Operation,
		Variables: &__DeleteTestAccountInput{
			Id: id,
		},
	}
	var err error

	var data DeleteTestAccountResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteTreatment.
const DeleteTreatment_Operation = `
mutation DeleteTreatment ($id: String!) {
	deleteTreatment(id: $id)
}
`

func DeleteTreatment(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteTreatmentResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteTreatment",
		Query:  DeleteTreatment_Operation,
		Variables: &__DeleteTreatmentInput{
			Id: id,
		},
	}
	var err error

	var data DeleteTreatmentResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by DeleteTreatmentsFollowUp.
const DeleteTreatmentsFollowUp_Operation = `
mutation DeleteTreatmentsFollowUp ($id: String!) {
	deleteTreatmentsFollowUp(id: $id)
}
`

func DeleteTreatmentsFollowUp(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteTreatmentsFollowUpResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteTreatmentsFollowUp",
		Query:  DeleteTreatmentsFollowUp_Operation,
		Variables: &__DeleteTreatmentsFollowUpInput{
			Id: id,
		},
	}
	var err error

	var data DeleteTreatmentsFollowUpResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAdminByEmail.
const GetAdminByEmail_Operation = `
query GetAdminByEmail ($email: String!) {
	getAdminByEmail(email: $email) {
		id
		email
		password
		name
		last_name
	}
}
`

func GetAdminByEmail(
	ctx context.Context,
	client graphql.Client,
	email string,
) (*GetAdminByEmailResponse, error) {
	req := &graphql.Request{
		OpName: "GetAdminByEmail",
		Query:  GetAdminByEmail_Operation,
		Variables: &__GetAdminByEmailInput{
			Email: email,
		},
	}
	var err error

	var data GetAdminByEmailResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAdminById.
const GetAdminById_Operation = `
query GetAdminById ($id: String!) {
	getAdminById(id: $id) {
		id
		email
		password
		name
		last_name
	}
}
`

func GetAdminById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetAdminByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetAdminById",
		Query:  GetAdminById_Operation,
		Variables: &__GetAdminByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetAdminByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAdmins.
const GetAdmins_Operation = `
query GetAdmins {
	getAdmins {
		id
		email
		password
		name
		last_name
	}
}
`

func GetAdmins(
	ctx context.Context,
	client graphql.Client,
) (*GetAdminsResponse, error) {
	req := &graphql.Request{
		OpName: "GetAdmins",
		Query:  GetAdmins_Operation,
	}
	var err error

	var data GetAdminsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAlertById.
const GetAlertById_Operation = `
query GetAlertById ($id: String!) {
	getAlertById(id: $id) {
		id
		name
		sex
		height
		weight
		symptoms
		comment
	}
}
`

func GetAlertById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetAlertByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetAlertById",
		Query:  GetAlertById_Operation,
		Variables: &__GetAlertByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetAlertByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAlerts.
const GetAlerts_Operation = `
query GetAlerts {
	getAlerts {
		id
		name
		sex
		height
		weight
		symptoms
		comment
	}
}
`

func GetAlerts(
	ctx context.Context,
	client graphql.Client,
) (*GetAlertsResponse, error) {
	req := &graphql.Request{
		OpName: "GetAlerts",
		Query:  GetAlerts_Operation,
	}
	var err error

	var data GetAlertsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAnteChirByID.
const GetAnteChirByID_Operation = `
query GetAnteChirByID ($id: String!) {
	getAnteChirByID(id: $id) {
		id
		name
		induced_symptoms {
			symptom
			factor
		}
	}
}
`

func GetAnteChirByID(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetAnteChirByIDResponse, error) {
	req := &graphql.Request{
		OpName: "GetAnteChirByID",
		Query:  GetAnteChirByID_Operation,
		Variables: &__GetAnteChirByIDInput{
			Id: id,
		},
	}
	var err error

	var data GetAnteChirByIDResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAnteChirs.
const GetAnteChirs_Operation = `
query GetAnteChirs {
	getAnteChirs {
		id
		name
		induced_symptoms {
			symptom
			factor
		}
	}
}
`

func GetAnteChirs(
	ctx context.Context,
	client graphql.Client,
) (*GetAnteChirsResponse, error) {
	req := &graphql.Request{
		OpName: "GetAnteChirs",
		Query:  GetAnteChirs_Operation,
	}
	var err error

	var data GetAnteChirsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAnteDiseaseByID.
const GetAnteDiseaseByID_Operation = `
query GetAnteDiseaseByID ($id: String!) {
	getAnteDiseaseByID(id: $id) {
		id
		name
		chronicity
		surgery_ids
		symptoms
		treatment_ids
		still_relevant
	}
}
`

func GetAnteDiseaseByID(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetAnteDiseaseByIDResponse, error) {
	req := &graphql.Request{
		OpName: "GetAnteDiseaseByID",
		Query:  GetAnteDiseaseByID_Operation,
		Variables: &__GetAnteDiseaseByIDInput{
			Id: id,
		},
	}
	var err error

	var data GetAnteDiseaseByIDResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAnteDiseases.
const GetAnteDiseases_Operation = `
query GetAnteDiseases {
	getAnteDiseases {
		id
		name
		chronicity
		surgery_ids
		symptoms
		treatment_ids
		still_relevant
	}
}
`

func GetAnteDiseases(
	ctx context.Context,
	client graphql.Client,
) (*GetAnteDiseasesResponse, error) {
	req := &graphql.Request{
		OpName: "GetAnteDiseases",
		Query:  GetAnteDiseases_Operation,
	}
	var err error

	var data GetAnteDiseasesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAnteFamilies.
const GetAnteFamilies_Operation = `
query GetAnteFamilies {
	getAnteFamilies {
		id
		name
		disease
	}
}
`

func GetAnteFamilies(
	ctx context.Context,
	client graphql.Client,
) (*GetAnteFamiliesResponse, error) {
	req := &graphql.Request{
		OpName: "GetAnteFamilies",
		Query:  GetAnteFamilies_Operation,
	}
	var err error

	var data GetAnteFamiliesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetAnteFamilyByID.
const GetAnteFamilyByID_Operation = `
query GetAnteFamilyByID ($id: String!) {
	getAnteFamilyByID(id: $id) {
		id
		name
		disease
	}
}
`

func GetAnteFamilyByID(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetAnteFamilyByIDResponse, error) {
	req := &graphql.Request{
		OpName: "GetAnteFamilyByID",
		Query:  GetAnteFamilyByID_Operation,
		Variables: &__GetAnteFamilyByIDInput{
			Id: id,
		},
	}
	var err error

	var data GetAnteFamilyByIDResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetBlackList.
const GetBlackList_Operation = `
query GetBlackList {
	getBlackList {
		id
		token
	}
}
`

func GetBlackList(
	ctx context.Context,
	client graphql.Client,
) (*GetBlackListResponse, error) {
	req := &graphql.Request{
		OpName: "GetBlackList",
		Query:  GetBlackList_Operation,
	}
	var err error

	var data GetBlackListResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetBlackListById.
const GetBlackListById_Operation = `
query GetBlackListById ($id: String!) {
	getBlackListById(id: $id) {
		id
		token
	}
}
`

func GetBlackListById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetBlackListByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetBlackListById",
		Query:  GetBlackListById_Operation,
		Variables: &__GetBlackListByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetBlackListByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetChatById.
const GetChatById_Operation = `
query GetChatById ($id: String!) {
	getChatById(id: $id) {
		id
		participants {
			participant_id
			last_seen
		}
		messages {
			owner_id
			message
			sended_time
		}
	}
}
`

func GetChatById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetChatByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetChatById",
		Query:  GetChatById_Operation,
		Variables: &__GetChatByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetChatByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetChats.
const GetChats_Operation = `
query GetChats ($id: String!) {
	getChats(id: $id) {
		id
		participants {
			participant_id
			last_seen
		}
		messages {
			owner_id
			message
			sended_time
		}
	}
}
`

func GetChats(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetChatsResponse, error) {
	req := &graphql.Request{
		OpName: "GetChats",
		Query:  GetChats_Operation,
		Variables: &__GetChatsInput{
			Id: id,
		},
	}
	var err error

	var data GetChatsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDemoAccountByEmail.
const GetDemoAccountByEmail_Operation = `
query GetDemoAccountByEmail ($email: String!) {
	getDemoAccountByEmail(email: $email) {
		id
		email
		password
	}
}
`

func GetDemoAccountByEmail(
	ctx context.Context,
	client graphql.Client,
	email string,
) (*GetDemoAccountByEmailResponse, error) {
	req := &graphql.Request{
		OpName: "GetDemoAccountByEmail",
		Query:  GetDemoAccountByEmail_Operation,
		Variables: &__GetDemoAccountByEmailInput{
			Email: email,
		},
	}
	var err error

	var data GetDemoAccountByEmailResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDemoAccountById.
const GetDemoAccountById_Operation = `
query GetDemoAccountById ($id: String!) {
	getDemoAccountById(id: $id) {
		id
		email
		password
	}
}
`

func GetDemoAccountById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetDemoAccountByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetDemoAccountById",
		Query:  GetDemoAccountById_Operation,
		Variables: &__GetDemoAccountByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetDemoAccountByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDemoAccounts.
const GetDemoAccounts_Operation = `
query GetDemoAccounts {
	getDemoAccounts {
		id
		email
		password
	}
}
`

func GetDemoAccounts(
	ctx context.Context,
	client graphql.Client,
) (*GetDemoAccountsResponse, error) {
	req := &graphql.Request{
		OpName: "GetDemoAccounts",
		Query:  GetDemoAccounts_Operation,
	}
	var err error

	var data GetDemoAccountsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDeviceConnectById.
const GetDeviceConnectById_Operation = `
query GetDeviceConnectById ($id: String!) {
	getDeviceConnectById(id: $id) {
		id
		device_name
		ip_address
		latitude
		longitude
		date
		trust_device
	}
}
`

func GetDeviceConnectById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetDeviceConnectByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetDeviceConnectById",
		Query:  GetDeviceConnectById_Operation,
		Variables: &__GetDeviceConnectByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetDeviceConnectByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDevicesConnect.
const GetDevicesConnect_Operation = `
query GetDevicesConnect {
	getDevicesConnect {
		id
		device_name
		ip_address
		latitude
		longitude
		date
		trust_device
	}
}
`

func GetDevicesConnect(
	ctx context.Context,
	client graphql.Client,
) (*GetDevicesConnectResponse, error) {
	req := &graphql.Request{
		OpName: "GetDevicesConnect",
		Query:  GetDevicesConnect_Operation,
	}
	var err error

	var data GetDevicesConnectResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDiseaseById.
const GetDiseaseById_Operation = `
query GetDiseaseById ($id: String!) {
	getDiseaseById(id: $id) {
		id
		code
		name
		symptoms
		symptoms_weight {
			symptom
			value
			chronic
		}
		overweight_factor
		advice
	}
}
`

func GetDiseaseById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetDiseaseByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetDiseaseById",
		Query:  GetDiseaseById_Operation,
		Variables: &__GetDiseaseByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetDiseaseByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDiseases.
const GetDiseases_Operation = `
query GetDiseases {
	getDiseases {
		id
		code
		name
		symptoms
		symptoms_weight {
			symptom
			value
			chronic
		}
		overweight_factor
		advice
	}
}
`

func GetDiseases(
	ctx context.Context,
	client graphql.Client,
) (*GetDiseasesResponse, error) {
	req := &graphql.Request{
		OpName: "GetDiseases",
		Query:  GetDiseases_Operation,
	}
	var err error

	var data GetDiseasesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDoctorByEmail.
const GetDoctorByEmail_Operation = `
query GetDoctorByEmail ($email: String!) {
	getDoctorByEmail(email: $email) {
		id
		email
		password
		name
		firstname
		address {
			street
			zip_code
			country
			city
		}
		rendez_vous_ids
		patient_ids
		chat_ids
	}
}
`

func GetDoctorByEmail(
	ctx context.Context,
	client graphql.Client,
	email string,
) (*GetDoctorByEmailResponse, error) {
	req := &graphql.Request{
		OpName: "GetDoctorByEmail",
		Query:  GetDoctorByEmail_Operation,
		Variables: &__GetDoctorByEmailInput{
			Email: email,
		},
	}
	var err error

	var data GetDoctorByEmailResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDoctorById.
const GetDoctorById_Operation = `
query GetDoctorById ($id: String!) {
	getDoctorById(id: $id) {
		id
		email
		password
		name
		firstname
		address {
			street
			zip_code
			country
			city
		}
		rendez_vous_ids
		patient_ids
		chat_ids
	}
}
`

func GetDoctorById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetDoctorByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetDoctorById",
		Query:  GetDoctorById_Operation,
		Variables: &__GetDoctorByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetDoctorByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDoctorRdv.
const GetDoctorRdv_Operation = `
query GetDoctorRdv ($doctor_id: String!) {
	getDoctorRdv(doctor_id: $doctor_id) {
		id
		doctor_id
		id_patient
		start_date
		end_date
		cancelation_reason
		appointment_status
		session_id
		health_method
	}
}
`

func GetDoctorRdv(
	ctx context.Context,
	client graphql.Client,
	doctor_id string,
) (*GetDoctorRdvResponse, error) {
	req := &graphql.Request{
		OpName: "GetDoctorRdv",
		Query:  GetDoctorRdv_Operation,
		Variables: &__GetDoctorRdvInput{
			Doctor_id: doctor_id,
		},
	}
	var err error

	var data GetDoctorRdvResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDoctors.
const GetDoctors_Operation = `
query GetDoctors {
	getDoctors {
		id
		email
		password
		name
		firstname
		address {
			street
			zip_code
			country
			city
		}
		rendez_vous_ids
		patient_ids
		chat_ids
	}
}
`

func GetDoctors(
	ctx context.Context,
	client graphql.Client,
) (*GetDoctorsResponse, error) {
	req := &graphql.Request{
		OpName: "GetDoctors",
		Query:  GetDoctors_Operation,
	}
	var err error

	var data GetDoctorsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDocumentById.
const GetDocumentById_Operation = `
query GetDocumentById ($id: String!) {
	getDocumentById(id: $id) {
		id
		owner_id
		name
		document_type
		category
		is_favorite
		download_url
	}
}
`

func GetDocumentById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetDocumentByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetDocumentById",
		Query:  GetDocumentById_Operation,
		Variables: &__GetDocumentByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetDocumentByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDocuments.
const GetDocuments_Operation = `
query GetDocuments {
	getDocuments {
		id
		owner_id
		name
		document_type
		category
		is_favorite
		download_url
	}
}
`

func GetDocuments(
	ctx context.Context,
	client graphql.Client,
) (*GetDocumentsResponse, error) {
	req := &graphql.Request{
		OpName: "GetDocuments",
		Query:  GetDocuments_Operation,
	}
	var err error

	var data GetDocumentsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDoubleAuthById.
const GetDoubleAuthById_Operation = `
query GetDoubleAuthById ($id: String!) {
	getDoubleAuthById(id: $id) {
		id
		methods
		secret
		url
		trust_device_id
	}
}
`

func GetDoubleAuthById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetDoubleAuthByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetDoubleAuthById",
		Query:  GetDoubleAuthById_Operation,
		Variables: &__GetDoubleAuthByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetDoubleAuthByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetDoubleAuths.
const GetDoubleAuths_Operation = `
query GetDoubleAuths {
	getDoubleAuths {
		id
		methods
		secret
		url
		trust_device_id
	}
}
`

func GetDoubleAuths(
	ctx context.Context,
	client graphql.Client,
) (*GetDoubleAuthsResponse, error) {
	req := &graphql.Request{
		OpName: "GetDoubleAuths",
		Query:  GetDoubleAuths_Operation,
	}
	var err error

	var data GetDoubleAuthsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetMedicalFolder.
const GetMedicalFolder_Operation = `
query GetMedicalFolder {
	getMedicalFolder {
		id
		name
		firstname
		birthdate
		sex
		height
		weight
		primary_doctor_id
		antecedent_disease_ids
		onboarding_status
	}
}
`

func GetMedicalFolder(
	ctx context.Context,
	client graphql.Client,
) (*GetMedicalFolderResponse, error) {
	req := &graphql.Request{
		OpName: "GetMedicalFolder",
		Query:  GetMedicalFolder_Operation,
	}
	var err error

	var data GetMedicalFolderResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetMedicalFolderByID.
const GetMedicalFolderByID_Operation = `
query GetMedicalFolderByID ($id: String!) {
	getMedicalFolderById(id: $id) {
		id
		name
		firstname
		birthdate
		sex
		height
		weight
		primary_doctor_id
		antecedent_disease_ids
		onboarding_status
	}
}
`

func GetMedicalFolderByID(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetMedicalFolderByIDResponse, error) {
	req := &graphql.Request{
		OpName: "GetMedicalFolderByID",
		Query:  GetMedicalFolderByID_Operation,
		Variables: &__GetMedicalFolderByIDInput{
			Id: id,
		},
	}
	var err error

	var data GetMedicalFolderByIDResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetMedicineByID.
const GetMedicineByID_Operation = `
query GetMedicineByID ($id: String!) {
	getMedicineByID(id: $id) {
		id
		name
		unit
		target_diseases
		treated_symptoms
		side_effects
	}
}
`

func GetMedicineByID(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetMedicineByIDResponse, error) {
	req := &graphql.Request{
		OpName: "GetMedicineByID",
		Query:  GetMedicineByID_Operation,
		Variables: &__GetMedicineByIDInput{
			Id: id,
		},
	}
	var err error

	var data GetMedicineByIDResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetMedicines.
const GetMedicines_Operation = `
query GetMedicines {
	getMedicines {
		id
		name
		unit
		target_diseases
		treated_symptoms
		side_effects
	}
}
`

func GetMedicines(
	ctx context.Context,
	client graphql.Client,
) (*GetMedicinesResponse, error) {
	req := &graphql.Request{
		OpName: "GetMedicines",
		Query:  GetMedicines_Operation,
	}
	var err error

	var data GetMedicinesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetNlpReports.
const GetNlpReports_Operation = `
query GetNlpReports {
	getNlpReports {
		id
		version
		input_symptoms
		input_sentence
		output {
			symptom
			present
		}
		computation_time
	}
}
`

func GetNlpReports(
	ctx context.Context,
	client graphql.Client,
) (*GetNlpReportsResponse, error) {
	req := &graphql.Request{
		OpName: "GetNlpReports",
		Query:  GetNlpReports_Operation,
	}
	var err error

	var data GetNlpReportsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetNlpReportsByVersion.
const GetNlpReportsByVersion_Operation = `
query GetNlpReportsByVersion ($version: Int!) {
	getNlpReportsByVersion(version: $version) {
		id
		version
		input_symptoms
		input_sentence
		output {
			symptom
			present
		}
		computation_time
	}
}
`

func GetNlpReportsByVersion(
	ctx context.Context,
	client graphql.Client,
	version int,
) (*GetNlpReportsByVersionResponse, error) {
	req := &graphql.Request{
		OpName: "GetNlpReportsByVersion",
		Query:  GetNlpReportsByVersion_Operation,
		Variables: &__GetNlpReportsByVersionInput{
			Version: version,
		},
	}
	var err error

	var data GetNlpReportsByVersionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetNotificationById.
const GetNotificationById_Operation = `
query GetNotificationById ($id: String!) {
	getNotificationById(id: $id) {
		id
		token
		title
		message
	}
}
`

func GetNotificationById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetNotificationByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetNotificationById",
		Query:  GetNotificationById_Operation,
		Variables: &__GetNotificationByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetNotificationByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetNotifications.
const GetNotifications_Operation = `
query GetNotifications {
	getNotifications {
		id
		token
		title
		message
	}
}
`

func GetNotifications(
	ctx context.Context,
	client graphql.Client,
) (*GetNotificationsResponse, error) {
	req := &graphql.Request{
		OpName: "GetNotifications",
		Query:  GetNotifications_Operation,
	}
	var err error

	var data GetNotificationsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetPatientByEmail.
const GetPatientByEmail_Operation = `
query GetPatientByEmail ($email: String!) {
	getPatientByEmail(email: $email) {
		id
		email
		password
		rendez_vous_ids
		medical_info_id
		document_ids
		treatment_follow_up_ids
		chat_ids
		double_auth_methods_id
	}
}
`

func GetPatientByEmail(
	ctx context.Context,
	client graphql.Client,
	email string,
) (*GetPatientByEmailResponse, error) {
	req := &graphql.Request{
		OpName: "GetPatientByEmail",
		Query:  GetPatientByEmail_Operation,
		Variables: &__GetPatientByEmailInput{
			Email: email,
		},
	}
	var err error

	var data GetPatientByEmailResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetPatientById.
const GetPatientById_Operation = `
query GetPatientById ($id: String!) {
	getPatientById(id: $id) {
		id
		email
		password
		rendez_vous_ids
		medical_info_id
		document_ids
		treatment_follow_up_ids
		chat_ids
		device_connect
		double_auth_methods_id
	}
}
`

func GetPatientById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetPatientByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetPatientById",
		Query:  GetPatientById_Operation,
		Variables: &__GetPatientByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetPatientByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetPatientDocument.
const GetPatientDocument_Operation = `
query GetPatientDocument ($id: String!) {
	getPatientDocument(id: $id) {
		id
		owner_id
		name
		document_type
		category
		is_favorite
		download_url
	}
}
`

func GetPatientDocument(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetPatientDocumentResponse, error) {
	req := &graphql.Request{
		OpName: "GetPatientDocument",
		Query:  GetPatientDocument_Operation,
		Variables: &__GetPatientDocumentInput{
			Id: id,
		},
	}
	var err error

	var data GetPatientDocumentResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetPatientRdv.
const GetPatientRdv_Operation = `
query GetPatientRdv ($id_patient: String!) {
	getPatientRdv(id_patient: $id_patient) {
		id
		doctor_id
		id_patient
		start_date
		end_date
		cancelation_reason
		appointment_status
		session_id
		health_method
	}
}
`

func GetPatientRdv(
	ctx context.Context,
	client graphql.Client,
	id_patient string,
) (*GetPatientRdvResponse, error) {
	req := &graphql.Request{
		OpName: "GetPatientRdv",
		Query:  GetPatientRdv_Operation,
		Variables: &__GetPatientRdvInput{
			Id_patient: id_patient,
		},
	}
	var err error

	var data GetPatientRdvResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetPatients.
const GetPatients_Operation = `
query GetPatients {
	getPatients {
		id
		email
		password
		rendez_vous_ids
		medical_info_id
		document_ids
		treatment_follow_up_ids
		chat_ids
		device_connect
		double_auth_methods_id
	}
}
`

func GetPatients(
	ctx context.Context,
	client graphql.Client,
) (*GetPatientsResponse, error) {
	req := &graphql.Request{
		OpName: "GetPatients",
		Query:  GetPatients_Operation,
	}
	var err error

	var data GetPatientsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetPatientsFromDoctorById.
const GetPatientsFromDoctorById_Operation = `
query GetPatientsFromDoctorById ($id: String!) {
	getPatientsFromDoctorById(id: $id) {
		id
		email
		password
		rendez_vous_ids
		medical_info_id
		document_ids
		treatment_follow_up_ids
		chat_ids
		device_connect
		double_auth_methods_id
	}
}
`

func GetPatientsFromDoctorById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetPatientsFromDoctorByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetPatientsFromDoctorById",
		Query:  GetPatientsFromDoctorById_Operation,
		Variables: &__GetPatientsFromDoctorByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetPatientsFromDoctorByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetRdvById.
const GetRdvById_Operation = `
query GetRdvById ($id: String!) {
	getRdvById(id: $id) {
		id
		doctor_id
		id_patient
		start_date
		end_date
		cancelation_reason
		appointment_status
		session_id
		health_method
	}
}
`

func GetRdvById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetRdvByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetRdvById",
		Query:  GetRdvById_Operation,
		Variables: &__GetRdvByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetRdvByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetSessionById.
const GetSessionById_Operation = `
query GetSessionById ($id: String!) {
	getSessionById(id: $id) {
		id
		diseases {
			name
			presence
			unknown_presence
		}
		symptoms {
			name
			presence
			duration
			treated
		}
		age
		height
		weight
		sex
		ante_chirs
		ante_diseases
		medicine
		last_question
		logs {
			question
			answer
		}
		alerts
	}
}
`

func GetSessionById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetSessionByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetSessionById",
		Query:  GetSessionById_Operation,
		Variables: &__GetSessionByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetSessionByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetSessions.
const GetSessions_Operation = `
query GetSessions {
	getSessions {
		id
		diseases {
			name
			presence
			unknown_presence
		}
		symptoms {
			name
			presence
			duration
			treated
		}
		age
		height
		weight
		sex
		ante_chirs
		ante_diseases
		medicine
		last_question
		logs {
			question
			answer
		}
		alerts
	}
}
`

func GetSessions(
	ctx context.Context,
	client graphql.Client,
) (*GetSessionsResponse, error) {
	req := &graphql.Request{
		OpName: "GetSessions",
		Query:  GetSessions_Operation,
	}
	var err error

	var data GetSessionsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetSlotById.
const GetSlotById_Operation = `
query GetSlotById ($id: String!) {
	getSlotById(id: $id) {
		id
		doctor_id
		id_patient
		start_date
		end_date
		cancelation_reason
		appointment_status
		session_id
	}
}
`

func GetSlotById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetSlotByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetSlotById",
		Query:  GetSlotById_Operation,
		Variables: &__GetSlotByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetSlotByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetSlots.
const GetSlots_Operation = `
query GetSlots ($id: String!) {
	getSlots(id: $id) {
		id
		doctor_id
		id_patient
		start_date
		end_date
		cancelation_reason
		appointment_status
		session_id
	}
}
`

func GetSlots(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetSlotsResponse, error) {
	req := &graphql.Request{
		OpName: "GetSlots",
		Query:  GetSlots_Operation,
		Variables: &__GetSlotsInput{
			Id: id,
		},
	}
	var err error

	var data GetSlotsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetSymptomById.
const GetSymptomById_Operation = `
query GetSymptomById ($id: String!) {
	getSymptomById(id: $id) {
		id
		code
		name
		chronic
		symptom
		advice
		question
		question_basic
		question_duration
		question_ante
	}
}
`

func GetSymptomById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetSymptomByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetSymptomById",
		Query:  GetSymptomById_Operation,
		Variables: &__GetSymptomByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetSymptomByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetSymptoms.
const GetSymptoms_Operation = `
query GetSymptoms {
	getSymptoms {
		id
		code
		name
		chronic
		symptom
		advice
		question
		question_basic
		question_duration
		question_ante
	}
}
`

func GetSymptoms(
	ctx context.Context,
	client graphql.Client,
) (*GetSymptomsResponse, error) {
	req := &graphql.Request{
		OpName: "GetSymptoms",
		Query:  GetSymptoms_Operation,
	}
	var err error

	var data GetSymptomsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetTestAccountByEmail.
const GetTestAccountByEmail_Operation = `
query GetTestAccountByEmail ($email: String!) {
	getTestAccountByEmail(email: $email) {
		id
		email
		password
	}
}
`

func GetTestAccountByEmail(
	ctx context.Context,
	client graphql.Client,
	email string,
) (*GetTestAccountByEmailResponse, error) {
	req := &graphql.Request{
		OpName: "GetTestAccountByEmail",
		Query:  GetTestAccountByEmail_Operation,
		Variables: &__GetTestAccountByEmailInput{
			Email: email,
		},
	}
	var err error

	var data GetTestAccountByEmailResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetTestAccountById.
const GetTestAccountById_Operation = `
query GetTestAccountById ($id: String!) {
	getTestAccountById(id: $id) {
		id
		email
		password
	}
}
`

func GetTestAccountById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetTestAccountByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetTestAccountById",
		Query:  GetTestAccountById_Operation,
		Variables: &__GetTestAccountByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetTestAccountByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetTestAccounts.
const GetTestAccounts_Operation = `
query GetTestAccounts {
	getTestAccounts {
		id
		email
		password
	}
}
`

func GetTestAccounts(
	ctx context.Context,
	client graphql.Client,
) (*GetTestAccountsResponse, error) {
	req := &graphql.Request{
		OpName: "GetTestAccounts",
		Query:  GetTestAccounts_Operation,
	}
	var err error

	var data GetTestAccountsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetTreatmentByID.
const GetTreatmentByID_Operation = `
query GetTreatmentByID ($id: String!) {
	getTreatmentByID(id: $id) {
		id
		period
		day
		quantity
		medicine_id
	}
}
`

func GetTreatmentByID(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetTreatmentByIDResponse, error) {
	req := &graphql.Request{
		OpName: "GetTreatmentByID",
		Query:  GetTreatmentByID_Operation,
		Variables: &__GetTreatmentByIDInput{
			Id: id,
		},
	}
	var err error

	var data GetTreatmentByIDResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetTreatments.
const GetTreatments_Operation = `
query GetTreatments {
	getTreatments {
		id
		period
		day
		quantity
		medicine_id
	}
}
`

func GetTreatments(
	ctx context.Context,
	client graphql.Client,
) (*GetTreatmentsResponse, error) {
	req := &graphql.Request{
		OpName: "GetTreatments",
		Query:  GetTreatments_Operation,
	}
	var err error

	var data GetTreatmentsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetTreatmentsFollowUp.
const GetTreatmentsFollowUp_Operation = `
query GetTreatmentsFollowUp ($id: String!) {
	getTreatmentsFollowUps(id: $id) {
		id
		treatment_id
		date
		period
	}
}
`

func GetTreatmentsFollowUp(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetTreatmentsFollowUpResponse, error) {
	req := &graphql.Request{
		OpName: "GetTreatmentsFollowUp",
		Query:  GetTreatmentsFollowUp_Operation,
		Variables: &__GetTreatmentsFollowUpInput{
			Id: id,
		},
	}
	var err error

	var data GetTreatmentsFollowUpResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetTreatmentsFollowUpByID.
const GetTreatmentsFollowUpByID_Operation = `
query GetTreatmentsFollowUpByID ($id: String!) {
	getTreatmentsFollowUpById(id: $id) {
		id
		treatment_id
		date
		period
	}
}
`

func GetTreatmentsFollowUpByID(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetTreatmentsFollowUpByIDResponse, error) {
	req := &graphql.Request{
		OpName: "GetTreatmentsFollowUpByID",
		Query:  GetTreatmentsFollowUpByID_Operation,
		Variables: &__GetTreatmentsFollowUpByIDInput{
			Id: id,
		},
	}
	var err error

	var data GetTreatmentsFollowUpByIDResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetWaitingRdv.
const GetWaitingRdv_Operation = `
query GetWaitingRdv ($doctor_id: String!) {
	getWaitingRdv(doctor_id: $doctor_id) {
		id
		doctor_id
		id_patient
		start_date
		end_date
		cancelation_reason
		appointment_status
		session_id
		health_method
	}
}
`

func GetWaitingRdv(
	ctx context.Context,
	client graphql.Client,
	doctor_id string,
) (*GetWaitingRdvResponse, error) {
	req := &graphql.Request{
		OpName: "GetWaitingRdv",
		Query:  GetWaitingRdv_Operation,
		Variables: &__GetWaitingRdvInput{
			Doctor_id: doctor_id,
		},
	}
	var err error

	var data GetWaitingRdvResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateAdmin.
const UpdateAdmin_Operation = `
mutation UpdateAdmin ($id: String!, $email: String, $password: String, $name: String, $last_name: String) {
	updateAdmin(id: $id, email: $email, password: $password, name: $name, last_name: $last_name) {
		id
		email
		password
		name
		last_name
	}
}
`

func UpdateAdmin(
	ctx context.Context,
	client graphql.Client,
	id string,
	email string,
	password string,
	name string,
	last_name string,
) (*UpdateAdminResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateAdmin",
		Query:  UpdateAdmin_Operation,
		Variables: &__UpdateAdminInput{
			Id:        id,
			Email:     email,
			Password:  password,
			Name:      name,
			Last_name: last_name,
		},
	}
	var err error

	var data UpdateAdminResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateAlert.
const UpdateAlert_Operation = `
mutation UpdateAlert ($id: String!, $name: String, $sex: String, $height: Int, $weight: Int, $symptoms: [String!], $comment: String) {
	updateAlert(id: $id, name: $name, sex: $sex, height: $height, weight: $weight, symptoms: $symptoms, comment: $comment) {
		id
		name
		sex
		height
		weight
		symptoms
		comment
	}
}
`

func UpdateAlert(
	ctx context.Context,
	client graphql.Client,
	id string,
	name string,
	sex string,
	height int,
	weight int,
	symptoms []string,
	comment string,
) (*UpdateAlertResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateAlert",
		Query:  UpdateAlert_Operation,
		Variables: &__UpdateAlertInput{
			Id:       id,
			Name:     name,
			Sex:      sex,
			Height:   height,
			Weight:   weight,
			Symptoms: symptoms,
			Comment:  comment,
		},
	}
	var err error

	var data UpdateAlertResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateAnteChir.
const UpdateAnteChir_Operation = `
mutation UpdateAnteChir ($id: String!, $name: String, $induced_symptoms: [ChirInducedSymptomInput!]) {
	updateAnteChir(id: $id, name: $name, induced_symptoms: $induced_symptoms) {
		id
		name
		induced_symptoms {
			symptom
			factor
		}
	}
}
`

func UpdateAnteChir(
	ctx context.Context,
	client graphql.Client,
	id string,
	name string,
	induced_symptoms []ChirInducedSymptomInput,
) (*UpdateAnteChirResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateAnteChir",
		Query:  UpdateAnteChir_Operation,
		Variables: &__UpdateAnteChirInput{
			Id:               id,
			Name:             name,
			Induced_symptoms: induced_symptoms,
		},
	}
	var err error

	var data UpdateAnteChirResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateAnteDisease.
const UpdateAnteDisease_Operation = `
mutation UpdateAnteDisease ($id: String!, $name: String, $chronicity: Float, $surgery_ids: [String!], $symptoms: [String!], $treatment_ids: [String!], $still_relevant: Boolean) {
	updateAnteDisease(id: $id, name: $name, chronicity: $chronicity, surgery_ids: $surgery_ids, symptoms: $symptoms, treatment_ids: $treatment_ids, still_relevant: $still_relevant) {
		id
		name
		chronicity
		surgery_ids
		symptoms
		treatment_ids
		still_relevant
	}
}
`

func UpdateAnteDisease(
	ctx context.Context,
	client graphql.Client,
	id string,
	name string,
	chronicity float64,
	surgery_ids []string,
	symptoms []string,
	treatment_ids []string,
	still_relevant bool,
) (*UpdateAnteDiseaseResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateAnteDisease",
		Query:  UpdateAnteDisease_Operation,
		Variables: &__UpdateAnteDiseaseInput{
			Id:             id,
			Name:           name,
			Chronicity:     chronicity,
			Surgery_ids:    surgery_ids,
			Symptoms:       symptoms,
			Treatment_ids:  treatment_ids,
			Still_relevant: still_relevant,
		},
	}
	var err error

	var data UpdateAnteDiseaseResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateAnteFamily.
const UpdateAnteFamily_Operation = `
mutation UpdateAnteFamily ($id: String!, $name: String, $disease: [String!]) {
	updateAnteFamily(id: $id, name: $name, disease: $disease) {
		id
		name
		disease
	}
}
`

func UpdateAnteFamily(
	ctx context.Context,
	client graphql.Client,
	id string,
	name string,
	disease []string,
) (*UpdateAnteFamilyResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateAnteFamily",
		Query:  UpdateAnteFamily_Operation,
		Variables: &__UpdateAnteFamilyInput{
			Id:      id,
			Name:    name,
			Disease: disease,
		},
	}
	var err error

	var data UpdateAnteFamilyResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateBlackList.
const UpdateBlackList_Operation = `
mutation UpdateBlackList ($id: String!, $token: [String!]) {
	updateBlackList(id: $id, token: $token) {
		id
		token
	}
}
`

func UpdateBlackList(
	ctx context.Context,
	client graphql.Client,
	id string,
	token []string,
) (*UpdateBlackListResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateBlackList",
		Query:  UpdateBlackList_Operation,
		Variables: &__UpdateBlackListInput{
			Id:    id,
			Token: token,
		},
	}
	var err error

	var data UpdateBlackListResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateChat.
const UpdateChat_Operation = `
mutation UpdateChat ($id: String!, $participants: [ChatParticipantsInput!], $messages: [ChatMessagesInput!]) {
	updateChat(id: $id, participants: $participants, messages: $messages) {
		id
		participants {
			participant_id
			last_seen
		}
		messages {
			owner_id
			message
			sended_time
		}
	}
}
`

func UpdateChat(
	ctx context.Context,
	client graphql.Client,
	id string,
	participants []ChatParticipantsInput,
	messages []ChatMessagesInput,
) (*UpdateChatResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateChat",
		Query:  UpdateChat_Operation,
		Variables: &__UpdateChatInput{
			Id:           id,
			Participants: participants,
			Messages:     messages,
		},
	}
	var err error

	var data UpdateChatResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateDemoAccount.
const UpdateDemoAccount_Operation = `
mutation UpdateDemoAccount ($id: String!, $email: String, $password: String) {
	updateDemoAccount(id: $id, email: $email, password: $password) {
		id
		email
		password
	}
}
`

func UpdateDemoAccount(
	ctx context.Context,
	client graphql.Client,
	id string,
	email string,
	password string,
) (*UpdateDemoAccountResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateDemoAccount",
		Query:  UpdateDemoAccount_Operation,
		Variables: &__UpdateDemoAccountInput{
			Id:       id,
			Email:    email,
			Password: password,
		},
	}
	var err error

	var data UpdateDemoAccountResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateDeviceConnect.
const UpdateDeviceConnect_Operation = `
mutation UpdateDeviceConnect ($id: String!, $device_name: String, $ip_address: String, $latitude: Float, $longitude: Float, $date: Int, $trust_device: Boolean) {
	updateDeviceConnect(id: $id, device_name: $device_name, ip_address: $ip_address, latitude: $latitude, longitude: $longitude, date: $date, trust_device: $trust_device) {
		id
		device_name
		ip_address
		latitude
		longitude
		date
		trust_device
	}
}
`

func UpdateDeviceConnect(
	ctx context.Context,
	client graphql.Client,
	id string,
	device_name string,
	ip_address string,
	latitude float64,
	longitude float64,
	date int,
	trust_device bool,
) (*UpdateDeviceConnectResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateDeviceConnect",
		Query:  UpdateDeviceConnect_Operation,
		Variables: &__UpdateDeviceConnectInput{
			Id:           id,
			Device_name:  device_name,
			Ip_address:   ip_address,
			Latitude:     latitude,
			Longitude:    longitude,
			Date:         date,
			Trust_device: trust_device,
		},
	}
	var err error

	var data UpdateDeviceConnectResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateDisease.
const UpdateDisease_Operation = `
mutation UpdateDisease ($id: String!, $code: String, $name: String, $symptoms: [String!], $symptoms_weight: [SymptomsWeightInput!], $overweight_factor: Float, $advice: String) {
	updateDisease(id: $id, code: $code, name: $name, symptoms: $symptoms, symptoms_weight: $symptoms_weight, overweight_factor: $overweight_factor, advice: $advice) {
		id
		code
		name
		symptoms
		symptoms_weight {
			symptom
			value
			chronic
		}
		overweight_factor
		advice
	}
}
`

func UpdateDisease(
	ctx context.Context,
	client graphql.Client,
	id string,
	code string,
	name string,
	symptoms []string,
	symptoms_weight []SymptomsWeightInput,
	overweight_factor float64,
	advice string,
) (*UpdateDiseaseResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateDisease",
		Query:  UpdateDisease_Operation,
		Variables: &__UpdateDiseaseInput{
			Id:                id,
			Code:              code,
			Name:              name,
			Symptoms:          symptoms,
			Symptoms_weight:   symptoms_weight,
			Overweight_factor: overweight_factor,
			Advice:            advice,
		},
	}
	var err error

	var data UpdateDiseaseResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateDoctor.
const UpdateDoctor_Operation = `
mutation UpdateDoctor ($id: String!, $email: String, $password: String, $name: String, $firstname: String, $rendez_vous_ids: [String], $patient_ids: [String], $address: AddressInput!, $chat_ids: [String]) {
	updateDoctor(id: $id, email: $email, password: $password, name: $name, firstname: $firstname, rendez_vous_ids: $rendez_vous_ids, patient_ids: $patient_ids, address: $address, chat_ids: $chat_ids) {
		id
		email
		password
		name
		firstname
		rendez_vous_ids
		patient_ids
		chat_ids
		address {
			street
			zip_code
			country
		}
	}
}
`

func UpdateDoctor(
	ctx context.Context,
	client graphql.Client,
	id string,
	email string,
	password string,
	name string,
	firstname string,
	rendez_vous_ids []string,
	patient_ids []string,
	address AddressInput,
	chat_ids []string,
) (*UpdateDoctorResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateDoctor",
		Query:  UpdateDoctor_Operation,
		Variables: &__UpdateDoctorInput{
			Id:              id,
			Email:           email,
			Password:        password,
			Name:            name,
			Firstname:       firstname,
			Rendez_vous_ids: rendez_vous_ids,
			Patient_ids:     patient_ids,
			Address:         address,
			Chat_ids:        chat_ids,
		},
	}
	var err error

	var data UpdateDoctorResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateDocument.
const UpdateDocument_Operation = `
mutation UpdateDocument ($id: String!, $name: String, $is_favorite: Boolean) {
	updateDocument(id: $id, name: $name, is_favorite: $is_favorite) {
		id
		owner_id
		name
		document_type
		category
		is_favorite
		download_url
	}
}
`

func UpdateDocument(
	ctx context.Context,
	client graphql.Client,
	id string,
	name string,
	is_favorite bool,
) (*UpdateDocumentResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateDocument",
		Query:  UpdateDocument_Operation,
		Variables: &__UpdateDocumentInput{
			Id:          id,
			Name:        name,
			Is_favorite: is_favorite,
		},
	}
	var err error

	var data UpdateDocumentResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateDoubleAuth.
const UpdateDoubleAuth_Operation = `
mutation UpdateDoubleAuth ($id: String!, $methods: [String!], $secret: String, $url: String, $trust_device_id: String) {
	updateDoubleAuth(id: $id, methods: $methods, secret: $secret, url: $url, trust_device_id: $trust_device_id) {
		id
		methods
		secret
		url
		trust_device_id
	}
}
`

func UpdateDoubleAuth(
	ctx context.Context,
	client graphql.Client,
	id string,
	methods []string,
	secret string,
	url string,
	trust_device_id string,
) (*UpdateDoubleAuthResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateDoubleAuth",
		Query:  UpdateDoubleAuth_Operation,
		Variables: &__UpdateDoubleAuthInput{
			Id:              id,
			Methods:         methods,
			Secret:          secret,
			Url:             url,
			Trust_device_id: trust_device_id,
		},
	}
	var err error

	var data UpdateDoubleAuthResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateMedicalFolder.
const UpdateMedicalFolder_Operation = `
mutation UpdateMedicalFolder ($id: String!, $name: String, $firstname: String, $birthdate: Int, $sex: String, $height: Int, $weight: Int, $primary_doctor_id: String, $antecedent_disease_ids: [String!], $onboarding_status: OnboardingStatus) {
	updateMedicalFolder(id: $id, name: $name, firstname: $firstname, birthdate: $birthdate, sex: $sex, height: $height, weight: $weight, primary_doctor_id: $primary_doctor_id, antecedent_disease_ids: $antecedent_disease_ids, onboarding_status: $onboarding_status) {
		id
		name
		firstname
		birthdate
		sex
		height
		weight
		primary_doctor_id
		antecedent_disease_ids
		onboarding_status
	}
}
`

func UpdateMedicalFolder(
	ctx context.Context,
	client graphql.Client,
	id string,
	name string,
	firstname string,
	birthdate int,
	sex string,
	height int,
	weight int,
	primary_doctor_id string,
	antecedent_disease_ids []string,
	onboarding_status OnboardingStatus,
) (*UpdateMedicalFolderResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateMedicalFolder",
		Query:  UpdateMedicalFolder_Operation,
		Variables: &__UpdateMedicalFolderInput{
			Id:                     id,
			Name:                   name,
			Firstname:              firstname,
			Birthdate:              birthdate,
			Sex:                    sex,
			Height:                 height,
			Weight:                 weight,
			Primary_doctor_id:      primary_doctor_id,
			Antecedent_disease_ids: antecedent_disease_ids,
			Onboarding_status:      onboarding_status,
		},
	}
	var err error

	var data UpdateMedicalFolderResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateNotification.
const UpdateNotification_Operation = `
mutation UpdateNotification ($id: String!, $token: String!, $message: String!, $title: String!) {
	updateNotification(id: $id, token: $token, message: $message, title: $title) {
		id
		token
		title
		message
	}
}
`

func UpdateNotification(
	ctx context.Context,
	client graphql.Client,
	id string,
	token string,
	message string,
	title string,
) (*UpdateNotificationResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateNotification",
		Query:  UpdateNotification_Operation,
		Variables: &__UpdateNotificationInput{
			Id:      id,
			Token:   token,
			Message: message,
			Title:   title,
		},
	}
	var err error

	var data UpdateNotificationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdatePatient.
const UpdatePatient_Operation = `
mutation UpdatePatient ($id: String!, $email: String, $password: String, $medical_info_id: String, $rendez_vous_ids: [String], $document_ids: [String], $treatment_follow_up_ids: [String], $chat_ids: [String], $device_connect: [String], $double_auth_methods_id: String) {
	updatePatient(id: $id, email: $email, password: $password, medical_info_id: $medical_info_id, rendez_vous_ids: $rendez_vous_ids, document_ids: $document_ids, treatment_follow_up_ids: $treatment_follow_up_ids, chat_ids: $chat_ids, device_connect: $device_connect, double_auth_methods_id: $double_auth_methods_id) {
		id
		email
		password
		rendez_vous_ids
		medical_info_id
		document_ids
		treatment_follow_up_ids
		chat_ids
		device_connect
		double_auth_methods_id
	}
}
`

func UpdatePatient(
	ctx context.Context,
	client graphql.Client,
	id string,
	email string,
	password string,
	medical_info_id string,
	rendez_vous_ids []string,
	document_ids []string,
	treatment_follow_up_ids []string,
	chat_ids []string,
	device_connect []string,
	double_auth_methods_id string,
) (*UpdatePatientResponse, error) {
	req := &graphql.Request{
		OpName: "UpdatePatient",
		Query:  UpdatePatient_Operation,
		Variables: &__UpdatePatientInput{
			Id:                      id,
			Email:                   email,
			Password:                password,
			Medical_info_id:         medical_info_id,
			Rendez_vous_ids:         rendez_vous_ids,
			Document_ids:            document_ids,
			Treatment_follow_up_ids: treatment_follow_up_ids,
			Chat_ids:                chat_ids,
			Device_connect:          device_connect,
			Double_auth_methods_id:  double_auth_methods_id,
		},
	}
	var err error

	var data UpdatePatientResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateRdv.
const UpdateRdv_Operation = `
mutation UpdateRdv ($id: String!, $id_patient: String, $doctor_id: String, $start_date: Int, $end_date: Int, $cancelation_reason: String, $appointment_status: AppointmentStatus, $session_id: String, $health_method: String) {
	updateRdv(id: $id, id_patient: $id_patient, doctor_id: $doctor_id, start_date: $start_date, end_date: $end_date, cancelation_reason: $cancelation_reason, appointment_status: $appointment_status, session_id: $session_id, health_method: $health_method) {
		id
		doctor_id
		id_patient
		start_date
		end_date
		cancelation_reason
		appointment_status
		session_id
		health_method
	}
}
`

func UpdateRdv(
	ctx context.Context,
	client graphql.Client,
	id string,
	id_patient string,
	doctor_id string,
	start_date int,
	end_date int,
	cancelation_reason string,
	appointment_status AppointmentStatus,
	session_id string,
	health_method string,
) (*UpdateRdvResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateRdv",
		Query:  UpdateRdv_Operation,
		Variables: &__UpdateRdvInput{
			Id:                 id,
			Id_patient:         id_patient,
			Doctor_id:          doctor_id,
			Start_date:         start_date,
			End_date:           end_date,
			Cancelation_reason: cancelation_reason,
			Appointment_status: appointment_status,
			Session_id:         session_id,
			Health_method:      health_method,
		},
	}
	var err error

	var data UpdateRdvResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateSession.
const UpdateSession_Operation = `
mutation UpdateSession ($id: String!, $diseases: [SessionDiseasesInput!], $symptoms: [SessionSymptomInput!], $age: Int, $height: Int, $weight: Int, $sex: String, $ante_chirs: [String!], $ante_diseases: [String!], $medicine: [String!], $last_question: String, $logs: [LogsInput!], $alerts: [String!]) {
	updateSession(id: $id, diseases: $diseases, symptoms: $symptoms, age: $age, height: $height, weight: $weight, sex: $sex, ante_chirs: $ante_chirs, ante_diseases: $ante_diseases, medicine: $medicine, last_question: $last_question, logs: $logs, alerts: $alerts) {
		id
		diseases {
			name
			presence
			unknown_presence
		}
		symptoms {
			name
			presence
			duration
			treated
		}
		age
		height
		weight
		sex
		ante_chirs
		ante_diseases
		medicine
		last_question
		logs {
			question
			answer
		}
		alerts
	}
}
`

func UpdateSession(
	ctx context.Context,
	client graphql.Client,
	id string,
	diseases []SessionDiseasesInput,
	symptoms []SessionSymptomInput,
	age int,
	height int,
	weight int,
	sex string,
	ante_chirs []string,
	ante_diseases []string,
	medicine []string,
	last_question string,
	logs []LogsInput,
	alerts []string,
) (*UpdateSessionResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateSession",
		Query:  UpdateSession_Operation,
		Variables: &__UpdateSessionInput{
			Id:            id,
			Diseases:      diseases,
			Symptoms:      symptoms,
			Age:           age,
			Height:        height,
			Weight:        weight,
			Sex:           sex,
			Ante_chirs:    ante_chirs,
			Ante_diseases: ante_diseases,
			Medicine:      medicine,
			Last_question: last_question,
			Logs:          logs,
			Alerts:        alerts,
		},
	}
	var err error

	var data UpdateSessionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateSymptom.
const UpdateSymptom_Operation = `
mutation UpdateSymptom ($id: String!, $code: String, $name: String, $chronic: Int, $symptom: [String!], $advice: String, $question: String, $question_basic: String, $question_duration: String, $question_ante: String) {
	updateSymptom(id: $id, code: $code, name: $name, chronic: $chronic, symptom: $symptom, advice: $advice, question: $question, question_basic: $question_basic, question_duration: $question_duration, question_ante: $question_ante) {
		id
		code
		name
		chronic
		symptom
		advice
		question
		question_basic
		question_duration
		question_ante
	}
}
`

func UpdateSymptom(
	ctx context.Context,
	client graphql.Client,
	id string,
	code string,
	name string,
	chronic int,
	symptom []string,
	advice string,
	question string,
	question_basic string,
	question_duration string,
	question_ante string,
) (*UpdateSymptomResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateSymptom",
		Query:  UpdateSymptom_Operation,
		Variables: &__UpdateSymptomInput{
			Id:                id,
			Code:              code,
			Name:              name,
			Chronic:           chronic,
			Symptom:           symptom,
			Advice:            advice,
			Question:          question,
			Question_basic:    question_basic,
			Question_duration: question_duration,
			Question_ante:     question_ante,
		},
	}
	var err error

	var data UpdateSymptomResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateTestAccount.
const UpdateTestAccount_Operation = `
mutation UpdateTestAccount ($id: String!, $email: String, $password: String) {
	updateTestAccount(id: $id, email: $email, password: $password) {
		id
		email
		password
	}
}
`

func UpdateTestAccount(
	ctx context.Context,
	client graphql.Client,
	id string,
	email string,
	password string,
) (*UpdateTestAccountResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateTestAccount",
		Query:  UpdateTestAccount_Operation,
		Variables: &__UpdateTestAccountInput{
			Id:       id,
			Email:    email,
			Password: password,
		},
	}
	var err error

	var data UpdateTestAccountResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateTreatment.
const UpdateTreatment_Operation = `
mutation UpdateTreatment ($id: String!, $period: [Period!], $day: [Day!], $quantity: Int, $medicine_id: String) {
	updateTreatment(id: $id, period: $period, day: $day, quantity: $quantity, medicine_id: $medicine_id) {
		id
		period
		day
		quantity
		medicine_id
	}
}
`

func UpdateTreatment(
	ctx context.Context,
	client graphql.Client,
	id string,
	period []Period,
	day []Day,
	quantity int,
	medicine_id string,
) (*UpdateTreatmentResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateTreatment",
		Query:  UpdateTreatment_Operation,
		Variables: &__UpdateTreatmentInput{
			Id:          id,
			Period:      period,
			Day:         day,
			Quantity:    quantity,
			Medicine_id: medicine_id,
		},
	}
	var err error

	var data UpdateTreatmentResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by UpdateTreatmentsFollowUp.
const UpdateTreatmentsFollowUp_Operation = `
mutation UpdateTreatmentsFollowUp ($id: String!, $treatment_id: String, $date: Int, $period: [Period!]) {
	updateTreatmentsFollowUp(id: $id, treatment_id: $treatment_id, date: $date, period: $period) {
		id
		treatment_id
		date
		period
	}
}
`

func UpdateTreatmentsFollowUp(
	ctx context.Context,
	client graphql.Client,
	id string,
	treatment_id string,
	date int,
	period []Period,
) (*UpdateTreatmentsFollowUpResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateTreatmentsFollowUp",
		Query:  UpdateTreatmentsFollowUp_Operation,
		Variables: &__UpdateTreatmentsFollowUpInput{
			Id:           id,
			Treatment_id: treatment_id,
			Date:         date,
			Period:       period,
		},
	}
	var err error

	var data UpdateTreatmentsFollowUpResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createNlpReport.
const createNlpReport_Operation = `
mutation createNlpReport ($version: Int!, $input_symptoms: [String!]!, $input_sentence: String!, $output: [NlpReportOutputInput!]!, $computation_time: Int!) {
	createNlpReport(version: $version, input_symptoms: $input_symptoms, input_sentence: $input_sentence, output: $output, computation_time: $computation_time) {
		id
		version
		input_symptoms
		input_sentence
		output {
			symptom
			present
		}
		computation_time
	}
}
`

func createNlpReport(
	ctx context.Context,
	client graphql.Client,
	version int,
	input_symptoms []string,
	input_sentence string,
	output []NlpReportOutputInput,
	computation_time int,
) (*createNlpReportResponse, error) {
	req := &graphql.Request{
		OpName: "createNlpReport",
		Query:  createNlpReport_Operation,
		Variables: &__createNlpReportInput{
			Version:          version,
			Input_symptoms:   input_symptoms,
			Input_sentence:   input_sentence,
			Output:           output,
			Computation_time: computation_time,
		},
	}
	var err error

	var data createNlpReportResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
